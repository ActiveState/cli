<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi" xmlns:util="http://schemas.microsoft.com/wix/UtilExtension">
	<Product Id="{{ID}}" Name="{{PROJECT}}" Language="1033" Version="1.0.0.0" Manufacturer="ActiveState" UpgradeCode="a8b44798-ee47-4404-8ae3-d821e603b426">
		<Package Id='*' Keywords='Installer' Description="ActiveState Language Runtime"
            Comments='State Tool is a registered trademark of ActiveState' Manufacturer='ActiveState'
            InstallerVersion='200' Languages='1033' Compressed='yes' SummaryCodepage='1252' InstallPrivileges='elevated' AdminImage='yes' InstallScope='perMachine' />

    <!-- Configuration parameters -->
    <Property Id="PROJECT_NAME" Value="ActiveState/{{PROJECT}}" />
    <Property Id="REL_NOTES" Value="{{REL_NOTES}}" />
	<!-- A comma separated list of shortcuts to be installed -->
	<!-- Expected possible values: [PerlCritic] or supply None to build no shortcuts -->
	<Property Id="SHORTCUTS" Value="{{SHORTCUTS}}" />
    <!-- End Configuration parameters -->
    
    <!-- Design assets -->
    <WixVariable Id='WixUIBannerBmp' Value='assets\header.bmp'/>
    <WixVariable Id='WixUIDialogBmp' Value='assets\InstallGraphic.bmp'/>
    <WixVariable Id="WixUILicenseRtf" Value="assets\license.rtf" />
    <Icon Id="perl.ico" SourceFile="perl.ico"/>
    <Property Id="ARPPRODUCTICON" Value="perl.ico" />
    <!-- End Design assets -->

    <MajorUpgrade DowngradeErrorMessage="A newer version of [ProductName] is already installed." />
		<MediaTemplate EmbedCab="yes" />

    <!-- The default directory structure when installing a language runtime. This can be changed via the UI -->
    <Directory Id='TARGETDIR' Name='SourceDir'>
      <Directory Id="WINDOWSVOLUME" >
        <Directory Id='INSTALLDIR' Name='Perl64'>
          <Component Id='DeployDir' Guid='7CF56E89-AA69-4A35-921C-F2CA2F9FE12B'>
            <RemoveFolder Id='INSTALLDIR' On='uninstall' />
            <!-- Required by WiX -->
            <RegistryValue Root='HKLM' Key='SOFTWARE\[Manufacturer]\[ProductName]' Type='string' Value='' KeyPath='yes' />
          </Component>
          <Directory Id="ProgramMenuFolder">
            <Directory Id="ApplicationProgramsFolder" Name="{{PROJECT}}"/>
          </Directory>
        </Directory>
      </Directory>
    </Directory>

    <SetDirectory Id="WINDOWSVOLUME" Value="[WindowsVolume]"/>

	<!-- Build documentation URL shortcut -->
	<DirectoryRef Id="ApplicationProgramsFolder">
		<Component Id="ApplicationShortcut" Guid="9e688401-bf59-46c3-99ae-49295948f7b8">
			<util:InternetShortcut Id="DocumentationShortcut" Name="Documentation" Target="[REL_NOTES]" IconFile="[#PerlIco]" Type="url" />
			<RemoveFolder Id="CleanUpShortCut" Directory="ApplicationProgramsFolder" On="uninstall"/>
			<RegistryValue Root="HKCU" Key="Software\[Manufacturer]\[ProductName]" Name="installed" Type="integer" Value="1" KeyPath="yes"/>
		</Component>
	</DirectoryRef>

    <Property Id='PerlExe' Value='perl.exe' />
    <Property Id='WPerlExe' Value='wperl.exe' />
    
    <Feature Id='Complete' Level='1'>
      <Component Id='ProgIdPerl' Directory='TARGETDIR' Guid='4dda6117-ca9c-4371-a09d-c8575f520a02'>
        <!-- Perl file scripts -->
        <ProgId Id="Perl.Document" Description="!(loc.DescPL)" Advertise='no' Icon='PerlIco'>
          <Extension Id="pl" ContentType="text/x-perl">
            <Verb Id="open" Command="!(loc.ExplorerMenuOpenPL)" TargetProperty="PerlExe" Argument="&quot;%1&quot;" />
          </Extension>
        </ProgId>
        <!-- Windows perl file scripts (started with hidden console) -->
        <ProgId Id="WPerl.Document" Description="!(loc.DescPL)" Advertise='no' Icon='PerlIco'>
          <Extension Id="wpl" ContentType="text/x-w-perl">
            <Verb Id="open" Command="!(loc.ExplorerMenuOpenPL)" TargetProperty="WPerlExe" Argument="&quot;%1&quot;" />
          </Extension>
        </ProgId>
      </Component>
      <ComponentRef Id='DeployDir' />
      <Component Id='InstallHelper' Directory="INSTALLDIR" Guid='4dda6117-ca9c-4371-a09d-c8575f520a01'>
        <!-- We save the value of the install directory to the registry so we can retrieve it on uninstall -->
        <RegistryValue Root="HKLM" Key="Software\[Manufacturer]\[ProductName]" Name="InstallDir" Value="[INSTALLDIR]" Type="string"/>
        <RegistryValue Root="HKLM" Key="Software\[Manufacturer]\[ProductName]" Name="ShortcutDir" Value="[ApplicationProgramsFolder]" Type="string"/>
		<RemoveFolder Id='CleanupApplicationFolder' On='uninstall' />
      </Component>
      <Component Id='cmpPerlIco' Directory='INSTALLDIR' Guid='1069a43f-9ec5-4ad8-b15c-2452b56c9b04'>
        <File Id='PerlIco' Source='perl.ico' />
      </Component>
	  <ComponentRef Id="ApplicationShortcut" />
    </Feature>

    <Property Id="REMEMBER">
			<!-- Retrieve the value of the installation directory from the registry -->
			<RegistrySearch Id="RememberProperty" Root="HKLM" Key="SOFTWARE\[Manufacturer]\[ProductName]" Name="InstallDir" Type="raw" />
		</Property>

	<Property Id="REMEMBER_SHORTCUTDIR">
		<!-- Retrieve the value of the installation directory from the registry -->
		<RegistrySearch Id="RememberShortcutProperty" Root="HKLM" Key="SOFTWARE\[Manufacturer]\[ProductName]" Name="ShortcutDir" Type="raw" />
	</Property>

		<Property Id="MSIUSEREALADMINDETECTION" Value="1" />

		<UI Id="WixUI_InstallDir">
			<TextStyle Id="WixUI_Font_Normal" FaceName="Tahoma" Size="8" />
			<TextStyle Id="WixUI_Font_Bigger" FaceName="Tahoma" Size="12" />
			<TextStyle Id="WixUI_Font_Title" FaceName="Tahoma" Size="9" Bold="yes" />

			<Property Id="DefaultUIFont" Value="WixUI_Font_Normal" />
			<Property Id="WixUI_Mode" Value="InstallDir" />

			<!-- Must set WIXUI_INSTALLDIR to our default installation directory in order to pass it to the UI -->
			<Property Id="WIXUI_INSTALLDIR" Value="INSTALLDIR" />

			<DialogRef Id="BrowseDlg" />
			<DialogRef Id="DiskCostDlg" />
			<DialogRef Id="ErrorDlg" />
			<DialogRef Id="FatalError" />
			<DialogRef Id="FilesInUse" />
			<DialogRef Id="MsiRMFilesInUse" />
			<DialogRef Id="PrepareDlg" />
			<DialogRef Id="ProgressDlg" />
			<DialogRef Id="ResumeDlg" />
			<DialogRef Id="UserExit" />

			<Publish Dialog="BrowseDlg" Control="OK" Event="DoAction" Value="WixUIValidatePath" Order="3">1</Publish>
			<Publish Dialog="BrowseDlg" Control="OK" Event="SpawnDialog" Value="InvalidDirDlg" Order="4"><![CDATA[NOT WIXUI_DONTVALIDATEPATH AND WIXUI_INSTALLDIR_VALID<>"1"]]></Publish>

			<Publish Dialog="CustomExitDialog" Control="Finish2" Event="EndDialog" Value="Return" Order="999">1</Publish>

			<Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="PrivacyConsentDlg">NOT Installed</Publish>
			<Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg">Installed AND PATCH</Publish>

      <Publish Dialog="PrivacyConsentDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">1</Publish>
      <Publish Dialog="PrivacyConsentDlg" Control="Next" Event="NewDialog" Value="LicenseAgreementDlg">1</Publish>

      <Publish Dialog="LicenseAgreementDlg" Control="Back" Event="NewDialog" Value="PrivacyConsentDlg">1</Publish>
			<Publish Dialog="LicenseAgreementDlg" Control="Next" Event="NewDialog" Value="InstallDirDlg">LicenseAccepted = "1"</Publish>

			<Publish Dialog="InstallDirDlg" Control="Back" Event="NewDialog" Value="LicenseAgreementDlg">1</Publish>
			<Publish Dialog="InstallDirDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">1</Publish>
			<Publish Dialog="InstallDirDlg" Control="Next" Event="SetTargetPath" Value="[WIXUI_INSTALLDIR]" Order="1">1</Publish>
			<Publish Dialog="InstallDirDlg" Control="Next" Event="DoAction" Value="WixUIValidatePath" Order="2">NOT WIXUI_DONTVALIDATEPATH</Publish>
			<Publish Dialog="InstallDirDlg" Control="Next" Event="SpawnDialog" Value="InvalidDirDlg" Order="3"><![CDATA[NOT WIXUI_DONTVALIDATEPATH AND WIXUI_INSTALLDIR_VALID<>"1"]]></Publish>
			<Publish Dialog="InstallDirDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg" Order="4">WIXUI_DONTVALIDATEPATH OR WIXUI_INSTALLDIR_VALID="1"</Publish>
			<Publish Dialog="InstallDirDlg" Control="ChangeFolder" Property="_BrowseProperty" Value="[WIXUI_INSTALLDIR]" Order="1">1</Publish>
			<Publish Dialog="InstallDirDlg" Control="ChangeFolder" Event="SpawnDialog" Value="BrowseDlg" Order="2">1</Publish>

			<Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="InstallDirDlg" Order="1">NOT Installed</Publish>
			<Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="MaintenanceTypeDlg" Order="2">Installed AND NOT PATCH</Publish>
			<Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg" Order="2">Installed AND PATCH</Publish>

			<Publish Dialog="MaintenanceWelcomeDlg" Control="Next" Event="NewDialog" Value="MaintenanceTypeDlg">1</Publish>

			<Publish Dialog="MaintenanceTypeDlg" Control="ChangeButton" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>
			<Publish Dialog="MaintenanceTypeDlg" Control="RepairButton" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>
			<Publish Dialog="MaintenanceTypeDlg" Control="RemoveButton" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>
			<Publish Dialog="MaintenanceTypeDlg" Control="Back" Event="NewDialog" Value="MaintenanceWelcomeDlg">1</Publish>

		</UI>

		<UIRef Id="WixUI_Common" />
    <UIRef Id="CustomUI_PrivacyConsent" />

		<Property Id="IS_MODIFY" Value="false" />

		<InstallUISequence>
			<Custom Action="StateCommandExists" After="CostFinalize">NOT Installed OR ((Installed AND NOT REINSTALL) AND NOT REMOVE~="ALL")</Custom>
			<Custom Action="SetIsModify" After="StateCommandExists">(Installed AND NOT REINSTALL) AND NOT REMOVE~="ALL"</Custom>
			<Custom Action="SetInstallDirOnModify" After="SetIsModify">(Installed AND NOT REINSTALL) AND NOT REMOVE~="ALL"</Custom>
    </InstallUISequence>

    <CustomAction Id="SetIsModify" Property="IS_MODIFY" Value="true" />
		
		<CustomAction Id="SetInstallDirOnModify" Directory="INSTALLDIR" Value="[REMEMBER]" />

		<Property Id="STATE_TOOL_PATH" Value="state.exe" />

		<CustomAction Id="SetStateDeployPropertyValues" Property="StateDeploy" Value="INSTALLDIR=[INSTALLDIR];PROJECT_NAME=[PROJECT_NAME];IS_MODIFY=[IS_MODIFY];STATE_TOOL_INSTALLED=[STATE_TOOL_INSTALLED];STATE_TOOL_PATH=[STATE_TOOL_PATH]" />
		<CustomAction Id="SetUninstallProperties" Property="Uninstall" Value="REMEMBER=[REMEMBER];REMEMBER_SHORTCUTDIR=[REMEMBER_SHORTCUTDIR]" />
		<CustomAction Id="SetShortcutInfo" Property="Shortcut" Value="INSTALLDIR=[INSTALLDIR];PROJECT_NAME=[PROJECT_NAME];SHORTCUTS=[SHORTCUTS]" />
		<CustomAction Id="SetRollbackPropertyValues" Property="Rollback" Value="STATE_TOOL_INSTALLED=[STATE_TOOL_INSTALLED];INSTALLDIR=[INSTALLDIR]" />


    <Binary Id="StateCommandCA" SourceFile="$(var.StateCommandExists.TargetDir)$(var.StateCommandExists.TargetName).CA.dll" />
		<CustomAction Id="StateCommandExists" Impersonate="yes" BinaryKey="StateCommandCA" DllEntry="StateCommandExists" Return="check" />

		<Binary Id="StatusCA" SourceFile="$(var.Status.TargetDir)$(var.Status.TargetName).CA.dll" />
		<CustomAction Id="Status" Impersonate="no" BinaryKey="StatusCA" DllEntry="ResetProgress" Execute="deferred" Return="check" />

		<Binary Id="StateDeployCA" SourceFile="$(var.StateDeploy.TargetDir)$(var.StateDeploy.TargetName).CA.dll" />
		<CustomAction Id="StateDeploy" Impersonate="no" BinaryKey="StateDeployCA" DllEntry="StateDeploy" Execute="deferred" Return="check" />

		<Binary Id="ShortcutCA" SourceFile="$(var.Shortcut.TargetDir)$(var.Shortcut.TargetName).CA.dll" />
		<CustomAction Id="Shortcut" Impersonate="no" BinaryKey="ShortcutCA" DllEntry="InstallShortcuts" Execute="deferred" Return="check" />

		<Binary Id="RollbackCA" SourceFile="$(var.Rollback.TargetDir)$(var.Rollback.TargetName).CA.dll" />
		<CustomAction Id="Rollback" Impersonate="no" BinaryKey="RollbackCA" DllEntry="Rollback" Execute="rollback" Return="check" />

		<Binary Id="UninstallCA" SourceFile="$(var.Uninstall.TargetDir)$(var.Uninstall.TargetName).CA.dll" />
		<CustomAction Id="Uninstall" Impersonate="no" BinaryKey="UninstallCA" DllEntry="Uninstall" Execute="deferred" Return="check" />

		<InstallExecuteSequence>
			<Custom Action="Status" After="InstallInitialize">NOT Installed OR ((Installed AND NOT REINSTALL) AND NOT REMOVE~="ALL")</Custom>
			<Custom Action="SetRollbackPropertyValues" After="Status">NOT Installed OR ((Installed AND NOT REINSTALL) AND NOT REMOVE~="ALL")</Custom>
			<Custom Action="SetStateDeployPropertyValues" After="SetRollbackPropertyValues">NOT Installed OR ((Installed AND NOT REINSTALL) AND NOT REMOVE~="ALL")</Custom>
			<Custom Action="Rollback" After="SetStateDeployPropertyValues">NOT Installed OR ((Installed AND NOT REINSTALL) AND NOT REMOVE~="ALL")</Custom>
			<Custom Action="StateDeploy" After="Rollback">NOT Installed OR ((Installed AND NOT REINSTALL) AND NOT REMOVE~="ALL")</Custom>
			<Custom Action="SetShortcutInfo" After="CreateShortcuts">NOT Installed OR ((Installed AND NOT REINSTALL) AND NOT REMOVE~="ALL")</Custom>
			<Custom Action="Shortcut" After="SetShortcutInfo">NOT Installed OR ((Installed AND NOT REINSTALL) AND NOT REMOVE~="ALL")</Custom>
			<Custom Action="SetUninstallProperties" After="RemoveFiles">REMOVE="ALL"</Custom>
			<Custom Action="Uninstall" After="SetUninstallProperties">REMOVE="ALL"</Custom>
		</InstallExecuteSequence>
	</Product>
</Wix>
