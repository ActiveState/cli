<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi" xmlns:util="http://schemas.microsoft.com/wix/UtilExtension" xmlns:netfx="http://schemas.microsoft.com/wix/NetFxExtension">
    <Product Id="{{.ID}}" Name="{{.ProjectName}}" Language="1033" Version="{{.Version}}" Manufacturer="ActiveState" UpgradeCode="{{.ID}}">
        <Package Id='*' Keywords='Installer' Description="ActiveState Language Runtime"
            Comments='State Tool is a registered trademark of ActiveState' Manufacturer='ActiveState'
            InstallerVersion='200' Languages='1033' Compressed='yes' SummaryCodepage='1252' InstallPrivileges='elevated' AdminImage='yes' InstallScope='perMachine' />

    <!-- Configuration parameters -->
    <Property Id="PROJECT_OWNER_AND_NAME" Value="{{.ProjectOwnerAndName}}" />
    <Property Id="REL_NOTES" Value="{{.ReleaseNotes}}" />
    <Property Id="PRESET" Value="{{.Preset}}" />
	<!-- Represents if this project is private or public -->
	<Property Id="VISIBILITY" Value="{{.Visibility}}" />
	<Property Id="AS_USERNAME" Secure="yes" />
	<Property Id="AS_PASSWORD" Secure="yes" />
	<Property Id="AS_TOTP" Secure="yes" />
	<Property Id="CODE_INSTALLED" Value="false" />
    <!-- End Configuration parameters -->

    <PropertyRef Id="WIX_IS_NETFRAMEWORK_45_OR_LATER_INSTALLED"/>
    <Condition Message="This application requires .NET Framework 4.5.0 or later. Please install the .NET Framework then run this installer again.  The installer can be downloaded from https://www.microsoft.com/en-us/download/details.aspx?id=42643.">
      <![CDATA[Installed OR WIX_IS_NETFRAMEWORK_45_OR_LATER_INSTALLED]]>
    </Condition>

    <!-- Design assets -->
    <WixVariable Id='WixUIBannerBmp' Value='assets\header.bmp'/>
    <WixVariable Id='WixUIDialogBmp' Value='assets\InstallGraphic.bmp'/>
    <WixVariable Id="WixUILicenseRtf" Value="assets\license.rtf" />
    <Icon Id="InstallerIcon" SourceFile="{{.Icon}}"/>
	<Property Id="ARPPRODUCTICON" Value="InstallerIcon" />
    <!-- End Design assets -->

    <MajorUpgrade DowngradeErrorMessage="A newer version of [ProductName] is already installed." />
		<MediaTemplate EmbedCab="yes" />

    <!-- The default directory structure when installing a language runtime. This can be changed via the UI -->
    <Directory Id='TARGETDIR' Name='SourceDir'>
      <Directory Id="WINDOWSVOLUME" >
        <Directory Id='INSTALLDIR' Name='Perl64'>
          <Component Id='DeployDir' Guid='7CF56E89-AA69-4A35-921C-F2CA2F9FE12B'>
            <RemoveFolder Id='INSTALLDIR' On='uninstall' />
            <!-- Required by WiX -->
            <RegistryValue Root='HKLM' Key='SOFTWARE\[Manufacturer]\[ProductName]' Type='string' Value='' KeyPath='yes' />
          </Component>
          <Directory Id="ProgramMenuFolder">
            <Directory Id="ApplicationProgramsFolder" Name="{{.ProjectName}}"/>
          </Directory>
        </Directory>
      </Directory>
    </Directory>

    <SetDirectory Id="WINDOWSVOLUME" Value="[WindowsVolume]"/>

  <!-- Application Programs Folder for Shortcuts -->
	<DirectoryRef Id="ApplicationProgramsFolder">
	</DirectoryRef>
    
    <Feature Id='Complete' Level='1'>
      <ComponentRef Id='DeployDir' />
      <Component Id='InstallHelper' Directory="INSTALLDIR" Guid='4dda6117-ca9c-4371-a09d-c8575f520a01'>
        <!-- We save the value of the install directory to the registry so we can retrieve it on uninstall -->
        <RegistryValue Root="HKLM" Key="Software\[Manufacturer]\[ProductName]" Name="InstallDir" Value="[INSTALLDIR]" Type="string"/>
        <RegistryValue Root="HKLM" Key="Software\[Manufacturer]\[ProductName]" Name="ShortcutDir" Value="[ApplicationProgramsFolder]" Type="string"/>
		<RemoveFolder Id='CleanupApplicationFolder' On='uninstall' />
      </Component>
      <Component Id='cmpInstallerIco' Directory='INSTALLDIR' Guid='1069a43f-9ec5-4ad8-b15c-2452b56c9b04'>
        <File Id='InstallerIco' Source='{{.Icon}}' />
      </Component>
    </Feature>

    <Property Id="REMEMBER">
			<!-- Retrieve the value of the installation directory from the registry -->
			<RegistrySearch Id="RememberProperty" Root="HKLM" Key="SOFTWARE\[Manufacturer]\[ProductName]" Name="InstallDir" Type="raw" />
		</Property>

	<Property Id="REMEMBER_SHORTCUTDIR">
		<!-- Retrieve the value of the installation directory from the registry -->
		<RegistrySearch Id="RememberShortcutProperty" Root="HKLM" Key="SOFTWARE\[Manufacturer]\[ProductName]" Name="ShortcutDir" Type="raw" />
	</Property>

    <!-- Find the default browser to open the release pages in -->
    <Property Id="BROWSER">
      <RegistrySearch Id='DefaultBrowser' Type='raw' Root='HKCR' Key='http\shell\open\command' />
    </Property>

    <Property Id="STATE_TOOL_WIZARD_CHECK_BOX" Value="1" />
    <Property Id="MSIUSEREALADMINDETECTION" Value="1" />
	<Property Id="COMMIT_ID" Value="{{.CommitID}}" />

		<UI Id="WixUI_InstallDir">
			<TextStyle Id="WixUI_Font_Normal" FaceName="Tahoma" Size="8" />
			<TextStyle Id="WixUI_Font_Bigger" FaceName="Tahoma" Size="12" />
			<TextStyle Id="WixUI_Font_Title" FaceName="Tahoma" Size="9" Bold="yes" />

			<Property Id="DefaultUIFont" Value="WixUI_Font_Normal" />
			<Property Id="WixUI_Mode" Value="InstallDir" />

			<!-- Must set WIXUI_INSTALLDIR to our default installation directory in order to pass it to the UI -->
			<Property Id="WIXUI_INSTALLDIR" Value="INSTALLDIR" />

			<DialogRef Id="BrowseDlg" />
			<DialogRef Id="DiskCostDlg" />
			<DialogRef Id="ErrorDlg" />
			<DialogRef Id="FilesInUse" />
			<DialogRef Id="MsiRMFilesInUse" />
			<DialogRef Id="PrepareDlg" />
			<DialogRef Id="ProgressDlg" />
			<DialogRef Id="ResumeDlg" />
			<DialogRef Id="UserExit" />

			<Publish Dialog="BrowseDlg" Control="OK" Event="DoAction" Value="WixUIValidatePath" Order="3">1</Publish>
			<Publish Dialog="BrowseDlg" Control="OK" Event="SpawnDialog" Value="InvalidDirDlg" Order="4"><![CDATA[NOT WIXUI_DONTVALIDATEPATH AND WIXUI_INSTALLDIR_VALID<>"1"]]></Publish>

			<Publish Dialog="CustomExitDialog" Control="Finish" Event="EndDialog" Value="Return" Order="999">1</Publish>
      		<Publish Dialog="CustomExitDialog" Control="Finish" Event="DoAction" Value="LaunchStateToolWizardInstalled">STATE_TOOL_WIZARD_CHECK_BOX=1 and NOT Installed and STATE_TOOL_INSTALLED = "true"</Publish>
      		<Publish Dialog="CustomExitDialog" Control="Finish" Event="DoAction" Value="LaunchStateToolWizardNotInstalled">STATE_TOOL_WIZARD_CHECK_BOX=1 and NOT Installed and STATE_TOOL_INSTALLED = "false"</Publish>
			<Publish Dialog="CustomExitDialog" Control="Finish" Event="DoAction" Value="LaunchReleaseNotes">STATE_TOOL_WIZARD_REL_NOTES_CHECK_BOX=1 and NOT Installed</Publish>
			<Publish Dialog="CustomExitDialog" Control="Finish" Event="DoAction" Value="InstallVSCodeExt">INSTALL_VSCODE_EXT_CHECK_BOX=1 and NOT Installed</Publish>
            <Publish Dialog="CustomExitDialog" Control="Finish" Event="DoAction" Value="GAReportSuccess">1</Publish>


          <Publish Dialog="CustomFatalError" Control="Finish" Event="EndDialog" Value="Return" Order="999">1</Publish>
            <Publish Dialog="CustomFatalError" Control="Finish" Event="DoAction" Value="GAPixel">NOT WIX_IS_NETFRAMEWORK_45_OR_LATER_INSTALLED</Publish>
            <Publish Dialog="CustomFatalError" Control="Finish" Event="DoAction" Value="GAReportFailure">1</Publish>

			<Publish Dialog="UserExit" Control="Finish" Event="DoAction" Value="GAReportUserExit">1</Publish>

            <Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="PrivacyConsentDlg">NOT Installed</Publish>
			<Publish Dialog="WelcomeDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg">Installed AND PATCH</Publish>

			<Publish Dialog="PrivacyConsentDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">1</Publish>
      		<Publish Dialog="PrivacyConsentDlg" Control="Next" Event="NewDialog" Value="LicenseAgreementDlg">1</Publish>

      		<Publish Dialog="LicenseAgreementDlg" Control="Back" Event="NewDialog" Value="PrivacyConsentDlg">1</Publish>
			<Publish Dialog="LicenseAgreementDlg" Control="Next" Event="NewDialog" Value="LoginDlg">LicenseAccepted = "1" AND VISIBILITY = "Private"</Publish>
			<Publish Dialog="LicenseAgreementDlg" Control="Next" Event="NewDialog" Value="InstallDirDlg">LicenseAccepted = "1" AND VISIBILITY = "Public"</Publish>

			<Publish Dialog="LoginDlg" Control="Back" Event="NewDialog" Value="LicenseAgreementDlg">1</Publish>
			<Publish Dialog="LoginDlg" Control="Next" Event="NewDialog" Value="InstallDirDlg">1</Publish>

			<Publish Dialog="InstallDirDlg" Control="Back" Event="NewDialog" Value="LicenseAgreementDlg">1</Publish>
			<Publish Dialog="InstallDirDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg">1</Publish>
			<Publish Dialog="InstallDirDlg" Control="Next" Event="SetTargetPath" Value="[WIXUI_INSTALLDIR]" Order="1">1</Publish>
			<Publish Dialog="InstallDirDlg" Control="Next" Event="DoAction" Value="WixUIValidatePath" Order="2">NOT WIXUI_DONTVALIDATEPATH</Publish>
			<Publish Dialog="InstallDirDlg" Control="Next" Event="SpawnDialog" Value="InvalidDirDlg" Order="3"><![CDATA[NOT WIXUI_DONTVALIDATEPATH AND WIXUI_INSTALLDIR_VALID<>"1"]]></Publish>
			<Publish Dialog="InstallDirDlg" Control="Next" Event="NewDialog" Value="VerifyReadyDlg" Order="4">WIXUI_DONTVALIDATEPATH OR WIXUI_INSTALLDIR_VALID="1"</Publish>
			<Publish Dialog="InstallDirDlg" Control="ChangeFolder" Property="_BrowseProperty" Value="[WIXUI_INSTALLDIR]" Order="1">1</Publish>
			<Publish Dialog="InstallDirDlg" Control="ChangeFolder" Event="SpawnDialog" Value="BrowseDlg" Order="2">1</Publish>

			<Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="InstallDirDlg" Order="1">NOT Installed</Publish>
			<Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="MaintenanceTypeDlg" Order="2">Installed AND NOT PATCH</Publish>
			<Publish Dialog="VerifyReadyDlg" Control="Back" Event="NewDialog" Value="WelcomeDlg" Order="2">Installed AND PATCH</Publish>

			<Publish Dialog="MaintenanceWelcomeDlg" Control="Next" Event="NewDialog" Value="MaintenanceTypeDlg">1</Publish>

			<Publish Dialog="MaintenanceTypeDlg" Control="ChangeButton" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>
			<Publish Dialog="MaintenanceTypeDlg" Control="RepairButton" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>
			<Publish Dialog="MaintenanceTypeDlg" Control="RemoveButton" Event="NewDialog" Value="VerifyReadyDlg">1</Publish>
			<Publish Dialog="MaintenanceTypeDlg" Control="Back" Event="NewDialog" Value="MaintenanceWelcomeDlg">1</Publish>

		</UI>

    <CustomAction Id="LaunchStateToolWizardInstalled" Execute="immediate" Directory="INSTALLDIR" ExeCommand="cmd.exe /k &quot;[STATE_TOOL_PATH]&quot; tutorial new-project" Impersonate="yes" Return="asyncNoWait" />
    <CustomAction Id="LaunchStateToolWizardNotInstalled" Execute="immediate" Directory="INSTALLDIR" ExeCommand="cmd.exe /k &quot;[AppDataFolder]\ActiveState\bin\state.exe&quot; tutorial new-project" Impersonate="yes" Return="asyncNoWait" />
	<CustomAction Id='LaunchReleaseNotes' Execute="immediate" Directory="INSTALLDIR" ExeCommand="explorer.exe [REL_NOTES]" Impersonate="yes" Return="asyncNoWait" />
	<CustomAction Id='InstallVSCodeExt' Execute="immediate" Directory="INSTALLDIR" ExeCommand="cmd.exe /c &quot;[CODE_PATH]&quot; --install-extension ActiveState.activestate-platform" Impersonate="yes" Return="asyncNoWait" />


    <UIRef Id="WixUI_Common" />
    <UIRef Id="CustomUI_PrivacyConsent" />

		<Property Id="IS_MODIFY" Value="false" />

		<InstallUISequence>
            <Custom Action="GAReportStart" After="AppSearch">1</Custom>
			<Custom Action="CommandsExist" After="CostFinalize">NOT Installed OR (Installed AND NOT (REMOVE~="ALL"))</Custom>
			<Custom Action="SetIsModify" After="CommandsExist">(Installed AND NOT (REMOVE~="ALL"))</Custom>
			<Custom Action="SetInstallDirOnModify" After="SetIsModify">(Installed AND NOT (REMOVE~="ALL"))</Custom>
    </InstallUISequence>

    <CustomAction Id="SetIsModify" Property="IS_MODIFY" Value="true" />
		
		<CustomAction Id="SetInstallDirOnModify" Directory="INSTALLDIR" Value="[REMEMBER]" />

		<Property Id="STATE_TOOL_PATH" Value="state.exe" />

		<CustomAction 
			Id="SetStateDeployPropertyValues" 
			Property="StateDeploy" 
			Value="INSTALLDIR=[INSTALLDIR];PROJECT_OWNER_AND_NAME=[PROJECT_OWNER_AND_NAME];IS_MODIFY=[IS_MODIFY];STATE_TOOL_INSTALLED=[STATE_TOOL_INSTALLED];STATE_TOOL_PATH=[STATE_TOOL_PATH];AS_USERNAME=[AS_USERNAME];AS_PASSWORD=[AS_PASSWORD];AS_TOTP=[AS_TOTP];UI_LEVEL=[UILevel];COMMIT_ID=[COMMIT_ID]" 
		/>
		<CustomAction Id="SetUninstallProperties" Property="Uninstall" Value="PRESET=[PRESET];REMEMBER=[REMEMBER];REMEMBER_SHORTCUTDIR=[REMEMBER_SHORTCUTDIR];COMMIT_ID=[COMMIT_ID]" />
		<CustomAction Id="SetPresetInfo" Property="Preset" Value="REL_NOTES=[REL_NOTES];INSTALLDIR=[INSTALLDIR];APP_START_MENU_PATH=[ApplicationProgramsFolder];PRESET=[PRESET];COMMIT_ID=[COMMIT_ID]" />
		<CustomAction Id="SetRollbackPropertyValues" Property="Rollback" Value="STATE_TOOL_INSTALLED=[STATE_TOOL_INSTALLED];INSTALLDIR=[INSTALLDIR];COMMIT_ID=[COMMIT_ID]" />

        <Binary Id="GAPixelCA" SourceFile="$(var.GAPixel.TargetDir)$(var.GAPixel.TargetName).CA.dll" />
        <CustomAction Id="GAPixel" Impersonate="yes" BinaryKey="GAPixelCA" DllEntry="SendPixel" Return="ignore" />

        <Binary Id="CommandsCA" SourceFile="$(var.StateCommandExists.TargetDir)$(var.StateCommandExists.TargetName).CA.dll" />
		<CustomAction Id="CommandsExist" Impersonate="yes" BinaryKey="CommandsCA" DllEntry="CheckCommands" Return="check" />

		<Binary Id="StatusCA" SourceFile="$(var.Status.TargetDir)$(var.Status.TargetName).CA.dll" />
		<CustomAction Id="Status" Impersonate="no" BinaryKey="StatusCA" DllEntry="ResetProgress" Execute="deferred" Return="check" />

		<Binary Id="StateDeployCA" SourceFile="$(var.StateDeploy.TargetDir)$(var.StateDeploy.TargetName).CA.dll" />
		<CustomAction Id="StateDeploy" Impersonate="no" BinaryKey="StateDeployCA" DllEntry="StateDeploy" Execute="deferred" Return="check" />
		<CustomAction Id="GAReportStart" Impersonate="yes" BinaryKey="StateDeployCA" DllEntry="GAReportStart" Execute="immediate" Return="ignore" />
		<CustomAction Id="GAReportUserExit" Impersonate="yes" BinaryKey="StateDeployCA" DllEntry="GAReportUserExit" Execute="immediate" Return="ignore" />
		<CustomAction Id="GAReportFailure" Impersonate="yes" BinaryKey="StateDeployCA" DllEntry="GAReportFailure" Execute="immediate" Return="ignore" />
		<CustomAction Id="GAReportSuccess" Impersonate="yes" BinaryKey="StateDeployCA" DllEntry="GAReportSuccess" Execute="immediate" Return="ignore" />

		<Binary Id="PresetCA" SourceFile="$(var.Preset.TargetDir)$(var.Preset.TargetName).CA.dll" />
		<CustomAction Id="Preset" Impersonate="no" BinaryKey="PresetCA" DllEntry="InstallPreset" Execute="deferred" Return="check" />

		<Binary Id="RollbackCA" SourceFile="$(var.Rollback.TargetDir)$(var.Rollback.TargetName).CA.dll" />
		<CustomAction Id="Rollback" Impersonate="no" BinaryKey="RollbackCA" DllEntry="Rollback" Execute="rollback" Return="check" />

		<Binary Id="UninstallCA" SourceFile="$(var.Uninstall.TargetDir)$(var.Uninstall.TargetName).CA.dll" />
		<CustomAction Id="Uninstall" Impersonate="no" BinaryKey="UninstallCA" DllEntry="Uninstall" Execute="deferred" Return="check" />

		<InstallExecuteSequence>
			<Custom Action="Status" After="InstallInitialize">NOT Installed OR (Installed AND NOT (REMOVE~="ALL"))</Custom>
			<Custom Action="SetRollbackPropertyValues" After="Status">NOT Installed OR (Installed AND NOT (REMOVE~="ALL"))</Custom>
			<Custom Action="SetStateDeployPropertyValues" After="SetRollbackPropertyValues">NOT Installed OR (Installed AND NOT (REMOVE~="ALL"))</Custom>
			<Custom Action="Rollback" After="SetStateDeployPropertyValues">NOT Installed OR (Installed AND NOT (REMOVE~="ALL"))</Custom>
			<Custom Action="StateDeploy" After="Rollback">NOT Installed OR (Installed AND NOT (REMOVE~="ALL"))</Custom>
			<Custom Action="SetPresetInfo" After="CreateShortcuts">NOT Installed OR (Installed AND NOT (REMOVE~="ALL"))</Custom>
			<Custom Action="Preset" After="SetPresetInfo">NOT Installed OR (Installed AND NOT (REMOVE~="ALL"))</Custom>
			<Custom Action="SetUninstallProperties" After="RemoveFiles">REMOVE~="ALL"</Custom>
			<Custom Action="Uninstall" After="SetUninstallProperties">REMOVE~="ALL"</Custom>
		</InstallExecuteSequence>
	</Product>
</Wix>
