<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.EntityFrameworkCore.Relational</name>
    </assembly>
    <members>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.Migrate(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)">
            <summary>
                <para>
                    Applies any pending migrations for the context to the database. Will create the database
                    if it does not already exist.
                </para>
                <para>
                    Note that this API is mutually exclusive with DbContext.Database.EnsureCreated(). EnsureCreated does not use migrations
                    to create the database and therefore the database that is created cannot be later updated using migrations.
                </para>
            </summary>
            <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)">
            <summary>
                Gets all the migrations that are defined in the configured migrations assembly.
            </summary>
            <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context.</param>
            <returns>The list of migrations.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)">
            <summary>
                Gets all migrations that have been applied to the target database.
            </summary>
            <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context.</param>
            <returns> The list of migrations. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetAppliedMigrationsAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)">
            <summary>
                Asynchronously gets all migrations that have been applied to the target database.
            </summary>
            <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context.</param>
            <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
            <returns> A task that represents the asynchronous operation. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrations(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade)">
            <summary>
                Gets all migrations that are defined in the assembly but haven't been applied to the target database.
            </summary>
            <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context.</param>
            <returns> The list of migrations. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.GetPendingMigrationsAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)">
            <summary>
                Asynchronously gets all migrations that are defined in the assembly but haven't been applied to the target database.
            </summary>
            <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context.</param>
            <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
            <returns> A task that represents the asynchronous operation. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalDatabaseFacadeExtensions.MigrateAsync(Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade,System.Threading.CancellationToken)">
            <summary>
                <para>
                    Asynchronously applies any pending migrations for the context to the database. Will create the database
                    if it does not already exist.
                </para>
                <para>
                    Note that this API is mutually exclusive with DbContext.Database.EnsureCreated(). EnsureCreated does not use migrations
                    to create the database and therefore the database that is created cannot be later updated using migrations.
                </para>
            </summary>
            <param name="databaseFacade"> The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> for the context. </param>
            <param name="cancellationToken"> A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete. </param>
            <returns> A task that represents the asynchronous migration operation. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions">
            <summary>
                Relational database specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)">
            <summary>
                Configures the table that the entity maps to when targeting a relational database.
            </summary>
            <param name="entityTypeBuilder"> The builder for the entity type being configured. </param>
            <param name="name"> The name of the table. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String)">
            <summary>
                Configures the table that the entity maps to when targeting a relational database.
            </summary>
            <typeparam name="TEntity"> The entity type being configured. </typeparam>
            <param name="entityTypeBuilder"> The builder for the entity type being configured. </param>
            <param name="name"> The name of the table. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.String)">
            <summary>
                Configures the table that the entity maps to when targeting a relational database.
            </summary>
            <param name="entityTypeBuilder"> The builder for the entity type being configured. </param>
            <param name="name"> The name of the table. </param>
            <param name="schema"> The schema of the table. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.ToTable``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.String,System.String)">
            <summary>
                Configures the table that the entity maps to when targeting a relational database.
            </summary>
            <typeparam name="TEntity"> The entity type being configured. </typeparam>
            <param name="entityTypeBuilder"> The builder for the entity type being configured. </param>
            <param name="name"> The name of the table. </param>
            <param name="schema"> The schema of the table. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder)">
            <summary>
                Configures the discriminator column used to identify which entity type each row in a table represents
                when an inheritance hierarchy is mapped to a single table in a relational database.
            </summary>
            <param name="entityTypeBuilder"> The builder for the entity type being configured. </param>
            <returns> A builder that allows the discriminator column to be configured. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String,System.Type)">
            <summary>
                Configures the discriminator column used to identify which entity type each row in a table represents
                when an inheritance hierarchy is mapped to a single table in a relational database.
            </summary>
            <param name="entityTypeBuilder"> The builder for the entity type being configured. </param>
            <param name="name"> The name of the discriminator column. </param>
            <param name="discriminatorType"> The type of values stored in the discriminator column. </param>
            <returns> A builder that allows the discriminator column to be configured. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``1(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder,System.String)">
            <summary>
                Configures the discriminator column used to identify which entity type each row in a table represents
                when an inheritance hierarchy is mapped to a single table in a relational database.
            </summary>
            <typeparam name="TDiscriminator"> The type of values stored in the discriminator column. </typeparam>
            <param name="entityTypeBuilder"> The builder for the entity type being configured. </param>
            <param name="name"> The name of the discriminator column. </param>
            <returns> A builder that allows the discriminator column to be configured. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalEntityTypeBuilderExtensions.HasDiscriminator``2(Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
                Configures the discriminator column used to identify which entity type each row in a table represents
                when an inheritance hierarchy is mapped to a single table in a relational database.
            </summary>
            <typeparam name="TEntity"> The entity type being configured. </typeparam>
            <typeparam name="TDiscriminator"> The type of values stored in the discriminator column. </typeparam>
            <param name="entityTypeBuilder"> The builder for the entity type being configured. </param>
            <param name="propertyExpression">
                A lambda expression representing the property to be used as the discriminator (
                <c>blog => blog.Discriminator</c>).
            </param>
            <returns> A builder that allows the discriminator column to be configured. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions">
            <summary>
                Relational database specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalIndexBuilderExtensions.HasName(Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder,System.String)">
            <summary>
                Configures the name of the index in the database when targeting a relational database.
            </summary>
            <param name="indexBuilder"> The builder for the index being configured. </param>
            <param name="name"> The name of the index. </param>
            <returns> A builder to further configure the index. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.RelationalKeyBuilderExtensions">
            <summary>
                Relational database specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalKeyBuilderExtensions.HasName(Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder,System.String)">
            <summary>
                Configures the name of the key constraint in the database when targeting a relational database.
            </summary>
            <param name="keyBuilder"> The builder for the key being configured. </param>
            <param name="name"> The name of the key. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions">
            <summary>
                Relational database specific extension methods for metadata.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty)">
            <summary>
                Gets the relational database specific metadata for a property.
            </summary>
            <param name="property"> The property to get metadata for. </param>
            <returns> The relational database specific metadata for the property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the relational database specific metadata for a property.
            </summary>
            <param name="property"> The property to get metadata for. </param>
            <returns> The relational database specific metadata for the property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType)">
            <summary>
                Gets the relational database specific metadata for an entity.
            </summary>
            <param name="entityType"> The entity to get metadata for. </param>
            <returns> The relational database specific metadata for the entity. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                Gets the relational database specific metadata for an entity.
            </summary>
            <param name="entityType"> The entity to get metadata for. </param>
            <returns> The relational database specific metadata for the entity. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IMutableKey)">
            <summary>
                Gets the relational database specific metadata for a key.
            </summary>
            <param name="key"> The key to get metadata for. </param>
            <returns> The relational database specific metadata for the key. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IKey)">
            <summary>
                Gets the relational database specific metadata for a key.
            </summary>
            <param name="key"> The key to get metadata for. </param>
            <returns> The relational database specific metadata for the key. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IMutableIndex)">
            <summary>
                Gets the relational database specific metadata for an index.
            </summary>
            <param name="index"> The index to get metadata for. </param>
            <returns> The relational database specific metadata for the index. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IIndex)">
            <summary>
                Gets the relational database specific metadata for an index.
            </summary>
            <param name="index"> The index to get metadata for. </param>
            <returns> The relational database specific metadata for the index. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey)">
            <summary>
                Gets the relational database specific metadata for a foreign key.
            </summary>
            <param name="foreignKey"> The foreign key to get metadata for. </param>
            <returns> The relational database specific metadata for the foreign key. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                Gets the relational database specific metadata for a foreign key.
            </summary>
            <param name="foreignKey"> The foreign key to get metadata for. </param>
            <returns> The relational database specific metadata for the foreign key. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IMutableModel)">
            <summary>
                Gets the relational database specific metadata for a model.
            </summary>
            <param name="model"> The model to get metadata for. </param>
            <returns> The relational database specific metadata for the model. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalMetadataExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                Gets the relational database specific metadata for a model.
            </summary>
            <param name="model"> The model to get metadata for. </param>
            <returns> The relational database specific metadata for the model. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions">
            <summary>
                Relational database specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.HasSequence(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String)">
            <summary>
                Configures a database sequence when targeting a relational database.
            </summary>
            <param name="modelBuilder"> The model builder. </param>
            <param name="name"> The name of the sequence. </param>
            <param name="schema">The schema of the sequence. </param>
            <returns> A builder to further configure the sequence. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.HasSequence(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder})">
            <summary>
                Configures a database sequence when targeting a relational database.
            </summary>
            <param name="modelBuilder"> The model builder. </param>
            <param name="name"> The name of the sequence. </param>
            <param name="builderAction"> An action that performs configuration of the sequence. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.HasSequence(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder})">
            <summary>
                Configures a database sequence when targeting a relational database.
            </summary>
            <param name="modelBuilder"> The model builder. </param>
            <param name="name"> The name of the sequence. </param>
            <param name="schema">The schema of the sequence. </param>
            <param name="builderAction"> An action that performs configuration of the sequence. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.HasSequence(Microsoft.EntityFrameworkCore.ModelBuilder,System.Type,System.String,System.String)">
            <summary>
                Configures a database sequence when targeting a relational database.
            </summary>
            <param name="clrType"> The type of values the sequence will generate. </param>
            <param name="modelBuilder"> The model builder. </param>
            <param name="name"> The name of the sequence. </param>
            <param name="schema">The schema of the sequence. </param>
            <returns> A builder to further configure the sequence. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.HasSequence(Microsoft.EntityFrameworkCore.ModelBuilder,System.Type,System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder})">
            <summary>
                Configures a database sequence when targeting a relational database.
            </summary>
            <param name="clrType"> The type of values the sequence will generate. </param>
            <param name="modelBuilder"> The model builder. </param>
            <param name="name"> The name of the sequence. </param>
            <param name="builderAction"> An action that performs configuration of the sequence. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.HasSequence(Microsoft.EntityFrameworkCore.ModelBuilder,System.Type,System.String,System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder})">
            <summary>
                Configures a database sequence when targeting a relational database.
            </summary>
            <param name="clrType"> The type of values the sequence will generate. </param>
            <param name="modelBuilder"> The model builder. </param>
            <param name="name"> The name of the sequence. </param>
            <param name="schema">The schema of the sequence. </param>
            <param name="builderAction"> An action that performs configuration of the sequence. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.HasSequence``1(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String)">
            <summary>
                Configures a database sequence when targeting a relational database.
            </summary>
            <typeparam name="T"> The type of values the sequence will generate. </typeparam>
            <param name="modelBuilder"> The model builder. </param>
            <param name="name"> The name of the sequence. </param>
            <param name="schema">The schema of the sequence. </param>
            <returns> A builder to further configure the sequence. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.HasSequence``1(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder})">
            <summary>
                Configures a database sequence when targeting a relational database.
            </summary>
            <typeparam name="T"> The type of values the sequence will generate. </typeparam>
            <param name="modelBuilder"> The model builder. </param>
            <param name="name"> The name of the sequence. </param>
            <param name="builderAction"> An action that performs configuration of the sequence. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.HasSequence``1(Microsoft.EntityFrameworkCore.ModelBuilder,System.String,System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.RelationalSequenceBuilder})">
            <summary>
                Configures a database sequence when targeting a relational database.
            </summary>
            <typeparam name="T"> The type of values the sequence will generate. </typeparam>
            <param name="modelBuilder"> The model builder. </param>
            <param name="name"> The name of the sequence. </param>
            <param name="schema">The schema of the sequence. </param>
            <param name="builderAction"> An action that performs configuration of the sequence. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalModelBuilderExtensions.HasDefaultSchema(Microsoft.EntityFrameworkCore.ModelBuilder,System.String)">
            <summary>
                Configures the default schema that database objects should be created in, if no schema
                is explicitly configured.
            </summary>
            <param name="modelBuilder"> The model builder. </param>
            <param name="schema"> The default schema. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions">
            <summary>
                Relational database specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnName(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)">
            <summary>
                Configures the column that the property maps to when targeting a relational database.
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="name"> The name of the column. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnName``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)">
            <summary>
                Configures the column that the property maps to when targeting a relational database.
            </summary>
            <typeparam name="TProperty"> The type of the property being configured. </typeparam>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="name"> The name of the column. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnType(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)">
            <summary>
                Configures the data type of the column that the property maps to when targeting a relational database.
                This should be the complete type name, including precision, scale, length, etc.
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="typeName"> The name of the data type of the column. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasColumnType``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)">
            <summary>
                Configures the data type of the column that the property maps to when targeting a relational database.
                This should be the complete type name, including precision, scale, length, etc.
            </summary>
            <typeparam name="TProperty"> The type of the property being configured. </typeparam>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="typeName"> The name of the data type of the column. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValueSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)">
            <summary>
                Configures the default value expression for the column that the property maps to when targeting a relational database.
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="sql"> The SQL expression for the default value of the column. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValueSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)">
            <summary>
                Configures the default value expression for the column that the property maps to when targeting a relational database.
            </summary>
            <typeparam name="TProperty"> The type of the property being configured. </typeparam>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="sql"> The SQL expression for the default value of the column. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasComputedColumnSql(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.String)">
            <summary>
                Configures the property to map to a computed column when targeting a relational database.
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="sql"> The SQL expression that computes values for the column. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasComputedColumnSql``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.String)">
            <summary>
                Configures the property to map to a computed column when targeting a relational database.
            </summary>
            <typeparam name="TProperty"> The type of the property being configured. </typeparam>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="sql"> The SQL expression that computes values for the column. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValue(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder,System.Object)">
            <summary>
                Configures the default value for the column that the property maps to when targeting a relational database.
            </summary>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="value"> The default value of the column. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalPropertyBuilderExtensions.HasDefaultValue``1(Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder{``0},System.Object)">
            <summary>
                Configures the default value for the column that the property maps to when targeting a relational database.
            </summary>
            <typeparam name="TProperty"> The type of the property being configured. </typeparam>
            <param name="propertyBuilder"> The builder for the property being configured. </param>
            <param name="value"> The default value of the column. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.RelationalQueryableExtensions">
            <summary>
                Relational database specific extension methods for LINQ queries.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalQueryableExtensions.FromSql``1(System.Linq.IQueryable{``0},System.String,System.Object[])">
            <summary>
                <para>
                    Creates a LINQ query based on a raw SQL query.
                </para>
                <para>
                    If the database provider supports composing on the supplied SQL, you can compose on top of the raw SQL query using
                    LINQ operators - <code>context.Blogs.FromSql("SELECT * FROM dbo.Blogs").OrderBy(b => b.Name)</code>.
                </para>
                <para>
                    As with any API that accepts SQL it is important to parameterize any user input to protect against a SQL injection
                    attack. You can include parameter place holders in the SQL query string and then supply parameter values as additional
                    arguments. Any parameter values you supply will automatically be converted to a DbParameter -
                    <code>context.Blogs.FromSql("SELECT * FROM [dbo].[SearchBlogs]({0})", userSuppliedSearchTerm)</code>.
                </para>
                <para>
                    You can also construct a DbParameter and supply it to as a parameter value. This allows you to use named
                    parameters in the SQL query string -
                    <code>context.Blogs.FromSql("SELECT * FROM [dbo].[SearchBlogs]({@searchTerm})", new SqlParameter("@searchTerm", userSuppliedSearchTerm))</code>
                </para>
            </summary>
            <typeparam name="TEntity"> The type of the elements of <paramref name="source" />. </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to use as the base of the raw SQL query (typically a <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" />).
            </param>
            <param name="sql"> The raw SQL query. </param>
            <param name="parameters"> The values to be assigned to parameters. </param>
            <returns> An <see cref="T:System.Linq.IQueryable`1" /> representing the raw SQL query. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions">
            <summary>
                Relational database specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.String)">
            <summary>
                Configures the foreign key constraint name for this relationship when targeting a relational database.
            </summary>
            <param name="referenceCollectionBuilder"> The builder being used to configure the relationship. </param>
            <param name="name"> The name of the foreign key constraint. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalReferenceCollectionBuilderExtensions.HasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder{``0,``1},System.String)">
            <summary>
                Configures the foreign key constraint name for this relationship when targeting a relational database.
            </summary>
            <param name="referenceCollectionBuilder"> The builder being used to configure the relationship. </param>
            <param name="name"> The name of the foreign key constraint. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
            <typeparam name="TEntity"> The principal entity type in this relationship. </typeparam>
            <typeparam name="TRelatedEntity"> The dependent entity type in this relationship. </typeparam>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions">
            <summary>
                Relational database specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.String)">
            <summary>
                Configures the foreign key constraint name for this relationship when targeting a relational database.
            </summary>
            <param name="referenceReferenceBuilder"> The builder being used to configure the relationship. </param>
            <param name="name"> The name of the foreign key constraint. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.RelationalReferenceReferenceBuilderExtensions.HasConstraintName``2(Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder{``0,``1},System.String)">
            <summary>
                Configures the foreign key constraint name for this relationship when targeting a relational database.
            </summary>
            <param name="referenceReferenceBuilder"> The builder being used to configure the relationship. </param>
            <param name="name"> The name of the foreign key constraint. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
            <typeparam name="TEntity"> The entity type on one end of the relationship. </typeparam>
            <typeparam name="TRelatedEntity"> The entity type on the other end of the relationship. </typeparam>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.WarningConfigurationBuilderExtensions">
            <summary>
                Relational database specific extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.WarningsConfigurationBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.WarningConfigurationBuilderExtensions.Throw(Microsoft.EntityFrameworkCore.Infrastructure.WarningsConfigurationBuilder,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId[])">
            <summary>
                Causes an exception to be thrown when the specified relational database warnings are generated.
            </summary>
            <param name="warningsConfigurationBuilder"> The builder being used to configure warnings. </param>
            <param name="relationalEventIds">
                The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId" />(s) for the warnings.
            </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.WarningConfigurationBuilderExtensions.Log(Microsoft.EntityFrameworkCore.Infrastructure.WarningsConfigurationBuilder,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId[])">
            <summary>
                Causes a warning to be logged when the specified relational database warnings are generated.
            </summary>
            <param name="warningsConfigurationBuilder"> The builder being used to configure warnings. </param>
            <param name="relationalEventIds">
                The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId" />(s) for the warnings.
            </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.WarningConfigurationBuilderExtensions.Ignore(Microsoft.EntityFrameworkCore.Infrastructure.WarningsConfigurationBuilder,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId[])">
            <summary>
                Causes nothing to happen when the specified relational database warnings are generated.
            </summary>
            <param name="warningsConfigurationBuilder"> The builder being used to configure warnings. </param>
            <param name="relationalEventIds">
                The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId" />(s) for the warnings.
            </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.DbCommandLogData">
            <summary>
                <para>
                    Logging information about a <see cref="T:System.Data.Common.DbCommand" /> that is being executed.
                </para>
                <para>
                    Instances of this class are typically created by Entity Framework and passed to loggers, it is not designed
                    to be directly constructed in your application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.DbCommandLogData.#ctor(System.String,System.Data.CommandType,System.Int32,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.DbParameterLogData},System.Nullable{System.Int64})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.DbParameterLogData" /> class.
            </summary>
            <param name="commandText">
                The command text being executed.
            </param>
            <param name="commandType">
                The type of command being executed.
            </param>
            <param name="commandTimeout">
                The timeout configured for the command.
            </param>
            <param name="parameters">
                Parameters for the command.
            </param>
            <param name="elapsedMilliseconds">
                How many milliseconds the command took to execute (if it has completed).
            </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DbCommandLogData.CommandText">
            <summary>
                Gets the command text being executed.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DbCommandLogData.CommandType">
            <summary>
                Gets the type of command being executed.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DbCommandLogData.CommandTimeout">
            <summary>
                Gets the timeout configured for the command.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DbCommandLogData.Parameters">
            <summary>
                Gets the parameters for the command.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DbCommandLogData.ElapsedMilliseconds">
            <summary>
                Gets how many milliseconds the command took to execute (if it has completed).
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.DbParameterLogData">
            <summary>
                <para>
                    Logging information about the parameters of a <see cref="T:System.Data.Common.DbCommand" /> that is being executed.
                </para>
                <para>
                    Instances of this class are typically created by Entity Framework and passed to loggers, it is not designed
                    to be directly constructed in your application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.DbParameterLogData.#ctor(System.String,System.Object,System.Boolean,System.Data.ParameterDirection,System.Data.DbType,System.Boolean,System.Int32,System.Byte,System.Byte)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.DbParameterLogData" /> class.
            </summary>
            <param name="name">
                The name of the parameter.
            </param>
            <param name="value">
                The value of the parameter.
            </param>
            <param name="hasValue">
                A value indicating whether the parameter has a value (or is assigned null).
            </param>
            <param name="direction">
                The direction of the parameter.
            </param>
            <param name="dbType">
                The type of the parameter.
            </param>
            <param name="nullable">
                A value indicating whether the parameter type is nullable.
            </param>
            <param name="size">
                The size of the type of the parameter.
            </param>
            <param name="precision">
                The precision of the type of the parameter.
            </param>
            <param name="scale">
                The scale of the type of the parameter.
            </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DbParameterLogData.Name">
            <summary>
                Gets the name of the parameter.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DbParameterLogData.Value">
            <summary>
                Gets the value of the parameter.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DbParameterLogData.HasValue">
            <summary>
                Gets a value indicating whether the parameter has a value (or is assigned null).
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DbParameterLogData.Direction">
            <summary>
                Gets the direction of the parameter.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DbParameterLogData.DbType">
            <summary>
                Gets the type of the parameter.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DbParameterLogData.IsNullable">
            <summary>
                Gets a value indicating whether the parameter type is nullable.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DbParameterLogData.Size">
            <summary>
                Gets the size of the type of the parameter.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DbParameterLogData.Precision">
            <summary>
                Gets the precision of the type of the parameter.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DbParameterLogData.Scale">
            <summary>
                Gets the scale of the type of the parameter.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)">
            <summary>
                Executes the command with no results.
            </summary>
            <param name="command"> The command to be executed. </param>
            <param name="connection"> The connection to execute against. </param>
            <returns> The number of rows affected. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)">
            <summary>
                Asynchronously executes the command with no results.
            </summary>
            <param name="command"> The command to be executed. </param>
            <param name="connection"> The connection to execute against. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains the number of rows affected.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)">
            <summary>
                Executes the command with a single scalar result.
            </summary>
            <param name="command"> The command to be executed. </param>
            <param name="connection"> The connection to execute against. </param>
            <returns> The result of the command. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)">
            <summary>
                Asynchronously executes the command with a single scalar result.
            </summary>
            <param name="command"> The command to be executed. </param>
            <param name="connection"> The connection to execute against. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains the result of the command.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)">
            <summary>
                Executes the command with a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> result.
            </summary>
            <param name="command"> The command to be executed. </param>
            <param name="connection"> The connection to execute against. </param>
            <returns> The result of the command. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandExtensions.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)">
            <summary>
                Asynchronously executes the command with a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> result.
            </summary>
            <param name="command"> The command to be executed. </param>
            <param name="connection"> The connection to execute against. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains the result of the command.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper">
            <summary>
                <para>
                    Determines the type mapping to use for byte array properties.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.#ctor(System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Func{System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping})">
            <summary>
                Initialized a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper" /> class.
            </summary>
            <param name="maxBoundedLength"> Maximum length of data that can be stored in a byte array property. </param>
            <param name="defaultMapping"> Default mapping to be used. </param>
            <param name="unboundedMapping"> Mapping to be used for properties with no length specified. </param>
            <param name="keyMapping"> Mapping to be used for key properties. </param>
            <param name="rowVersionMapping"> Mapping to be used for properties being used as a row version. </param>
            <param name="createBoundedMapping"> Function to create a mapping for a property with a given length. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.MaxBoundedLength">
            <summary>
                Gets the maximum length of data that can be stored in a byte array property
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.DefaultMapping">
            <summary>
                Gets the default mapping to be used.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.UnboundedMapping">
            <summary>
                Gets the mapping to be used for properties with no length specified
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.KeyMapping">
            <summary>
                Gets the mapping to be used for key properties
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.RowVersionMapping">
            <summary>
                Gets the mapping to be used for properties being used as a row version.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.CreateBoundedMapping">
            <summary>
                Gets a function to create a mapping for a property with a given length.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ByteArrayRelationalTypeMapper.FindMapping(System.Boolean,System.Boolean,System.Nullable{System.Int32})">
            <summary>
                Gets the mapping for a property.
            </summary>
            <param name="rowVersion">
                A value indicating whether the property is being used as a row version.
            </param>
            <param name="keyOrIndex">
                A value indicating whether the property is being used as a key and/or index.
            </param>
            <param name="size">
                The configured length of the property, or null if it is unbounded.
            </param>
            <returns> The mapping to be used for the property. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions">
            <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.DbContextTransactionExtensions.GetDbTransaction(Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction)">
            <summary>
                Gets the underlying <see cref="T:System.Data.Common.DbTransaction" /> for the given transaction. Throws if the database being targeted
                is not a relational database that uses <see cref="T:System.Data.Common.DbTransaction" />.
            </summary>
            <param name="dbContextTransaction"> The transaction to get the <see cref="T:System.Data.Common.DbTransaction" /> from. </param>
            <returns> The underlying <see cref="T:System.Data.Common.DbTransaction" />. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper">
            <summary>
                <para>
                    Determines the type mapping to use for byte array properties.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IByteArrayRelationalTypeMapper.FindMapping(System.Boolean,System.Boolean,System.Nullable{System.Int32})">
            <summary>
                Gets the mapping for a property.
            </summary>
            <param name="rowVersion">
                A value indicating whether the property is being used as a row version.
            </param>
            <param name="keyOrIndex">
                A value indicating whether the property is being used as a key and/or index.
            </param>
            <param name="size">
                The configured length of the property, or null if it is unbounded.
            </param>
            <returns> The mapping to be used for the property. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory">
            <summary>
                <para>
                    Creates instances of <see cref="T:Microsoft.EntityFrameworkCore.Storage.ParameterNameGenerator" />.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory.Create">
            <summary>
                Gets a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.ParameterNameGenerator" />.
            </summary>
            <returns> The newly created <see cref="T:Microsoft.EntityFrameworkCore.Storage.ParameterNameGenerator" />. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder">
            <summary>
                <para>
                    Creates commands based on raw SQL command text.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder.Build(System.String)">
            <summary>
                Creates a new command based on SQL command text.
            </summary>
            <param name="sql"> The command text. </param>
            <returns> The newly created command. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder.Build(System.String,System.Collections.Generic.IReadOnlyList{System.Object})">
            <summary>
                Creates a new command based on SQL command text.
            </summary>
            <param name="sql"> The command text. </param>
            <param name="parameters"> Parameters for the command. </param>
            <returns> The newly created command. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand">
            <summary>
                <para>
                    A command to be executed against a relational database.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.CommandText">
            <summary>
                Gets the command text to be executed.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.Parameters">
            <summary>
                Gets the parameters for the command.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                Executes the command with no results.
            </summary>
            <param name="connection"> The connection to execute against. </param>
            <param name="parameterValues"> The values for the parameters. </param>
            <returns> The number of rows affected. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)">
            <summary>
                Executes the command with no results.
            </summary>
            <param name="connection"> The connection to execute against. </param>
            <param name="parameterValues"> The values for the parameters. </param>
            <param name="manageConnection"> A value indicating whether to open and close the connection as needed. </param>
            <returns> The number of rows affected. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
                Asynchronously executes the command with no results.
            </summary>
            <param name="connection"> The connection to execute against. </param>
            <param name="parameterValues"> The values for the parameters. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains the number of rows affected.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Asynchronously executes the command with no results.
            </summary>
            <param name="connection"> The connection to execute against. </param>
            <param name="parameterValues"> The values for the parameters. </param>
            <param name="manageConnection"> A value indicating whether to open and close the connection as needed. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains the number of rows affected.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                Executes the command with a single scalar result.
            </summary>
            <param name="connection"> The connection to execute against. </param>
            <param name="parameterValues"> The values for the parameters. </param>
            <returns> The result of the command. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)">
            <summary>
                Executes the command with a single scalar result.
            </summary>
            <param name="connection"> The connection to execute against. </param>
            <param name="parameterValues"> The values for the parameters. </param>
            <param name="manageConnection"> A value indicating whether to open and close the connection as needed. </param>
            <returns> The result of the command. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
                Asynchronously executes the command with a single scalar result.
            </summary>
            <param name="connection"> The connection to execute against. </param>
            <param name="parameterValues"> The values for the parameters. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains the result of the command.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Asynchronously executes the command with a single scalar result.
            </summary>
            <param name="connection"> The connection to execute against. </param>
            <param name="parameterValues"> The values for the parameters. </param>
            <param name="manageConnection"> A value indicating whether to open and close the connection as needed. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains the result of the command.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                Executes the command with a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> result.
            </summary>
            <param name="connection"> The connection to execute against. </param>
            <param name="parameterValues"> The values for the parameters. </param>
            <returns> The result of the command. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)">
            <summary>
                Executes the command with a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> result.
            </summary>
            <param name="connection"> The connection to execute against. </param>
            <param name="parameterValues"> The values for the parameters. </param>
            <param name="manageConnection"> A value indicating whether to open and close the connection as needed. </param>
            <returns> The result of the command. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
                Asynchronously executes the command with a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> result.
            </summary>
            <param name="connection"> The connection to execute against. </param>
            <param name="parameterValues"> The values for the parameters. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains the result of the command.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Asynchronously executes the command with a <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> result.
            </summary>
            <param name="connection"> The connection to execute against. </param>
            <param name="parameterValues"> The values for the parameters. </param>
            <param name="manageConnection"> A value indicating whether to open and close the connection as needed. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains the result of the command.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder">
            <summary>
                <para>
                    Builds a command to be executed against a relational database.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder.ParameterBuilder">
            <summary>
                Builds the parameters associated with this command.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder.Build">
            <summary>
                Creates the command.
            </summary>
            <returns> The newly created command. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory">
            <summary>
                <para>
                    Creates instances of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" /> class.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory.Create">
            <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" />.
            </summary>
            <returns> The newly created builder. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection">
            <summary>
                <para>
                    Represents a connection with a relational database.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ConnectionString">
            <summary>
                Gets the connection string for the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.DbConnection">
            <summary>
                Gets the underlying <see cref="T:System.Data.Common.DbConnection" /> used to connect to the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.CommandTimeout">
            <summary>
                Gets the timeout for executing a command against the database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Open">
            <summary>
                Opens the connection to the database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.OpenAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously opens the connection to the database.
            </summary>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns> A task that represents the asynchronous operation. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.Close">
            <summary>
                Closes the connection to the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.IsMultipleActiveResultSetsEnabled">
            <summary>
                Gets a value indicating whether the multiple active result sets feature is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.ActiveCursor">
            <summary>
                Gets or sets the active cursor.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection.CurrentTransaction">
            <summary>
                Gets the current transaction.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator">
            <summary>
                <para>
                    Performs database/schema creation, and other related operations.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator.Exists">
            <summary>
                Determines whether the physical database exists. No attempt is made to determine if the database
                contains the schema for the current model.
            </summary>
            <returns>
                True if the database exists; otherwise false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator.ExistsAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously determines whether the physical database exists. No attempt is made to determine if
                the database contains the schema for the current model.
            </summary>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation. The task result contains
                true if the database exists; otherwise false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator.Create">
            <summary>
                Creates the physical database. Does not attempt to populate it with any schema.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator.CreateAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously creates the physical database. Does not attempt to populate it with any schema.
            </summary>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator.Delete">
            <summary>
                Deletes the physical database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator.DeleteAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously deletes the physical database.
            </summary>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator.CreateTables">
            <summary>
                Creates all tables for the current model in the database. No attempt is made
                to incrementally update the schema. It is assumed that none of the tables exist in the database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator.CreateTablesAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously creates all tables for the current model in the database. No attempt is made
                to incrementally update the schema. It is assumed that none of the tables exist in the database.
            </summary>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseProviderServices">
            <summary>
                <para>
                    The primary services needed to interact with a relational database.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseProviderServices.MigrationsAnnotationProvider">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IMigrationsAnnotationProvider" /> for the provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseProviderServices.HistoryRepository">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository" /> for the provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseProviderServices.MigrationsSqlGenerator">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator" /> for the provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseProviderServices.RelationalConnection">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" /> for the provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseProviderServices.TypeMapper">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" /> for the provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseProviderServices.UpdateSqlGenerator">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator" /> for the provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseProviderServices.ModificationCommandBatchFactory">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory" /> for the provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseProviderServices.CommandBatchPreparer">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer" /> for the provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseProviderServices.BatchExecutor">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Update.IBatchExecutor" /> for the provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseProviderServices.ValueBufferFactoryFactory">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory" /> for the provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseProviderServices.RelationalDatabaseCreator">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator" /> for the provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseProviderServices.AnnotationProvider">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider" /> for the provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseProviderServices.CompositeMethodCallTranslator">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator" /> for the provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseProviderServices.CompositeMemberTranslator">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator" /> for the provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseProviderServices.CompositeExpressionFragmentTranslator">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator" /> for the provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseProviderServices.ParameterNameGeneratorFactory">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory" /> for the provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseProviderServices.SqlGenerationHelper">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" /> for the provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseProviderServices.QuerySqlGeneratorFactory">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory" /> for the provider.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter">
            <summary>
                <para>
                    A parameter in an <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommand" />. Note that this interface just represents a
                    placeholder for a parameter and not the actual value. This is because the same command can be
                    reused multiple times with different parameter values.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter.InvariantName">
            <summary>
                The name of the parameter.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter.AddDbParameter(System.Data.Common.DbCommand,System.Object)">
            <summary>
                Adds the parameter as a <see cref="T:System.Data.Common.DbParameter" /> to a <see cref="T:System.Data.Common.DbCommand" />.
            </summary>
            <param name="command"> The command to add the parameter to. </param>
            <param name="value"> The value to be assigned to the parameter. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder">
            <summary>
                <para>
                    Builds a collection of <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" />.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.Parameters">
            <summary>
                The collection of parameters.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String)">
            <summary>
                Adds a parameter.
            </summary>
            <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
            <param name="name">
                The name to be used for the parameter when the command is executed against the database.
            </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)">
            <summary>
                Adds a parameter.
            </summary>
            <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
            <param name="name">
                The name to be used for the parameter when the command is executed against the database.
            </param>
            <param name="typeMapping">
                The type mapping for the property that values for this parameter will come from.
            </param>
            <param name="nullable">
                A value indicating whether the parameter can contain null values.
            </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Adds a parameter.
            </summary>
            <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
            <param name="name">
                The name to be used for the parameter when the command is executed against the database.
            </param>
            <param name="property"></param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddCompositeParameter(System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})">
            <summary>
                Adds a parameter that is ultimately represented as multiple <see cref="T:System.Data.Common.DbParameter" />s in the
                final command.
            </summary>
            <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
            <param name="buildAction">
                The action to add the multiple parameters that this placeholder represents.
            </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder.AddPropertyParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Adds a parameter.
            </summary>
            <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
            <param name="name">
                The name to be used for the parameter when the command is executed against the database.
            </param>
            <param name="property">
                The property that values for this parameter will come from.
            </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager">
            <summary>
                <para>
                    Creates and manages the current transaction for a relational database.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
                Begins a new transaction.
            </summary>
            <param name="isolationLevel"> The isolation level to use for the transaction. </param>
            <returns> The newly created transaction. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
            <summary>
                Asynchronously begins a new transaction.
            </summary>
            <param name="isolationLevel"> The isolation level to use for the transaction. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains the newly created transaction.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalTransactionManager.UseTransaction(System.Data.Common.DbTransaction)">
            <summary>
                Specifies an existing <see cref="T:System.Data.Common.DbTransaction" /> to be used for database operations.
            </summary>
            <param name="transaction"> The transaction to be used. </param>
            <returns>
                An instance of <see cref="T:System.Data.IDbTransaction" /> that wraps the provided transaction.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper">
            <summary>
                <para>
                    Maps .NET types to their corresponding relational database types.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the relational database type for the given property.
                Returns null if no mapping is found.
            </summary>
            <param name="property"> The property to get the mapping for. </param>
            <returns> The type mapping to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(System.Type)">
            <summary>
                Gets the relational database type for a given .NET type.
                Returns null if no mapping is found.
            </summary>
            <param name="clrType"> The type to get the mapping for. </param>
            <returns> The type mapping to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.FindMapping(System.String)">
            <summary>
                Gets the mapping that represents the given database type.
                Returns null if no mapping is found.
            </summary>
            <param name="storeType"> The type to get the mapping for. </param>
            <returns> The type mapping to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.ValidateTypeName(System.String)">
            <summary>
                Ensures that the given type name is a valid type for the relational database.
                An exception is thrown if it is not a valid type.
            </summary>
            <param name="storeType"> The type to be validated. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.ByteArrayMapper">
            <summary>
                Gets the mapper to be used for byte array properties.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper.StringMapper">
            <summary>
                Gets the mapper to be used for string properties.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory">
            <summary>
                <para>
                    Creates instances of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueBuffer" /> type. An <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" />
                    is tied to a particular result shape and will only create value buffers for that result shape. Instances
                    for different result shapes are created by <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory" />.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory.Create(System.Data.Common.DbDataReader)">
            <summary>
                Creates a value buffer for the given <see cref="T:System.Data.Common.DbDataReader" />.
            </summary>
            <param name="dataReader"> The reader to create a value buffer for. </param>
            <returns> The newly created value buffer. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory">
            <summary>
                <para>
                    Creates instances of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" /> type. <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" />
                    instances are tied to a specific result shape. This factory is responsible for creating the
                    <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" /> for a given result shape.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory.Create(System.Collections.Generic.IReadOnlyList{System.Type},System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" />.
            </summary>
            <param name="valueTypes">
                The types of values to be returned from the value buffer.
            </param>
            <param name="indexMap">
                An ordered list of zero-based indexes to be read from the underlying result set (i.e. the first number in this
                list is the index of the underlying result set that will be returned when value 0 is requested from the
                value buffer).
            </param>
            <returns>
                The newly created <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory" />.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper">
            <summary>
                <para>
                    Provides services to help with generation of SQL commands.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.StatementTerminator">
            <summary>
                The terminator to be used for SQL statements.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.BatchTerminator">
            <summary>
                The terminator to be used for batches of SQL statements.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateParameterName(System.String)">
            <summary>
                Generates a valid parameter name for the given candidate name.
            </summary>
            <param name="name">
                The candidate name for the parameter.
            </param>
            <returns> A valid name based on the candidate name. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateParameterName(System.Text.StringBuilder,System.String)">
            <summary>
                Writes a valid parameter name for the given candidate name.
            </summary>
            <param name="builder"> The <see cref="T:System.Text.StringBuilder" /> to write generated string to. </param>
            <param name="name">
                The candidate name for the parameter.
            </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateLiteral(System.Object,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value"> The literal value. </param>
            <param name="typeMapping"> An optional type mapping that is used for this value. </param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.GenerateLiteral(System.Text.StringBuilder,System.Object,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Writes the SQL representation of a literal value.
            </summary>
            <param name="builder"> The <see cref="T:System.Text.StringBuilder" /> to write generated string to. </param>
            <param name="value"> The literal value. </param>
            <param name="typeMapping"> An optional type mapping that is used for this value. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.EscapeLiteral(System.String)">
            <summary>
                Generates the escaped SQL representation of a literal value.
            </summary>
            <param name="literal"> The value to be escaped. </param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.EscapeLiteral(System.Text.StringBuilder,System.String)">
            <summary>
                Writes the escaped SQL representation of a literal value.
            </summary>
            <param name="builder"> The <see cref="T:System.Text.StringBuilder" /> to write generated string to. </param>
            <param name="literal"> The value to be escaped. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.EscapeIdentifier(System.String)">
            <summary>
                Generates the escaped SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="identifier"> The identifier to be escaped. </param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.EscapeIdentifier(System.Text.StringBuilder,System.String)">
            <summary>
                Writes the escaped SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="builder"> The <see cref="T:System.Text.StringBuilder" /> to write generated string to. </param>
            <param name="identifier"> The identifier to be escaped. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.DelimitIdentifier(System.String)">
            <summary>
                Generates the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="identifier"> The identifier to delimit. </param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.DelimitIdentifier(System.Text.StringBuilder,System.String)">
            <summary>
                Writes the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="builder"> The <see cref="T:System.Text.StringBuilder" /> to write generated string to. </param>
            <param name="identifier"> The identifier to delimit. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.DelimitIdentifier(System.String,System.String)">
            <summary>
                Generates the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="name"> The identifier to delimit. </param>
            <param name="schema"> The schema of the identifier. </param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper.DelimitIdentifier(System.Text.StringBuilder,System.String,System.String)">
            <summary>
                Writes the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="builder"> The <see cref="T:System.Text.StringBuilder" /> to write generated string to. </param>
            <param name="name"> The identifier to delimit. </param>
            <param name="schema"> The schema of the identifier. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IStringRelationalTypeMapper">
            <summary>
                <para>
                    Maps string property types to their corresponding relational database types.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IStringRelationalTypeMapper.FindMapping(System.Boolean,System.Boolean,System.Nullable{System.Int32})">
            <summary>
                Gets the relational database type for a string property.
            </summary>
            <param name="unicode"> A value indicating whether the property should handle Unicode data or not. </param>
            <param name="keyOrIndex"> A value indicating whether the property is part of a key or not. </param>
            <param name="maxLength"> The maximum length of data the property is configured to store, or null if no maximum is configured. </param>
            <returns> The type mapping to be used. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.ParameterNameGenerator">
            <summary>
                <para>
                    Generates unique names for parameters.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ParameterNameGenerator.GenerateNext">
            <summary>
                Generates the next unique parameter name.
            </summary>
            <returns> The generated name. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ParameterNameGenerator.Reset">
            <summary>
                Resets the generator, meaning it can reuse previously generated names.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.ParameterNameGeneratorFactory">
            <summary>
                <para>
                    Creates instances of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.ParameterNameGenerator" /> type.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ParameterNameGeneratorFactory.Create">
            <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.ParameterNameGenerator" />.
            </summary>
            <returns> The newly created generator. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RawSqlCommand">
            <summary>
                <para>
                    Represents a raw SQL command to be executed against a relational database.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RawSqlCommand.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommand,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RawSqlCommand" /> class.
            </summary>
            <param name="relationalCommand"> The command to be executed. </param>
            <param name="parameterValues"> The values to be assigned to parameters. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RawSqlCommand.RelationalCommand">
            <summary>
                Gets the command to be executed.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RawSqlCommand.ParameterValues">
            <summary>
                Gets the values to be assigned to parameters.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions">
            <summary>
                Extension methods for the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Append(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.Object)">
            <summary>
                Appends an object to the command text.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <param name="o"> The object to be written. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)">
            <summary>
                Appends a blank line to the command text.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLine(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.Object)">
            <summary>
                Appends an object to the command text on a new line.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <param name="o"> The object to be written. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AppendLines(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.Object)">
            <summary>
                Appends an object, that contains multiple lines of text, to the command text.
                Each line read from the object is appended on a new line.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <param name="o"> The object to be written. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.IncrementIndent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)">
            <summary>
                Increments the indent of subsequent lines.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.DecrementIndent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)">
            <summary>
                Decrements the indent of subsequent lines.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.Indent(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)">
            <summary>
                Increases the indent of the command text.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.GetLength(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder)">
            <summary>
                Gets the length of the command text.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <returns> The length of the command text. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String)">
            <summary>
                Adds a parameter.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
            <param name="name">
                The name to be used for the parameter when the command is executed against the database.
            </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)">
            <summary>
                Adds a parameter.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
            <param name="name">
                The name to be used for the parameter when the command is executed against the database.
            </param>
            <param name="typeMapping">
                The type mapping for the property that values for this parameter will come from.
            </param>
            <param name="nullable">
                A value indicating whether the parameter can contain null values.
            </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Adds a parameter.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
            <param name="name">
                The name to be used for the parameter when the command is executed against the database.
            </param>
            <param name="property"></param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddCompositeParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})">
            <summary>
                Adds a parameter that is ultimately represented as multiple <see cref="T:System.Data.Common.DbParameter" />s in the
                final command.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
            <param name="buildAction">
                The action to add the multiple parameters that this placeholder represents.
            </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalCommandBuilderExtensions.AddPropertyParameter(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Adds a parameter.
            </summary>
            <param name="commandBuilder"> The command builder. </param>
            <param name="invariantName">
                The key that identifies this parameter. Note that <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalParameter" /> just represents a
                placeholder for a parameter and not the actual value. This is because the same command can be
                reused multiple times with different parameter values.
            </param>
            <param name="name">
                The name to be used for the parameter when the command is executed against the database.
            </param>
            <param name="property">
                The property that values for this parameter will come from.
            </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalConnection">
            <summary>
                <para>
                    Represents a connection with a relational database.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.Extensions.Logging.ILogger)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" /> class.
            </summary>
            <param name="options"> The options for the context that this connection will be used with. </param>
            <param name="logger"> The logger to write to. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CreateDbConnection">
            <summary>
                Creates a <see cref="P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.DbConnection" /> to the database.
            </summary>
            <returns> The connection. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Logger">
            <summary>
                Gets the logger to write to.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.ConnectionString">
            <summary>
                Gets the connection string for the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.DbConnection">
            <summary>
                Gets the underlying <see cref="T:System.Data.Common.DbConnection" /> used to connect to the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CurrentTransaction">
            <summary>
                Gets the current transaction.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CommandTimeout">
            <summary>
                Gets the timeout for executing a command against the database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction">
            <summary>
                Begins a new transaction.
            </summary>
            <returns> The newly created transaction. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously begins a new transaction.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains the newly created transaction.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransaction(System.Data.IsolationLevel)">
            <summary>
                Begins a new transaction.
            </summary>
            <param name="isolationLevel"> The isolation level to use for the transaction. </param>
            <returns> The newly created transaction. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.BeginTransactionAsync(System.Data.IsolationLevel,System.Threading.CancellationToken)">
            <summary>
                Asynchronously begins a new transaction.
            </summary>
            <param name="isolationLevel"> The isolation level to use for the transaction. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains the newly created transaction.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.UseTransaction(System.Data.Common.DbTransaction)">
            <summary>
                Specifies an existing <see cref="T:System.Data.Common.DbTransaction" /> to be used for database operations.
            </summary>
            <param name="transaction"> The transaction to be used. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.CommitTransaction">
            <summary>
                Commits all changes made to the database in the current transaction.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.RollbackTransaction">
            <summary>
                Discards all changes made to the database in the current transaction.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Open">
            <summary>
                Opens the connection to the database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.OpenAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously opens the connection to the database.
            </summary>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns> A task that represents the asynchronous operation. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Close">
            <summary>
                Closes the connection to the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.IsMultipleActiveResultSetsEnabled">
            <summary>
                Gets a value indicating whether the multiple active result sets feature is enabled.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.ActiveCursor">
            <summary>
                Gets or sets the active cursor.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalConnection.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalDatabase">
            <summary>
                <para>
                    The main interaction point between a context and the database provider.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.#ctor(Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory,Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer,Microsoft.EntityFrameworkCore.Update.IBatchExecutor,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDatabase" /> class.
            </summary>
            <param name="queryCompilationContextFactory"> The <see cref="T:Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory" /> to be used. </param>
            <param name="batchPreparer"> The <see cref="T:Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer" /> to be used. </param>
            <param name="batchExecutor"> The <see cref="T:Microsoft.EntityFrameworkCore.Update.IBatchExecutor" /> to be used. </param>
            <param name="connection"> The <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" /> to be used. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChanges(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})">
            <summary>
                Persists changes from the supplied entries to the database.
            </summary>
            <param name="entries"> Entries representing the changes to be persisted. </param>
            <returns> The number of state entries persisted to the database. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabase.SaveChangesAsync(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Threading.CancellationToken)">
            <summary>
                Asynchronously persists changes from the supplied entries to the database.
            </summary>
            <param name="entries"> Entries representing the changes to be persisted. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous save operation. The task result contains the
                number of entries persisted to the database.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator">
            <summary>
                <para>
                    Performs database/schema creation, and other related operations.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer,Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator,Microsoft.EntityFrameworkCore.Migrations.IMigrationCommandExecutor)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator" /> class.
            </summary>
            <param name="model"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IModel" /> for the context this creator is being used with. </param>
            <param name="connection"> The <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" /> to be used. </param>
            <param name="modelDiffer"> The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer" /> to be used. </param>
            <param name="migrationsSqlGenerator"> The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator" /> to be used. </param>
            <param name="migrationCommandExecutor"> The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IMigrationCommandExecutor" /> to be used. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer,Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator,Microsoft.EntityFrameworkCore.Migrations.IMigrationCommandExecutor,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator" /> class.
            </summary>
            <param name="model"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IModel" /> for the context this creator is being used with. </param>
            <param name="connection"> The <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" /> to be used. </param>
            <param name="modelDiffer"> The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer" /> to be used. </param>
            <param name="migrationsSqlGenerator"> The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator" /> to be used. </param>
            <param name="migrationCommandExecutor"> The <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IMigrationCommandExecutor" /> to be used. </param>
            <param name="executionStrategyFactory">The <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory" /> to be used. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Model">
            <summary>
                Gets the model for the context this creator is being used with.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Connection">
            <summary>
                Gets the connection for the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.MigrationCommandExecutor">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IMigrationCommandExecutor" /> to be used.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.ExecutionStrategyFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory" /> to be used.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Microsoft#EntityFrameworkCore#Internal#IServiceInjectionSite#InjectServices(System.IServiceProvider)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Exists">
            <summary>
                Determines whether the physical database exists. No attempt is made to determine if the database
                contains the schema for the current model.
            </summary>
            <returns>
                True if the database exists; otherwise false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.ExistsAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously determines whether the physical database exists. No attempt is made to determine if
                the database contains the schema for the current model.
            </summary>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation. The task result contains
                true if the database exists; otherwise false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Create">
            <summary>
                Creates the physical database. Does not attempt to populate it with any schema.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously creates the physical database. Does not attempt to populate it with any schema.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.Delete">
            <summary>
                Deletes the physical database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.DeleteAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously deletes the physical database.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateTables">
            <summary>
                Creates all tables for the current model in the database. No attempt is made
                to incrementally update the schema. It is assumed that none of the tables exist in the database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.CreateTablesAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously creates all tables for the current model in the database. No attempt is made
                to incrementally update the schema. It is assumed that none of the tables exist in the database.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.GetCreateTablesCommands">
            <summary>
                Gets the commands that will create all tables from the model.
            </summary>
            <returns> The generated commands. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.HasTables">
            <summary>
                Determines whether the database contains any tables. No attempt is made to determine if
                tables belong to the current model or not.
            </summary>
            <returns> A value indicating whether any tables are present in the database. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.HasTablesAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously determines whether the database contains any tables. No attempt is made to determine if
                tables belong to the current model or not.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains
                a value indicating whether any tables are present in the database.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeleted">
            <summary>
                <para>
                    Ensures that the database for the context does not exist. If it does not exist, no action is taken. If it does
                    exist then the database is deleted.
                </para>
                <para>
                    Warning: The entire database is deleted an no effort is made to remove just the database objects that are used by
                    the model for this context.
                </para>
            </summary>
            <returns>
                True if the database is deleted, false if it did not exist.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureDeletedAsync(System.Threading.CancellationToken)">
            <summary>
                <para>
                    Asynchronously ensures that the database for the context does not exist. If it does not exist, no action is taken. If it does
                    exist then the database is deleted.
                </para>
                <para>
                    Warning: The entire database is deleted an no effort is made to remove just the database objects that are used by
                    the model for this context.
                </para>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous save operation. The task result contains true if the database is deleted,
                false if it did not exist.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreated">
            <summary>
                Ensures that the database for the context exists. If it exists, no action is taken. If it does not
                exist then the database and all its schema are created. If the database exists, then no effort is made
                to ensure it is compatible with the model for this context.
            </summary>
            <returns>
                True if the database is created, false if it already existed.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseCreator.EnsureCreatedAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously ensures that the database for the context exists. If it exists, no action is taken. If it does not
                exist then the database and all its schema are created. If the database exists, then no effort is made
                to ensure it is compatible with the model for this context.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous save operation. The task result contains true if the database is created,
                false if it already existed.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices">
            <summary>
                <para>
                    The primary services needed to interact with a relational database.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.#ctor(System.IServiceProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices" /> class.
            </summary>
            <param name="services"> The service provider to resolve services from. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.Database">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IDatabase" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.TransactionManager">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.ModelValidator">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Internal.IModelValidator" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.CompiledQueryCacheKeyGenerator">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.ICompiledQueryCacheKeyGenerator" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.ValueGeneratorSelector">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorSelector" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.ExpressionPrinter">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.ResultOperatorHandler">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.QueryContextFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.IQueryContextFactory" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.QueryCompilationContextFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.EntityQueryableExpressionVisitorFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.EntityQueryModelVisitorFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.ProjectionExpressionVisitorFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.TypeMapper">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.MigrationsAnnotationProvider">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IMigrationsAnnotationProvider" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.BatchExecutor">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Update.IBatchExecutor" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.ValueBufferFactoryFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.CommandBatchPreparer">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Update.ICommandBatchPreparer" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.ParameterNameGeneratorFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.MigrationsSqlGenerator">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.CompositeExpressionFragmentTranslator">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.Creator">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.CompositeMethodCallTranslator">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.CompositeMemberTranslator">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.HistoryRepository">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.RelationalConnection">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalConnection" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.SqlGenerationHelper">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.UpdateSqlGenerator">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Update.IUpdateSqlGenerator" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.ModificationCommandBatchFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.RelationalDatabaseCreator">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalDatabaseCreator" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.AnnotationProvider">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.QuerySqlGeneratorFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDatabaseProviderServices.ExecutionStrategyFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader">
            <summary>
                <para>
                    Reads result sets from a relational database.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbCommand,System.Data.Common.DbDataReader)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader" /> class.
            </summary>
            <param name="connection"> The connection. </param>
            <param name="command"> The command that was executed. </param>
            <param name="reader"> The underlying reader for the result set. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.DbDataReader">
            <summary>
                Gets the underlying reader for the result set.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalDataReader.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper">
            <summary>
                <para>
                    Provides services to help with generation of SQL commands.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.FloatingPointFormatString">
            <summary>
                Gets the floating point format.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.DecimalFormat">
            <summary>
                Gets the decimal format.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.DecimalFormatString">
            <summary>
                Gets the decimal format.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.DateTimeFormat">
            <summary>
                Gets the date time format.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.DateTimeFormatString">
            <summary>
                Gets the date time format.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.DateTimeOffsetFormat">
            <summary>
                Gets the date time offset format.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.DateTimeOffsetFormatString">
            <summary>
                Gets the date time offset format.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.StatementTerminator">
            <summary>
                The terminator to be used for SQL statements.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.BatchTerminator">
            <summary>
                The terminator to be used for batches of SQL statements.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateParameterName(System.String)">
            <summary>
                Generates a valid parameter name for the given candidate name.
            </summary>
            <param name="name">The candidate name for the parameter.</param>
            <returns>
                A valid name based on the candidate name.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateParameterName(System.Text.StringBuilder,System.String)">
            <summary>
                Writes a valid parameter name for the given candidate name.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="name">The candidate name for the parameter.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteral(System.Object,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <param name="typeMapping">An optional type mapping that is used for this value.</param>
            <returns>
                The generated string.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteral(System.Text.StringBuilder,System.Object,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Writes the SQL representation of a literal value.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="value">The literal value.</param>
            <param name="typeMapping">An optional type mapping that is used for this value.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.EscapeLiteral(System.String)">
            <summary>
                Generates the escaped SQL representation of a literal value.
            </summary>
            <param name="literal">The value to be escaped.</param>
            <returns>
                The generated string.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.EscapeLiteral(System.Text.StringBuilder,System.String)">
            <summary>
                Writes the escaped SQL representation of a literal value.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="literal">The value to be escaped.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.EscapeIdentifier(System.String)">
            <summary>
                Generates the escaped SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="identifier">The identifier to be escaped.</param>
            <returns>
                The generated string.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.EscapeIdentifier(System.Text.StringBuilder,System.String)">
            <summary>
                Writes the escaped SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="identifier">The identifier to be escaped.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.DelimitIdentifier(System.String)">
            <summary>
                Generates the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="identifier">The identifier to delimit.</param>
            <returns>
                The generated string.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.DelimitIdentifier(System.Text.StringBuilder,System.String)">
            <summary>
                Writes the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="identifier">The identifier to delimit.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.DelimitIdentifier(System.String,System.String)">
            <summary>
                Generates the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="name">The identifier to delimit.</param>
            <param name="schema">The schema of the identifier.</param>
            <returns>
                The generated string.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.DelimitIdentifier(System.Text.StringBuilder,System.String,System.String)">
            <summary>
                Writes the delimited SQL representation of an identifier (column name, table name, etc.).
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="name">The identifier to delimit.</param>
            <param name="schema">The schema of the identifier.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Int32)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Text.StringBuilder,System.Int32)">
            <summary>
                Writes the SQL representation of a literal value.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="value">The literal value.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Int16)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Text.StringBuilder,System.Int16)">
            <summary>
                Writes the SQL representation of a literal value.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="value">The literal value.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Int64)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Text.StringBuilder,System.Int64)">
            <summary>
                Writes the SQL representation of a literal value.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="value">The literal value.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Byte)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Text.StringBuilder,System.Byte)">
            <summary>
                Writes the SQL representation of a literal value.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="value">The literal value.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Decimal)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Text.StringBuilder,System.Decimal)">
            <summary>
                Writes the SQL representation of a literal value.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="value">The literal value.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Double)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Text.StringBuilder,System.Double)">
            <summary>
                Writes the SQL representation of a literal value.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="value">The literal value.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Single)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Text.StringBuilder,System.Single)">
            <summary>
                Writes the SQL representation of a literal value.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="value">The literal value.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Boolean)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Text.StringBuilder,System.Boolean)">
            <summary>
                Writes the SQL representation of a literal value.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="value">The literal value.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Char)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Text.StringBuilder,System.Char)">
            <summary>
                Writes the SQL representation of a literal value.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="value">The literal value.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <param name="typeMapping">An optional type mapping that is used for this value.</param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Text.StringBuilder,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping)">
            <summary>
                Writes the SQL representation of a literal value.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="typeMapping">An optional type mapping that is used for this value.</param>
            <param name="value">The literal value.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Object)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Text.StringBuilder,System.Object)">
            <summary>
                Writes the SQL representation of a literal value.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="value">The literal value.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Byte[])">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Text.StringBuilder,System.Byte[])">
            <summary>
                Writes the SQL representation of a literal value.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="value">The literal value.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Data.DbType)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Text.StringBuilder,System.Data.DbType)">
            <summary>
                Writes the SQL representation of a literal value.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="value">The literal value.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Enum)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Text.StringBuilder,System.Enum)">
            <summary>
                Writes the SQL representation of a literal value.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="value">The literal value.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Guid)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Text.StringBuilder,System.Guid)">
            <summary>
                Writes the SQL representation of a literal value.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="value">The literal value.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.DateTime)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Text.StringBuilder,System.DateTime)">
            <summary>
                Writes the SQL representation of a literal value.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="value">The literal value.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.DateTimeOffset)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Text.StringBuilder,System.DateTimeOffset)">
            <summary>
                Writes the SQL representation of a literal value.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="value">The literal value.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.TimeSpan)">
            <summary>
                Generates the SQL representation of a literal value.
            </summary>
            <param name="value">The literal value.</param>
            <returns> The generated string. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalSqlGenerationHelper.GenerateLiteralValue(System.Text.StringBuilder,System.TimeSpan)">
            <summary>
                Writes the SQL representation of a literal value.
            </summary>
            <param name="builder">The <see cref="T:System.Text.StringBuilder" /> to write generated string to.</param>
            <param name="value">The literal value.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalTransaction">
            <summary>
                <para>
                    A transaction against the database.
                </para>
                <para>
                    Instances of this class are typically obtained from <see cref="M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.BeginTransaction" /> and it is not designed
                    to be directly constructed in your application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Data.Common.DbTransaction,Microsoft.Extensions.Logging.ILogger,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTransaction" /> class.
            </summary>
            <param name="connection"> The connection to the database. </param>
            <param name="transaction"> The underlying <see cref="T:System.Data.Common.DbTransaction" />. </param>
            <param name="logger"> The logger to write to. </param>
            <param name="transactionOwned">
                A value indicating whether the transaction is owned by this class (i.e. if it can be disposed when this class is disposed).
            </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.Commit">
            <summary>
                Commits all changes made to the database in the current transaction.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.Rollback">
            <summary>
                Discards all changes made to the database in the current transaction.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTransaction.Dispose">
            <summary>
                Performs application-defined tasks associated with freeing, releasing, or resetting unmanaged resources.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper">
            <summary>
                <para>
                    Maps .NET types to their corresponding relational database types.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetClrTypeMappings">
            <summary>
                Gets the mappings from .NET types to database types.
            </summary>
            <returns> The type mappings. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStoreTypeMappings">
            <summary>
                Gets the mappings from database types to .NET types.
            </summary>
            <returns> The type mappings. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetColumnType(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets column type for the given property.
            </summary>
            <param name="property"> The property. </param>
            <returns> The name of the database type. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ValidateTypeName(System.String)">
            <summary>
                Ensures that the given type name is a valid type for the relational database.
                An exception is thrown if it is not a valid type.
            </summary>
            <param name="storeType">The type to be validated.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the relational database type for the given property.
                Returns null if no mapping is found.
            </summary>
            <param name="property">The property to get the mapping for.</param>
            <returns>
                The type mapping to be used.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.Type)">
            <summary>
                Gets the relational database type for a given .NET type.
                Returns null if no mapping is found.
            </summary>
            <param name="clrType">The type to get the mapping for.</param>
            <returns>
                The type mapping to be used.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindMapping(System.String)">
            <summary>
                Gets the mapping that represents the given database type.
                Returns null if no mapping is found.
            </summary>
            <param name="storeType">The type to get the mapping for.</param>
            <returns>
                The type mapping to be used.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.CreateMappingFromStoreType(System.String)">
            <summary>
                Creates the mapping for the given database type.
            </summary>
            <param name="storeType">The type to create the mapping for.</param>
            <returns> The type mapping to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.FindCustomMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the relational database type for the given property, using a separate type mapper if needed.
                This base implementation uses custom mappers for string and byte array properties.
                Returns null if no mapping is found.
            </summary>
            <param name="property">The property to get the mapping for.</param>
            <returns>
                The type mapping to be used.
            </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.ByteArrayMapper">
            <summary>
                Gets the mapper to be used for byte array properties.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.StringMapper">
            <summary>
                Gets the mapper to be used for string properties.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetStringMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the relational database type for the given string property.
            </summary>
            <param name="property"> The property to get the mapping for. </param>
            <returns> The type mapping to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.GetByteArrayMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the relational database type for the given byte array property.
            </summary>
            <param name="property"> The property to get the mapping for. </param>
            <returns> The type mapping to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapper.RequiresKeyMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets a value indicating whether the given property should use a database type that is suitable for key properties.
            </summary>
            <param name="property"> The property to get the mapping for. </param>
            <returns> True if the property is a key, otherwise false. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions">
            <summary>
                Extension methods for the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMappingForValue(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Object)">
            <summary>
                Gets the relational database type for a given object, throwing if no mapping is found.
            </summary>
            <param name="typeMapper"> The type mapper. </param>
            <param name="value"> The object to get the mapping for. </param>
            <returns> The type mapping to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the relational database type for a given property, throwing if no mapping is found.
            </summary>
            <param name="typeMapper"> The type mapper. </param>
            <param name="property"> The property to get the mapping for. </param>
            <returns> The type mapping to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Type)">
            <summary>
                Gets the relational database type for a given .NET type, throwing if no mapping is found.
            </summary>
            <param name="typeMapper"> The type mapper. </param>
            <param name="clrType"> The type to get the mapping for. </param>
            <returns> The type mapping to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.GetMapping(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.String)">
            <summary>
                Gets the mapping that represents the given database type, throwing if no mapping is found.
            </summary>
            <param name="typeMapper"> The type mapper. </param>
            <param name="typeName"> The type to get the mapping for. </param>
            <returns> The type mapping to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapperExtensions.IsTypeMapped(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,System.Type)">
            <summary>
                Gets a value indicating whether the given .NET type is mapped.
            </summary>
            <param name="typeMapper"> The type mapper. </param>
            <param name="clrType"> The .NET type. </param>
            <returns> True if the type can be mapped; otherwise false. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping">
            <summary>
                <para>
                    Represents the mapping between a .NET type and a database type.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.NullMapping">
            <summary>
                Gets the mapping to be used when the only piece of information is that there is a null value.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.#ctor(System.String,System.Type)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> class.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="clrType"> The .NET type. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.#ctor(System.String,System.Type,System.Nullable{System.Data.DbType})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> class.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="clrType"> The .NET type. </param>
            <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.#ctor(System.String,System.Type,System.Nullable{System.Data.DbType},System.Boolean,System.Nullable{System.Int32},System.Boolean,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping" /> class.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="clrType"> The .NET type. </param>
            <param name="dbType"> The <see cref="T:System.Data.DbType" /> to be used. </param>
            <param name="unicode"> A value indicating whether the type should handle Unicode data or not. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
            <param name="hasNonDefaultUnicode"> A value indicating whether the Unicode setting has been manually configured to a non-default value. </param>
            <param name="hasNonDefaultSize"> A value indicating whether the size setting has been manually configured to a non-default value. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.CreateCopy(System.String,System.Nullable{System.Int32})">
            <summary>
                Creates a copy of this mapping.
            </summary>
            <param name="storeType"> The name of the database type. </param>
            <param name="size"> The size of data the property is configured to store, or null if no size is configured. </param>
            <returns> The newly created mapping. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.StoreType">
            <summary>
                Gets the name of the database type.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.ClrType">
            <summary>
                Gets the .NET type.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.DbType">
            <summary>
                Gets the <see cref="T:System.Data.DbType" /> to be used.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.IsUnicode">
            <summary>
                Gets a value indicating whether the type should handle Unicode data or not.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.Size">
            <summary>
                Gets the size of data the property is configured to store, or null if no size is configured.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.HasNonDefaultUnicode">
            <summary>
                Gets a value indicating whether the Unicode setting has been manually configured to a non-default value.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.HasNonDefaultSize">
            <summary>
                Gets a value indicating whether the size setting has been manually configured to a non-default value.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.CreateParameter(System.Data.Common.DbCommand,System.String,System.Object,System.Nullable{System.Boolean})">
            <summary>
                Creates a <see cref="T:System.Data.Common.DbParameter" /> with the appropriate type information configured.
            </summary>
            <param name="command"> The command the parameter should be created on. </param>
            <param name="name"> The name of the parameter. </param>
            <param name="value"> The value to be assigned to the parameter. </param>
            <param name="nullable"> A value indicating whether the parameter should be a nullable type. </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping.ConfigureParameter(System.Data.Common.DbParameter)">
            <summary>
                Configures type information of a <see cref="T:System.Data.Common.DbParameter" />.
            </summary>
            <param name="parameter"> The parameter to be configured. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper">
            <summary>
                <para>
                    Maps string property types to their corresponding relational database types.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.#ctor(System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Func{System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping},System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Func{System.Int32,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper" /> class.
            </summary>
            <param name="maxBoundedAnsiLength"> The maximum length of a bounded ANSI string. </param>
            <param name="defaultAnsiMapping"> The default mapping of an ANSI string. </param>
            <param name="unboundedAnsiMapping"> The mapping for an unbounded ANSI string. </param>
            <param name="keyAnsiMapping"> The mapping for an ANSI string that is part of a key. </param>
            <param name="createBoundedAnsiMapping"> The function to create a mapping for a bounded ANSI string. </param>
            <param name="maxBoundedUnicodeLength"> The maximum length of a bounded Unicode string. </param>
            <param name="defaultUnicodeMapping"> The default mapping of a Unicode string. </param>
            <param name="unboundedUnicodeMapping"> The mapping for an unbounded Unicode string. </param>
            <param name="keyUnicodeMapping"> The mapping for a Unicode string that is part of a key. </param>
            <param name="createBoundedUnicodeMapping"> The function to create a mapping for a bounded Unicode string. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.MaxBoundedAnsiLength">
            <summary>
                Gets the maximum length of a bounded ANSI string.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.DefaultAnsiMapping">
            <summary>
                Gets the default mapping of an ANSI string.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.UnboundedAnsiMapping">
            <summary>
                Gets the mapping for an unbounded ANSI string.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.KeyAnsiMapping">
            <summary>
                Gets the mapping for an ANSI string that is part of a key.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.CreateBoundedAnsiMapping">
            <summary>
                Gets the function to create a mapping for a bounded ANSI string.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.MaxBoundedUnicodeLength">
            <summary>
                Gets the maximum length of a bounded Unicode string.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.DefaultUnicodeMapping">
            <summary>
                Gets the default mapping of a Unicode string.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.UnboundedUnicodeMapping">
            <summary>
                Gets the mapping for an unbounded Unicode string.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.KeyUnicodeMapping">
            <summary>
                Gets the mapping for a Unicode string that is part of a key.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.CreateBoundedUnicodeMapping">
            <summary>
                Gets the function to create a mapping for a bounded Unicode string.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.StringRelationalTypeMapper.FindMapping(System.Boolean,System.Boolean,System.Nullable{System.Int32})">
            <summary>
                Gets the relational database type for a string property.
            </summary>
            <param name="unicode">A value indicating whether the property should handle Unicode data or not.</param>
            <param name="keyOrIndex">A value indicating whether the property is part of a key or not.</param>
            <param name="maxLength">The maximum length of data the property is configured to store, or null if no maximum is configured.</param>
            <returns>
                The type mapping to be used.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.TypedRelationalValueBufferFactoryFactory">
            <summary>
                <para>
                    Creates instances of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" /> type. <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" />
                    instances are tied to a specific result shape. This factory is responsible for creating the
                    <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" /> for a given result shape.
                </para>
                <para>
                    This factory results in value buffers that use they strongly typed APIs to read back individual values from the
                    underlying <see cref="T:System.Data.Common.DbDataReader" />.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.TypedRelationalValueBufferFactoryFactory.Create(System.Collections.Generic.IReadOnlyList{System.Type},System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" />.
            </summary>
            <param name="valueTypes">
                The types of values to be returned from the value buffer.
            </param>
            <param name="indexMap">
                An ordered list of zero-based indexes to be read from the underlying result set (i.e. the first number in this
                list is the index of the underlying result set that will be returned when value 0 is requested from the
                value buffer).
            </param>
            <returns>
                The newly created <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory" />.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.UntypedRelationalValueBufferFactoryFactory">
            <summary>
                <para>
                    Creates instances of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" /> type. <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" />
                    instances are tied to a specific result shape. This factory is responsible for creating the
                    <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" /> for a given result shape.
                </para>
                <para>
                    This factory results in value buffers that use the untyped <see cref="M:System.Data.Common.DbDataReader.GetValues(System.Object[])" /> API to read
                    back individual values from the underlying <see cref="T:System.Data.Common.DbDataReader" />.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.UntypedRelationalValueBufferFactoryFactory.Create(System.Collections.Generic.IReadOnlyList{System.Type},System.Collections.Generic.IReadOnlyList{System.Int32})">
            <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactory" />.
            </summary>
            <param name="valueTypes">
                The types of values to be returned from the value buffer.
            </param>
            <param name="indexMap">
                An ordered list of zero-based indexes to be read from the underlying result set (i.e. the first number in this
                list is the index of the underlying result set that will be returned when value 0 is requested from the
                value buffer).
            </param>
            <returns>
                The newly created <see cref="T:Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory" />.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.InvariantName">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.RelationalParameters">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.CompositeRelationalParameter.AddDbParameter(System.Data.Common.DbCommand,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.DbParameterLogDataExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.DbParameterLogDataExtensions.FormatParameter(Microsoft.EntityFrameworkCore.Storage.DbParameterLogData,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.DynamicRelationalParameter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.DynamicRelationalParameter.#ctor(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.DynamicRelationalParameter.InvariantName">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.DynamicRelationalParameter.Name">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.DynamicRelationalParameter.AddDbParameter(System.Data.Common.DbCommand,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.RawSqlCommandBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RawSqlCommandBuilder.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RawSqlCommandBuilder.Build(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RawSqlCommandBuilder.Build(System.String,System.Collections.Generic.IReadOnlyList{System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger,System.Diagnostics.DiagnosticSource,System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Storage.IRelationalParameter})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Logger">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.DiagnosticSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.CommandText">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Parameters">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteNonQuery(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteNonQueryAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteScalar(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteScalarAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReaderAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.Execute(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteAsync(Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.String,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object},System.Boolean,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommandBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommandBuilder.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger,System.Diagnostics.DiagnosticSource,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommandBuilder.ParameterBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommandBuilder.Build">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommandBuilder.ToString">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommandBuilderFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommandBuilderFactory.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger{Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory},System.Diagnostics.DiagnosticSource,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommandBuilderFactory.Create">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalExecutionStrategyFactory.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.Extensions.Logging.ILogger{Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalExecutionStrategyFactory.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalExecutionStrategyFactory.CreateDefaultStrategy(Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalExecutionStrategyFactory.Create">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogCommandExecuted(Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger,System.Data.Common.DbCommand,System.Int64,System.Int64)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug(Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,System.Func{System.String})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogDebug``1(Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,``0,System.Func{``0,System.String})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogWarning(Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,System.Func{System.String})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalLoggerExtensions.LogInformation(Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId,System.Func{System.String})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.Parameters">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.TypeMapper">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddParameter(System.String,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddCompositeParameter(System.String,System.Action{Microsoft.EntityFrameworkCore.Storage.IRelationalParameterBuilder})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RelationalParameterBuilder.AddPropertyParameter(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.RemappingUntypedRelationalValueBufferFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RemappingUntypedRelationalValueBufferFactory.#ctor(System.Collections.Generic.IReadOnlyList{System.Int32},System.Action{System.Object[]})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.RemappingUntypedRelationalValueBufferFactory.Create(System.Data.Common.DbDataReader)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.TypedRelationalValueBufferFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.TypedRelationalValueBufferFactory.#ctor(System.Func{System.Data.Common.DbDataReader,System.Object[]})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.TypedRelationalValueBufferFactory.Create(System.Data.Common.DbDataReader)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.TypeMappedPropertyRelationalParameter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.TypeMappedPropertyRelationalParameter.#ctor(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.TypeMappedPropertyRelationalParameter.AddDbParameter(System.Data.Common.DbCommand,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.TypeMappedRelationalParameter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.TypeMappedRelationalParameter.#ctor(System.String,System.String,Microsoft.EntityFrameworkCore.Storage.RelationalTypeMapping,System.Nullable{System.Boolean})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.TypeMappedRelationalParameter.InvariantName">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.TypeMappedRelationalParameter.Name">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.TypeMappedRelationalParameter.AddDbParameter(System.Data.Common.DbCommand,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.UntypedRelationalValueBufferFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.UntypedRelationalValueBufferFactory.#ctor(System.Action{System.Object[]})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.UntypedRelationalValueBufferFactory.Create(System.Data.Common.DbDataReader)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.RelationalModelValidator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalModelValidator.RelationalExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalModelValidator.TypeMapper">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalModelValidator.#ctor(Microsoft.Extensions.Logging.ILogger{Microsoft.EntityFrameworkCore.Internal.RelationalModelValidator},Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalModelValidator.Validate(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalModelValidator.EnsureDataTypes(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalModelValidator.EnsureNoDefaultValuesOnKeys(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalModelValidator.EnsureDistinctTableNames(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalModelValidator.EnsureSharedColumnsCompatibility(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalModelValidator.EnsureSharedForeignKeysCompatibility(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalModelValidator.EnsureSharedIndexesCompatibility(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalModelValidator.ValidateInheritanceMapping(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.RelationalStrings">
            <summary>
            	This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ModificationFunctionInvalidEntityState(System.Object)">
            <summary>
            Cannot create a ModificationFunction for an entity in state '{entityState}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UpdateConcurrencyException(System.Object,System.Object)">
            <summary>
            Database operation expected to affect {expectedRows} row(s) but actually affected {actualRows} row(s). Data may have been modified or deleted since entities were loaded. See http://go.microsoft.com/fwlink/?LinkId=527962 for information on understanding and handling optimistic concurrency exceptions.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.MultipleProvidersConfigured">
            <summary>
            Multiple relational database provider configurations found. A context can only be configured to use a single database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoProviderConfigured">
            <summary>
            No relational database providers are configured. Configure a database provider using OnConfiguring or by creating an ImmutableDbContextOptions with a database provider configured and passing it to the context.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConnectionAndConnectionString">
            <summary>
            Both an existing DbConnection and a connection string have been configured. When an existing DbConnection is used the connection string must be set on that connection.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoConnectionOrConnectionString">
            <summary>
            A relational store has been configured without specifying either the DbConnection or connection string to use.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UnsupportedType(System.Object)">
            <summary>
            No mapping to a relational type can be found for the CLR type '{clrType}'.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalNotInUse">
            <summary>
            Relational-specific methods can only be used when the context is using a relational database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UpdateStoreException">
            <summary>
            An error occurred while updating the entries. See the inner exception for details.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.TransactionAlreadyStarted">
            <summary>
            The connection is already in a transaction and cannot participate in another transaction.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.TransactionAssociatedWithDifferentConnection">
            <summary>
            The specified transaction is not associated with the current connection. Only transactions associated with the current connection may be used.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalLoggerOpeningConnection(System.Object,System.Object)">
            <summary>
            Opening connection to database '{database}' on server '{server}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalLoggerClosingConnection(System.Object,System.Object)">
            <summary>
            Closing connection to database '{database}' on server '{server}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalLoggerBeginningTransaction(System.Object)">
            <summary>
            Beginning transaction with isolation level '{isolationLevel}'.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalLoggerCommittingTransaction">
            <summary>
            Committing transaction.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalLoggerRollingbackTransaction">
            <summary>
            Rolling back transaction.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.BadSequenceType">
            <summary>
            Invalid type for sequence. Valid types are 'Int64' (the default), 'Int32', 'Int16', and 'Byte'.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.BadSequenceString">
            <summary>
            Unable to deserialize sequence from model metadata. See inner exception for details.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.MigrationNotFound(System.Object)">
            <summary>
            The migration '{migrationName}' was not found.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UnknownOperation(System.Object,System.Object)">
            <summary>
            The current migration SQL generator '{sqlGeneratorType}' is unable to generate SQL for operations of type '{operationType}'.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.InvalidCommandTimeout">
            <summary>
            The specified CommandTimeout value is not valid. It must be a positive number.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.InvalidMaxBatchSize">
            <summary>
            The specified MaxBatchSize value is not valid. It must be a positive number.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UnableToDiscriminate(System.Object)">
            <summary>
            Unable to materialize entity of type '{entityType}'. No discriminators were matched.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DiscriminatorPropertyMustBeOnRoot(System.Object)">
            <summary>
            A discriminator property cannot be set for the entity type '{entityType}' because it is not the root of an inheritance hierarchy.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DiscriminatorPropertyNotFound(System.Object,System.Object)">
            <summary>
            Unable to set property '{property}' as a discriminator for entity type '{entityType}' because it is not a property of '{entityType}'.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.AmbientTransaction">
            <summary>
            An ambient transaction has been detected. Entity Framework Core does not support ambient transactions. See http://go.microsoft.com/fwlink/?LinkId=800142
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.PossibleUnintendedUseOfEquals(System.Object,System.Object)">
            <summary>
            Possible unintended use of method Equals(object) for arguments of different types: '{left}', '{right}'. This comparison will always return 'false'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.PossibleIncorrectResultsUsingLikeOperator(System.Object)">
            <summary>
            Linq translation for method '{function}' used by this database provider can return incorrect results when the value argument contains wildcard characters (e.g. '%' or '_').
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.StoredProcedureIncludeNotSupported">
            <summary>
            The Include operation is not supported when calling a stored procedure.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.GeneratingDown(System.Object)">
            <summary>
            Generating down script for migration '{migration}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.GeneratingUp(System.Object)">
            <summary>
            Generating up script for migration '{migration}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ApplyingMigration(System.Object)">
            <summary>
            Applying migration '{migration}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RevertingMigration(System.Object)">
            <summary>
            Reverting migration '{migration}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UsingConnection(System.Object,System.Object)">
            <summary>
            Using database '{database}' on server '{dataSource}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.FromSqlMissingColumn(System.Object)">
            <summary>
            The required column '{column}' was not present in the results of a 'FromSql' operation.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateTableName(System.Object,System.Object,System.Object)">
            <summary>
            Cannot use table '{table}' in schema '{schema}' for entity '{entityType}' since it is being used for another entity.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.KeyHasDefaultValue(System.Object,System.Object)">
            <summary>
            Property '{property}' on entity type '{entityType}' is part of a primary or alternate key but has a constant default value set. Constant default values are not useful for primary or alternate keys since these properties must always have non-null unqiue values.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DiscriminatorEntityTypeNotDerived(System.Object,System.Object)">
            <summary>
            Cannot configure the discriminator value for entity type '{entityType}' because it doesn't derive from '{rootEntityType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DiscriminatorValueIncompatible(System.Object,System.Object,System.Object)">
            <summary>
            Cannot set discriminator value '{value}' for discriminator property '{discriminator}' because it is not assignable to property of type '{discriminatorType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoDiscriminatorForValue(System.Object,System.Object)">
            <summary>
            Cannot set discriminator value for entity type '{entityType}' because the root entity type '{rootEntityType}' doesn't have a discriminator property set.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoDiscriminatorProperty(System.Object)">
            <summary>
            The entity type '{entityType}' is part of a hierarchy, but does not have a discriminator property configured.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoDiscriminatorValue(System.Object)">
            <summary>
            The entity type '{entityType}' is part of a hierarchy, but does not have a discriminator value configured.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ClientEvalWarning(System.Object)">
            <summary>
            The LINQ expression '{expression}' could not be translated and will be evaluated locally.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.MissingParameterValue(System.Object)">
            <summary>
            No value provided for required parameter '{parameter}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ParameterNotObjectArray(System.Object)">
            <summary>
            Cannot use the value provided for parameter '{parameter}' because it isn't assignable to type object[].
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.RelationalLoggerExecutedCommand(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Executed DbCommand ({elapsed}ms) [Parameters=[{parameters}], CommandType='{commandType}', CommandTimeout='{commandTimeout}']{newLine}{commandText}
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateColumnNameDataTypeMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            '{entityType1}.{property1}' and '{entityType2}.{property2}' are both mapped to column '{columnName}' in '{table}' but are configured to use different data types ('{dataType1}' and '{dataType2}').
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.NoActiveTransaction">
            <summary>
            The connection does not have any active transactions.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingRowUpdates">
            <summary>
            Two entities cannot make conflicting updates to the same row.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.IncorrectDefaultValueType(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Cannot set default value '{value}' of type '{valueType}' on property '{property}' of type '{propertyType}' in entity type '{entityType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateDiscriminatorValue(System.Object,System.Object,System.Object)">
            <summary>
            The discriminator value for '{entityType1}' is '{discriminatorValue}' which is the same for '{entityType2}'. Every concrete entity type in the hierarchy needs to have a unique discriminator value.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateColumnNameNullabilityMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            '{entityType1}.{property1}' and '{entityType2}.{property2}' are both mapped to column '{columnName}' in '{table}' but are configured with different nullability.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateColumnNameComputedSqlMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            '{entityType1}.{property1}' and '{entityType2}.{property2}' are both mapped to column '{columnName}' in '{table}' but are configured to use different computed values ('{value1}' and '{value2}').
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateColumnNameDefaultSqlMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            '{entityType1}.{property1}' and '{entityType2}.{property2}' are both mapped to column '{columnName}' in '{table}' but are configured to use different default values ('{value1}' and '{value2}').
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.ConflictingColumnServerGeneration(System.Object,System.Object,System.Object)">
            <summary>
            {conflictingConfiguration} cannot be set for '{property}', because {existingConfiguration} is already set.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateForeignKeyColumnMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The foreign keys {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{foreignKeyName}' but use different columns ({columnNames1} and {columnNames2}).
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateForeignKeyDeleteBehaviorMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The foreign keys {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{foreignKeyName}' but with different delete behavior ('{deleteBehavior1}' and '{deleteBehavior2}').
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateForeignKeyPrincipalColumnMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The foreign keys {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{foreignKeyName}' but referencing different principal columns ({principalColumnNames1} and {principalColumnNames2}).
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateForeignKeyPrincipalTableMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The foreign keys {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{foreignKeyName}' but referencing different principal tables ('{principalTable1}' and '{principalTable2}').
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateForeignKeyUniquenessMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The foreign keys {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{foreignKeyName}' but with different uniqueness.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateIndexColumnMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The indexes {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{indexName}' but with different columns ({columnNames1} and {columnNames2}).
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.DuplicateIndexUniquenessMismatch(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The indexes {index1} on '{entityType1}' and {index2} on '{entityType2}' are both mapped to '{table}.{indexName}' but with different uniqueness.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.RelationalStrings.UnsupportedPropertyType(System.Object,System.Object,System.Object)">
            <summary>
            No mapping to a relational type can be found for property '{entity}.{property}' with the CLR type '{clrType}'.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2">
            <summary>
                <para>
                    Allows relational database specific configuration to be performed on <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions" />.
                </para>
                <para>
                    Instances of this class are typically returned from methods that configure the context to use a
                    particular relational database provider.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.#ctor(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2" /> class.
            </summary>
            <param name="optionsBuilder"> The core options builder. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.OptionsBuilder">
            <summary>
                Gets the core options builder.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.CloneExtension">
            <summary>
                Clones the configuration in this builder.
            </summary>
            <returns> The cloned configuration. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.MaxBatchSize(System.Int32)">
            <summary>
                Configures the maximum number of statements that will be included in commands sent to the database
                during <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" />.
            </summary>
            <param name="maxBatchSize"> The maximum number of statements. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.CommandTimeout(System.Nullable{System.Int32})">
            <summary>
                Configures the wait time (in seconds) before terminating the attempt to execute a command and generating an error.
            </summary>
            <param name="commandTimeout"> The time in seconds to wait for the command to execute. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.MigrationsAssembly(System.String)">
            <summary>
                Configures the assembly where migrations are maintained for this context.
            </summary>
            <param name="assemblyName"> The name of the assembly. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.MigrationsHistoryTable(System.String,System.String)">
            <summary>
                Configures the name of the table used to record which migrations have been applied to the database.
            </summary>
            <param name="tableName"> The name of the table. </param>
            <param name="schema"> The schema of the table. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.UseRelationalNulls">
            <summary>
                Configures the context to use relational database semantics when comparing null values. By default,
                Entity Framework will use C# semantics for null values, and generate SQL to compensate for differences
                in how the database handles nulls.
            </summary>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.ExecutionStrategy(System.Func{Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyContext,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy})">
            <summary>
                Configures the context to use the provided <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" />.
            </summary>
            <param name="getExecutionStrategy"> A function that returns a new instance of an execution strategy. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalDbContextOptionsBuilder`2.SetOption(System.Action{`1})">
            <summary>
                Sets an option by cloning the extension used to store the settings. This ensures the builder
                does not modify options that are already in use elsewhere.
            </summary>
            <param name="setAction"> An action to set the option. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId">
            <summary>
                Values that are used as the eventId when logging messages from a relational database provider via <see cref="T:Microsoft.Extensions.Logging.ILogger" />.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId.ExecutedCommand">
            <summary>
                A command was executed against the database.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId.CreatingDatabase">
            <summary>
                A database is being created.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId.OpeningConnection">
            <summary>
                A connection is being opened.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId.ClosingConnection">
            <summary>
                A connection is being closed.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId.BeginningTransaction">
            <summary>
                A transaction is beginning.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId.CommittingTransaction">
            <summary>
                A transaction is being committed.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId.RollingbackTransaction">
            <summary>
                A transaction is being rolled back.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId.QueryClientEvaluationWarning">
            <summary>
                A LINQ query is being executed where some of the query will be evaluated on the client
                (i.e. part of the query can not be translated to SQL).
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId.PossibleUnintendedUseOfEqualsWarning">
            <summary>
                Two entities were compared for equality in a LINQ query, which may not produce the desired result.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId.AmbientTransactionWarning">
            <summary>
                An ambient transaction is present, which is not fully supported by Entity Framework Core.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId.PossibleIncorrectResultsUsingLikeOperator">
            <summary>
                Linq translation of 'Contains', 'EndsWith' and 'StartsWith' functions may produce incorrect results
                when searched value contains wildcard characters.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId.ApplyingMigration">
            <summary>
                A migration is being applied to the database.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId.GeneratingMigrationDownScript">
            <summary>
                The revert script is being generated for a migration.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId.GeneratingMigrationUpScript">
            <summary>
                The apply script is being generated for a migration.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId.MigrateUsingConnection">
            <summary>
                Migrations are being applied on the database.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId.RevertingMigration">
            <summary>
                A migration is being reverted.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId.RevertingMigrationSql">
            <summary>
                The SQL for a migration being reverted.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.RelationalEventId.ApplyingMigrationSql">
            <summary>
                The SQL for a migration being applied.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.RelationalServiceCollectionExtensions">
            <summary>
                Relational database specific extension methods for <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.RelationalServiceCollectionExtensions.AddRelational(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                <para>
                    Adds the base services required by a relational database provider.
                </para>
                <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
            <param name="services"> The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add services to. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.Internal.RelationalModelSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.Internal.RelationalModelSource.#ctor(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder,Microsoft.EntityFrameworkCore.Infrastructure.IModelCustomizer,Microsoft.EntityFrameworkCore.Infrastructure.IModelCacheKeyFactory)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.Internal.RelationalModelSource.FindSets(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.DiscriminatorBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder,System.Func{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.DiscriminatorConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.DiscriminatorConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalColumnAttributeConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalColumnAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,System.ComponentModel.DataAnnotations.Schema.ColumnAttribute,System.Reflection.MemberInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Internal.IDbSetFinder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.AddConventions(Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalConventionSetBuilder.ReplaceConvention``2(System.Collections.Generic.IList{``0},``1)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalForeignKeyAttributeConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalForeignKeyAttributeConvention.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalForeignKeyAttributeConvention.FindCandidateNavigationPropertyType(System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalInversePropertyAttributeConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalInversePropertyAttributeConvention.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalInversePropertyAttributeConvention.FindCandidateNavigationPropertyType(System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalPropertyDiscoveryConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalPropertyDiscoveryConvention.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalPropertyDiscoveryConvention.IsCandidatePrimitiveProperty(System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalPropertyMappingValidationConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalPropertyMappingValidationConvention.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalPropertyMappingValidationConvention.IsMappedPrimitiveProperty(System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalRelationshipDiscoveryConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalRelationshipDiscoveryConvention.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalRelationshipDiscoveryConvention.FindCandidateNavigationPropertyType(System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalTableAttributeConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationalTableAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.ComponentModel.DataAnnotations.Schema.TableAttribute)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.TableNameFromDbSetConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.TableNameFromDbSetConvention.#ctor(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Internal.IDbSetFinder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.TableNameFromDbSetConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.Prefix">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.ColumnName">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.ColumnType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DefaultValueSql">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.ComputedColumnSql">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DefaultValue">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DatabaseName">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.TableName">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.Schema">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DefaultSchema">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.Name">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.SequencePrefix">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DiscriminatorProperty">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationNames.DiscriminatorValue">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder.ConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder.MetadataBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder.SetAnnotation(System.String,System.String,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalAnnotationsBuilder.CanSetAnnotation(System.String,System.String,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.DefaultDiscriminatorName">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.Annotations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.EntityTypeBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.GetAnnotations(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.GetAnnotations(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.ToTable(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.ToSchema(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.ToTable(System.String,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.HasDiscriminator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.HasDiscriminator(System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.HasDiscriminator(System.String,System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.HasDiscriminator(System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalEntityTypeBuilderAnnotations.HasDiscriminatorValue(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalForeignKeyBuilderAnnotations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalForeignKeyBuilderAnnotations.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalForeignKeyBuilderAnnotations.HasConstraintName(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.#ctor(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.Instance">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.ColumnName">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.ColumnType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DefaultValueSql">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.ComputedColumnSql">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DefaultValue">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DatabaseName">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.TableName">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.Schema">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DefaultSchema">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.Name">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.SequencePrefix">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DiscriminatorProperty">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames.DiscriminatorValue">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalIndexBuilderAnnotations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalIndexBuilderAnnotations.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalIndexBuilderAnnotations.HasName(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalInternalMetadataBuilderExtensions.Relational(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalKeyBuilderAnnotations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalKeyBuilderAnnotations.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalKeyBuilderAnnotations.HasName(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModelBuilderAnnotations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModelBuilderAnnotations.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModelBuilderAnnotations.HasDatabaseName(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalModelBuilderAnnotations.HasDefaultSchema(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalPropertyBuilderAnnotations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalPropertyBuilderAnnotations.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalFullAnnotationNames)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalPropertyBuilderAnnotations.Annotations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalPropertyBuilderAnnotations.ShouldThrowOnConflict">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalPropertyBuilderAnnotations.HasColumnName(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalPropertyBuilderAnnotations.HasColumnType(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalPropertyBuilderAnnotations.HasDefaultValueSql(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalPropertyBuilderAnnotations.HasComputedColumnSql(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.RelationalPropertyBuilderAnnotations.HasDefaultValue(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.#ctor(Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.Migrations.IMigrationsModelDiffer,Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.HistoryRepository.InterpretExistsResult(System.Object)">
            <returns>true if the table exists; otherwise, false.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationCommandExecutor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationCommandExecutor.ExecuteNonQuery(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.MigrationCommand},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationCommandExecutor.ExecuteNonQueryAsync(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.MigrationCommand},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationExtensions.GetId(Microsoft.EntityFrameworkCore.Migrations.Migration)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsAssembly">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsAssembly.#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.Migrations.IMigrationsIdGenerator)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsAssembly.Migrations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsAssembly.ModelSnapshot">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsAssembly.Assembly">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsAssembly.FindMigrationId(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsAssembly.CreateMigration(System.Reflection.TypeInfo,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsIdGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsIdGenerator.GetName(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsIdGenerator.IsValidId(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsIdGenerator.GenerateId(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Migrations.IMigrationsAnnotationProvider)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.TypeMapper">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Annotations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.MigrationsAnnotations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.HasDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetDifferences(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Sort(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.String})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.String,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IEntityType},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IKey},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IIndex},Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.IIndex,Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.IIndex)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.ISequence},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.ISequence})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Diff(Microsoft.EntityFrameworkCore.Metadata.ISequence,Microsoft.EntityFrameworkCore.Metadata.ISequence)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Add(Microsoft.EntityFrameworkCore.Metadata.ISequence)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.Remove(Microsoft.EntityFrameworkCore.Metadata.ISequence)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffCollection``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}},System.Func{``0,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}},System.Func{``0,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Migrations.Operations.MigrationOperation}},System.Func{``0,``0,System.Boolean}[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetColumns(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.HasDifferences(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetSchemas(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.GetDefaultValue(System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddMapping(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddMapping(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddCreate(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Operations.CreateTableOperation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.AddDrop(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindTarget(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindTarget(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindSource(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindSource(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindCreate(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.FindDrop(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.MigrationsModelDiffer.DiffContext.GetMetadata(Microsoft.EntityFrameworkCore.Migrations.Operations.DropTableOperation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.#ctor(Microsoft.EntityFrameworkCore.Migrations.IMigrationsAssembly,Microsoft.EntityFrameworkCore.Migrations.IHistoryRepository,Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator,Microsoft.EntityFrameworkCore.Migrations.IMigrationsSqlGenerator,Microsoft.EntityFrameworkCore.Storage.IRawSqlCommandBuilder,Microsoft.EntityFrameworkCore.Migrations.IMigrationCommandExecutor,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.Extensions.Logging.ILogger{Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator},Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.Migrate(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.MigrateAsync(System.String,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.GenerateScript(System.String,System.String,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.GenerateUpSql(Microsoft.EntityFrameworkCore.Migrations.Migration)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Migrations.Internal.Migrator.GenerateDownSql(Microsoft.EntityFrameworkCore.Migrations.Migration,Microsoft.EntityFrameworkCore.Migrations.Migration)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Operations.RenameSequenceOperation.NewName">
            <summary>
                The new schema name or null if unchanged.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Operations.RenameSequenceOperation.NewSchema">
            <summary>
                The new sequence name or null if unchanged.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Operations.RenameTableOperation.NewSchema">
            <summary>
                The new schema name or null if unchanged.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Migrations.Operations.RenameTableOperation.NewName">
            <summary>
                The new table name or null if unchanged.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider">
            <summary>
                Provides reflection objects for late-binding to asynchronous relational query operations.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.ShapedQueryMethod">
            <summary>
                The shaped query method.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.DefaultIfEmptyShapedQueryMethod">
            <summary>
                The default if empty shaped query method.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.QueryMethod">
            <summary>
                The query method.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.GetResultMethod">
            <summary>
                The get result method.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.GroupByMethod">
            <summary>
                The group by method.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.GroupJoinIncludeType">
            <summary>
                Type of the group join include.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.CreateGroupJoinInclude(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Boolean,System.Object,System.Object)">
            <summary>
                Creates a group join include used to describe an Include operation that should
                be performed as part of a GroupJoin.
            </summary>
            <param name="navigationPath"> The included navigation path. </param>
            <param name="querySourceRequiresTracking"> true if this query source requires tracking. </param>
            <param name="existingGroupJoinInclude"> A possibly null existing group join include. </param>
            <param name="relatedEntitiesLoaders"> The related entities loaders. </param>
            <returns>
                A new group join include.
            </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.GroupJoinMethod">
            <summary>
                The group join method.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.IncludeMethod">
            <summary>
                The include method.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.RelatedEntitiesLoaderType">
            <summary>
                Type of the related entities loader.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.CreateReferenceRelatedEntitiesLoaderMethod">
            <summary>
                The create reference related entities loader method.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.CreateCollectionRelatedEntitiesLoaderMethod">
            <summary>
                The create collection related entities loader method.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.AsyncQueryMethodProvider.InjectParametersMethod">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider">
            <summary>
                Provides reflection objects for late-binding to relational query operations.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.GroupJoinMethod">
            <summary>
                Gets the group join method.
            </summary>
            <value>
                The group join method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.GroupByMethod">
            <summary>
                Gets the group by method.
            </summary>
            <value>
                The group by method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.ShapedQueryMethod">
            <summary>
                Gets the shaped query method.
            </summary>
            <value>
                The shaped query method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.DefaultIfEmptyShapedQueryMethod">
            <summary>
                Gets the default if empty shaped query method.
            </summary>
            <value>
                The default if empty shaped query method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.QueryMethod">
            <summary>
                Gets the query method.
            </summary>
            <value>
                The query method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.GetResultMethod">
            <summary>
                Gets the get result method.
            </summary>
            <value>
                The get result method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.IncludeMethod">
            <summary>
                Gets the include method.
            </summary>
            <value>
                The include method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.RelatedEntitiesLoaderType">
            <summary>
                Gets the type of the related entities loader.
            </summary>
            <value>
                The type of the related entities loader.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.CreateReferenceRelatedEntitiesLoaderMethod">
            <summary>
                Gets the create reference related entities loader method.
            </summary>
            <value>
                The create reference related entities loader method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.CreateCollectionRelatedEntitiesLoaderMethod">
            <summary>
                Gets the create collection related entities loader method.
            </summary>
            <value>
                The create collection related entities loader method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.InjectParametersMethod">
            <summary>
                Gets the inject parameters method.
            </summary>
            <value>
                The pre execute method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.GroupJoinIncludeType">
            <summary>
                Gets the type of the group join include.
            </summary>
            <value>
                The type of the group join include.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider.CreateGroupJoinInclude(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Boolean,System.Object,System.Object)">
            <summary>
                Creates a group join include used to describe an Include operation that should
                be performed as part of a GroupJoin.
            </summary>
            <param name="navigationPath"> The included navigation path. </param>
            <param name="querySourceRequiresTracking"> true if this query source requires tracking. </param>
            <param name="existingGroupJoinInclude"> A possibly null existing group join include. </param>
            <param name="relatedEntitiesLoaders"> The related entities loaders. </param>
            <returns>
                A new group join include.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.QueryMethodProvider">
            <summary>
                Provides reflection objects for late-binding to synchronous relational query operations.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryMethodProvider.ShapedQueryMethod">
            <summary>
                Gets the shaped query method.
            </summary>
            <value>
                The shaped query method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryMethodProvider.DefaultIfEmptyShapedQueryMethod">
            <summary>
                Gets the default if empty shaped query method.
            </summary>
            <value>
                The default if empty shaped query method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryMethodProvider.QueryMethod">
            <summary>
                Gets the query method.
            </summary>
            <value>
                The query method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryMethodProvider.GetResultMethod">
            <summary>
                Gets the get result method.
            </summary>
            <value>
                The get result method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryMethodProvider.GroupByMethod">
            <summary>
                Gets the group by method.
            </summary>
            <value>
                The group by method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryMethodProvider.GroupJoinIncludeType">
            <summary>
                Gets the type of the group join include.
            </summary>
            <value>
                The type of the group join include.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.QueryMethodProvider.CreateGroupJoinInclude(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Boolean,System.Object,System.Object)">
            <summary>
                Creates a group join include used to describe an Include operation that should
                be performed as part of a GroupJoin.
            </summary>
            <param name="navigationPath"> The included navigation path. </param>
            <param name="querySourceRequiresTracking"> true if this query source requires tracking. </param>
            <param name="existingGroupJoinInclude"> A possibly null existing group join include. </param>
            <param name="relatedEntitiesLoaders"> The related entities loaders. </param>
            <returns>
                A new group join include.
            </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryMethodProvider.GroupJoinMethod">
            <summary>
                Gets the group join method.
            </summary>
            <value>
                The group join method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryMethodProvider.IncludeMethod">
            <summary>
                Gets the include method.
            </summary>
            <value>
                The include method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryMethodProvider.RelatedEntitiesLoaderType">
            <summary>
                Gets the type of the related entities loader.
            </summary>
            <value>
                The type of the related entities loader.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryMethodProvider.CreateReferenceRelatedEntitiesLoaderMethod">
            <summary>
                Gets the create reference related entities loader method.
            </summary>
            <value>
                The create reference related entities loader method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryMethodProvider.CreateCollectionRelatedEntitiesLoaderMethod">
            <summary>
                Gets the create collection related entities loader method.
            </summary>
            <value>
                The create collection related entities loader method.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryMethodProvider.InjectParametersMethod">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext">
            <summary>
                A relational query compilation context. The primary data structure representing the state/components
                used during relational query compilation.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger,Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider,Microsoft.EntityFrameworkCore.Query.IQueryMethodProvider,System.Type,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext.QueryMethodProvider">
            <summary>
                Gets the query method provider.
            </summary>
            <value>
                The query method provider.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext.ParentQueryReferenceParameters">
            <summary>
                Gets the list of parameter names that represent reference to a parent query.
            </summary>
            <value>
                The list of parameter names that represent reference to a parent query.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext.CreateQueryModelVisitor">
            <summary>
                Creates a query model visitor.
            </summary>
            <returns>
                The new query model visitor.
            </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext.IsLateralJoinSupported">
            <summary>
                True if the current provider supports SQL LATERAL JOIN.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext.CreateQueryModelVisitor(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)">
            <summary>
                Creates query model visitor.
            </summary>
            <param name="parentEntityQueryModelVisitor"> The parent entity query model visitor. </param>
            <returns>
                The new query model visitor.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext.FindSelectExpression(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Searches for a select expression corresponding to the passed query source.
            </summary>
            <param name="querySource"> The query source. </param>
            <returns>
                The select expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext.CreateUniqueTableAlias">
            <summary>
                Creates a unique table alias.
            </summary>
            <returns>
                A unique table alias.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext.CreateUniqueTableAlias(System.String)">
            <summary>
                Creates a unique table alias.
            </summary>
            <param name="currentAlias"> The current alias. </param>
            <returns>
                A unique table alias.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContextFactory">
            <summary>
                A relational factory for instances of <see cref="T:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContextFactory.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger{Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContextFactory},Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory,Remotion.Linq.Parsing.Structure.NodeTypeProviders.MethodInfoBasedNodeTypeRegistry,Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContextFactory.Create(System.Boolean)">
            <summary>
                Creates a new QueryCompilationContext.
            </summary>
            <param name="async"> true if the query is asynchronous. </param>
            <returns>
                A QueryCompilationContext.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext">
            <summary>
                The principal data structure used by a compiled relational query during execution.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.#ctor(System.Func{Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager},Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.Connection">
            <summary>
                Gets the active relational connection.
            </summary>
            <value>
                The connection.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.Semaphore">
            <summary>
                Gets a semaphore used to serialize async queries.
            </summary>
            <value>
                The semaphore.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.ExecutionStrategyFactory">
            <summary>
                The execution strategy factory.
            </summary>
            <value>
                The execution strategy factory.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.RegisterValueBufferCursor(Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor,System.Nullable{System.Int32})">
            <summary>
                Registers a value buffer cursor.
            </summary>
            <param name="valueBufferCursor"> The value buffer cursor. </param>
            <param name="queryIndex"> Zero-based index of the query. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.RegisterValueBufferCursorAsync(Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor,System.Nullable{System.Int32},System.Threading.CancellationToken)">
            <summary>
                Asynchronously registers a value buffer cursor.
            </summary>
            <param name="valueBufferCursor"> The value buffer cursor. </param>
            <param name="queryIndex"> Zero-based index of the query. </param>
            <param name="cancellationToken"> The cancellation token. </param>
            <returns>
                A Task.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.DeregisterValueBufferCursor(Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor)">
            <summary>
                Deregisters the value buffer cursor described by valueBufferCursor.
            </summary>
            <param name="valueBufferCursor"> The value buffer cursor. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.GetIncludeValueBuffer(System.Int32)">
            <summary>
                Gets the include value buffer for a given query index.
            </summary>
            <param name="queryIndex"> Zero-based index of the query. </param>
            <returns>
                The include value buffer.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.BeginIncludeScope">
            <summary>
                Begins an include scope.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryContext.EndIncludeScope">
            <summary>
                Ends an include scope.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor">
            <summary>
                The default relational <see cref="T:Remotion.Linq.QueryModel" /> visitor.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.QueriesBySource">
            <summary>
                The SelectExpressions for this query, mapped by query source.
            </summary>
            <value>
                A map of query source to select expression.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.INavigationRewritingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ISubQueryMemberPushDownExpressionVisitor,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IQuerySourceTracingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IEntityResultFindingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ITaskBlockingExpressionVisitor,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMemberAccessBindingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IOrderingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.Internal.IQueryAnnotationExtractor,Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler,Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource,Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IIncludeExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IConditionalRemovingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IQueryFlattenerFactory,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.ContextOptions">
            <summary>
                Gets the options for the target context.
            </summary>
            <value>
                Options for the target context.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.RequiresClientEval">
            <summary>
                Gets or sets a value indicating whether the query requires client eval.
            </summary>
            <value>
                true if the query requires client eval, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.RequiresClientSelectMany">
            <summary>
                Gets or sets a value indicating whether the query requires client select many.
            </summary>
            <value>
                true if the query requires client select many, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.RequiresClientJoin">
            <summary>
                Gets or sets a value indicating whether the query requires client join.
            </summary>
            <value>
                true if the query requires client join, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.RequiresClientFilter">
            <summary>
                Gets or sets a value indicating whether the query requires client filter.
            </summary>
            <value>
                true if the query requires client filter, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.RequiresClientOrderBy">
            <summary>
                Gets or sets a value indicating whether the query requires client order by.
            </summary>
            <value>
                true if the query requires client order by, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.RequiresClientProjection">
            <summary>
                Gets or sets a value indicating whether the query requires client projection.
            </summary>
            <value>
                true if the query requires client projection, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.RequiresClientResultOperator">
            <summary>
                Gets or sets a value indicating whether the query requires client result operator.
            </summary>
            <value>
                true if the query requires client result operator, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.RequiresClientSingleColumnResultOperator">
            <summary>
                Gets or sets a value indicating whether the query requires client evaluation for result operators potentially apply to a subset of columns rather than entire row.
            </summary>
            <value>
                true if the query requires client single column result operator, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.QueryCompilationContext">
            <summary>
                Context for the query compilation.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.Queries">
            <summary>
                The SelectExpressions active in the current query compilation.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.ParentQueryModelVisitor">
            <summary>
                Gets the parent query model visitor, or null if there is no parent.
            </summary>
            <value>
                The parent query model visitor, or null if there is no parent.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.RegisterSubQueryVisitor(Remotion.Linq.Clauses.IQuerySource,Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor)">
            <summary>
                Registers a sub query visitor.
            </summary>
            <param name="querySource"> The query source. </param>
            <param name="queryModelVisitor"> The query model visitor. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.AddQuery(Remotion.Linq.Clauses.IQuerySource,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)">
            <summary>
                Adds a SelectExpression to this query.
            </summary>
            <param name="querySource"> The query source. </param>
            <param name="selectExpression"> The select expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.TryGetQuery(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Try and get the active SelectExpression for a given query source.
            </summary>
            <param name="querySource"> The query source. </param>
            <returns>
                A SelectExpression, or null.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.IncludeNavigations(Remotion.Linq.QueryModel,System.Collections.Generic.IReadOnlyCollection{Microsoft.EntityFrameworkCore.Query.IncludeSpecification})">
            <summary>
                High-level method called to perform Include compilation.
            </summary>
            <param name="queryModel"> The query model. </param>
            <param name="includeSpecifications"> Related data to be included. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.IncludeNavigations(Microsoft.EntityFrameworkCore.Query.IncludeSpecification,System.Type,System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
                High-level method called to perform Include compilation for a single Include.
            </summary>
            <param name="includeSpecification"> The navigation property to be included. </param>
            <param name="resultType"> The type of results returned by the query. </param>
            <param name="accessorExpression"> Expression for the navigation property to be included. </param>
            <param name="querySourceRequiresTracking"> A value indicating whether results of this query are to be tracked. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.VisitQueryModel(Remotion.Linq.QueryModel)">
            <summary>
                Visit a query model.
            </summary>
            <param name="queryModel"> The query model. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.VisitSubQueryModel(Remotion.Linq.QueryModel)">
            <summary>
                Visit a sub-query model.
            </summary>
            <param name="queryModel"> The sub-query model. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.CompileMainFromClauseExpression(Remotion.Linq.Clauses.MainFromClause,Remotion.Linq.QueryModel)">
            <summary>
                Compile main from clause expression.
            </summary>
            <param name="mainFromClause"> The main from clause. </param>
            <param name="queryModel"> The query model. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.VisitAdditionalFromClause(Remotion.Linq.Clauses.AdditionalFromClause,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                Visit an additional from clause.
            </summary>
            <param name="fromClause"> The from clause being visited. </param>
            <param name="queryModel"> The query model. </param>
            <param name="index"> Index of the node being visited. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.CompileAdditionalFromClauseExpression(Remotion.Linq.Clauses.AdditionalFromClause,Remotion.Linq.QueryModel)">
            <summary>
                Compile an additional from clause expression.
            </summary>
            <param name="additionalFromClause"> The additional from clause being compiled. </param>
            <param name="queryModel"> The query model. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                Visit a join clause.
            </summary>
            <param name="joinClause"> The join clause being visited. </param>
            <param name="queryModel"> The query model. </param>
            <param name="index"> Index of the node being visited. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.CompileJoinClauseInnerSequenceExpression(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel)">
            <summary>
                Compile a join clause inner sequence expression.
            </summary>
            <param name="joinClause"> The join clause being compiled. </param>
            <param name="queryModel"> The query model. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.VisitGroupJoinClause(Remotion.Linq.Clauses.GroupJoinClause,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                Visit a group join clause.
            </summary>
            <param name="groupJoinClause"> The group join being visited. </param>
            <param name="queryModel"> The query model. </param>
            <param name="index"> Index of the node being visited. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.OptimizeJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32,System.Action,System.Reflection.MethodInfo,System.Boolean)">
            <summary>
                Optimize a join clause.
            </summary>
            <param name="joinClause"> The join clause being visited. </param>
            <param name="queryModel"> The query model. </param>
            <param name="index"> Index of the node being visited. </param>
            <param name="baseVisitAction"> The base visit action. </param>
            <param name="operatorToFlatten"> The operator to flatten. </param>
            <param name="groupJoin"> true if an outer join should be performed. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.CompileGroupJoinInnerSequenceExpression(Remotion.Linq.Clauses.GroupJoinClause,Remotion.Linq.QueryModel)">
            <summary>
                Compile a group join inner sequence expression.
            </summary>
            <param name="groupJoinClause"> The group join clause being compiled. </param>
            <param name="queryModel"> The query model. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.VisitWhereClause(Remotion.Linq.Clauses.WhereClause,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                Visit a where clause.
            </summary>
            <param name="whereClause"> The where clause being visited. </param>
            <param name="queryModel"> The query model. </param>
            <param name="index"> Index of the node being visited. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.VisitOrderByClause(Remotion.Linq.Clauses.OrderByClause,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                Visit an order by clause.
            </summary>
            <param name="orderByClause"> The order by clause. </param>
            <param name="queryModel"> The query model. </param>
            <param name="index"> Index of the node being visited. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                Visit a result operator.
            </summary>
            <param name="resultOperator"> The result operator being visited. </param>
            <param name="queryModel"> The query model. </param>
            <param name="index"> Index of the node being visited. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.WarnClientEval(System.Object)">
            <summary>
                Generated a client-eval warning
            </summary>
            <param name="expression"> The expression being client-eval'd. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.BindMemberToValueBuffer(System.Linq.Expressions.MemberExpression,System.Linq.Expressions.Expression)">
            <summary>
                Bind a member expression to a value buffer access.
            </summary>
            <param name="memberExpression"> The member access expression. </param>
            <param name="expression"> The target expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.BindMethodCallToValueBuffer(System.Linq.Expressions.MethodCallExpression,System.Linq.Expressions.Expression)">
            <summary>
                Bind a method call expression to a value buffer access.
            </summary>
            <param name="methodCallExpression"> The method call expression. </param>
            <param name="expression"> The target expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.BindMemberExpression``1(System.Linq.Expressions.MemberExpression,System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Remotion.Linq.Clauses.IQuerySource,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,``0},System.Boolean)">
            <summary>
                Bind a member expression.
            </summary>
            <typeparam name="TResult"> Type of the result. </typeparam>
            <param name="memberExpression"> The member access expression. </param>
            <param name="memberBinder"> The member binder. </param>
            <param name="bindSubQueries"> true to bind sub queries. </param>
            <returns>
                A TResult.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.BindMethodCallExpression``1(System.Linq.Expressions.MethodCallExpression,System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Remotion.Linq.Clauses.IQuerySource,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,``0},System.Boolean)">
            <summary>
                Bind a method call expression.
            </summary>
            <typeparam name="TResult"> Type of the result. </typeparam>
            <param name="methodCallExpression"> The method call expression. </param>
            <param name="memberBinder"> The member binder. </param>
            <param name="bindSubQueries"> true to bind sub queries. </param>
            <returns>
                A TResult.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor.BindLocalMethodCallExpression(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                Bind a local method call expression.
            </summary>
            <param name="methodCallExpression"> The local method call expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorFactory">
            <summary>
                A factory for instances of <see cref="T:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorFactory.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.INavigationRewritingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ISubQueryMemberPushDownExpressionVisitor,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IQuerySourceTracingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IEntityResultFindingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ITaskBlockingExpressionVisitor,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMemberAccessBindingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IOrderingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.Internal.IQueryAnnotationExtractor,Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler,Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource,Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IIncludeExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IConditionalRemovingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IQueryFlattenerFactory,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorFactory.RelationalAnnotationProvider">
            <summary>
                Gets the relational annotation provider.
            </summary>
            <value>
                The relational annotation provider.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorFactory.IncludeExpressionVisitorFactory">
            <summary>
                Gets the include expression visitor factory.
            </summary>
            <value>
                The include expression visitor factory.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorFactory.SqlTranslatingExpressionVisitorFactory">
            <summary>
                Gets the SQL translating expression visitor factory.
            </summary>
            <value>
                The SQL translating expression visitor factory.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorFactory.CompositePredicateExpressionVisitorFactory">
            <summary>
                Gets the composite predicate expression visitor factory.
            </summary>
            <value>
                The composite predicate expression visitor factory.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorFactory.ConditionalRemovingExpressionVisitorFactory">
            <summary>
                Gets the conditional removing expression visitor factory.
            </summary>
            <value>
                The conditional removing expression visitor factory.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorFactory.QueryFlattenerFactory">
            <summary>
                Gets the query flattener factory.
            </summary>
            <value>
                The query flattener factory.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorFactory.ContextOptions">
            <summary>
                Gets options for controlling the context.
            </summary>
            <value>
                Options that control the context.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.QueryCompilationContext,Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)">
            <summary>
                Creates a new EntityQueryModelVisitor.
            </summary>
            <param name="queryCompilationContext"> Compilation context for the query. </param>
            <param name="parentEntityQueryModelVisitor"> The visitor for the outer query. </param>
            <returns>
                An EntityQueryModelVisitor.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.AggregateExpression">
            <summary>
                Base class for aggregate expressions.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.AggregateExpression.#ctor(System.Linq.Expressions.Expression)">
            <summary>
                Specialised constructor for use only by derived class.
            </summary>
            <param name="expression"> The expression to aggregate. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.AggregateExpression.Expression">
            <summary>
                The expression to aggregate.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.AggregateExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.AggregateExpression.Expression" />. (Inherited from <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.AggregateExpression.Expression" />.)
            </summary>
            <returns> The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.AggregateExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.AggregateExpression.Expression" /> represents. (Inherited from <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.AggregateExpression.Expression" />.)
            </summary>
            <returns> The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.AggregateExpression.Type" /> that represents the static type of the expression. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.AggregateExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression">
            <summary>
                An alias expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.#ctor(System.Linq.Expressions.Expression)">
            <summary>
                Creates a new instance of an AliasExpression.
            </summary>
            <param name="expression"> The expression being aliased. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.#ctor(System.String,System.Linq.Expressions.Expression)">
            <summary>
                Creates a new instance of an AliasExpression.
            </summary>
            <param name="alias"> The alias. </param>
            <param name="expression"> The expression being aliased. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.Alias">
            <summary>
                Gets or sets the alias.
            </summary>
            <value>
                The alias.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.Expression">
            <summary>
                The expression being aliased.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.IsProjected">
            <summary>
                Gets or sets a value indicating whether the expression is being projected.
            </summary>
            <value>
                true if projected, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.Expression" />. (Inherited from <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.Expression" />.)
            </summary>
            <returns> The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.Expression" /> represents. (Inherited from <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.Expression" />.)
            </summary>
            <returns> The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.Type" /> that represents the static type of the expression. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.SourceExpression">
            <summary>
                Gets or sets the source expression.
            </summary>
            <value>
                The source expression.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.SourceMember">
            <summary>
                Gets or sets the source member.
            </summary>
            <value>
                The source member.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.Equals(System.Object)">
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj"> The object to compare with the current object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression.GetHashCode">
            <summary>
                Returns a hash code for this object.
            </summary>
            <returns>
                A hash code for this object.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression">
            <summary>
                A column expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.#ctor(System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Creates a new instance of a ColumnExpression.
            </summary>
            <param name="name"> The column name. </param>
            <param name="property"> The corresponding property. </param>
            <param name="tableExpression"> The target table expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.#ctor(System.String,System.Type,Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Creates a new instance of a ColumnExpression.
            </summary>
            <param name="name"> The column name. </param>
            <param name="type"> The column type. </param>
            <param name="tableExpression"> The target table expression. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.Table">
            <summary>
                The target table.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.TableAlias">
            <summary>
                The target table alias.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.Property">
            <summary>
                The corresponding property.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.Name">
            <summary>
                Gets the column name.
            </summary>
            <value>
                The column name.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns> The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns> The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.Type" /> that represents the static type of the expression. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.IsNullable">
            <summary>
                Gets a value indicating whether this column expression can contain null.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.Equals(System.Object)">
            <summary>
                Tests if this object is considered equal to another.
            </summary>
            <param name="obj"> The object to compare with the current object. </param>
            <returns>
                true if the objects are considered equal, false if they are not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.GetHashCode">
            <summary>
                Returns a hash code for this object.
            </summary>
            <returns>
                A hash code for this object.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression">
            <summary>
                Represents a SQL COUNT expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression.#ctor">
            <summary>
                Creates a new instance of a CountExpression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression.#ctor(System.Type)">
            <summary>
                Creates a new instance of a CountExpression.
            </summary>
            <param name="type"> The type. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns> The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns> The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression.Type" /> that represents the static type of the expression. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression">
            <summary>
                Represents a SQL CROSS JOIN expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Creates a new instance of a CrossJoinExpression.
            </summary>
            <param name="tableExpression"> The table expression. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression.TableExpression">
            <summary>
                The table expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.DiscriminatorPredicateExpression">
            <summary>
                Represents a discriminator predicate.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.DiscriminatorPredicateExpression.#ctor(System.Linq.Expressions.Expression,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Creates a new instance of a DiscriminatorPredicateExpression..
            </summary>
            <param name="predicate"> The predicate. </param>
            <param name="querySource"> The query source. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.DiscriminatorPredicateExpression.QuerySource">
            <summary>
                Gets the query source.
            </summary>
            <value>
                The query source.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.DiscriminatorPredicateExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.DiscriminatorPredicateExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.DiscriminatorPredicateExpression.Type" /> that represents the static type of the expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.DiscriminatorPredicateExpression.CanReduce">
            <summary>
                Indicates that the node can be reduced to a simpler node. If this
                returns true, Reduce() can be called to produce the reduced form.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.DiscriminatorPredicateExpression.Reduce">
            <summary>
                Reduces this node to a simpler expression. If CanReduce returns
                true, this should return a valid expression. This method is
                allowed to return another node which itself must be reduced.
            </summary>
            <returns>The reduced expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.DiscriminatorPredicateExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.DiscriminatorPredicateExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression">
            <summary>
                Represents a SQL EXISTS expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression.#ctor(System.Linq.Expressions.Expression)">
            <summary>
                Creates a new instance of a ExistsExpression..
            </summary>
            <param name="expression"> The subquery operand of the EXISTS expression. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression.Expression">
            <summary>
                Gets the subquery operand of the EXISTS expression.
            </summary>
            <value>
                The subquery operand of the EXISTS expression.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression.Expression" />. (Inherited from <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression.Expression" />.)
            </summary>
            <returns>The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression.Expression" /> represents. (Inherited from <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression.Expression" />.)
            </summary>
            <returns>The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression.Type" /> that represents the static type of the expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression">
            <summary>
                Represents a SQL CAST expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression.#ctor(System.Linq.Expressions.Expression,System.Type)">
            <summary>
                Creates a new instance of a ExplicitCastExpression..
            </summary>
            <param name="operand"> The operand. </param>
            <param name="type"> The target type. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression.Operand">
            <summary>
                Gets the operand.
            </summary>
            <value>
                The operand.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression.Type" /> that represents the static type of the expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression">
            <summary>
                Represents a FromSql expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression.#ctor(System.String,System.Linq.Expressions.Expression,System.String,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Creates a new instance of a FromSqlExpression.
            </summary>
            <param name="sql"> The SQL. </param>
            <param name="arguments"> The arguments. </param>
            <param name="alias"> The alias. </param>
            <param name="querySource"> The query source. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression.Sql">
            <summary>
                Gets the SQL.
            </summary>
            <value>
                The SQL.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression.Arguments">
            <summary>
                Gets the arguments.
            </summary>
            <value>
                The arguments.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression">
            <summary>
                Represents a SQL IN expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression,System.Collections.Generic.IReadOnlyList{System.Linq.Expressions.Expression})">
            <summary>
                Creates a new instance of InExpression.
            </summary>
            <param name="operand"> The operand. </param>
            <param name="values"> The values. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)">
            <summary>
                Creates a new instance of InExpression.
            </summary>
            <param name="operand"> The operand. </param>
            <param name="subQuery"> The sub query. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.Operand">
            <summary>
                Gets the operand.
            </summary>
            <value>
                The operand.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.Values">
            <summary>
                Gets the values.
            </summary>
            <value>
                The values.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.SubQuery">
            <summary>
                Gets the sub query.
            </summary>
            <value>
                The sub query.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.Type" /> that represents the static type of the expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.InExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression">
            <summary>
                Represents a SQL INNER JOIN expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Creates a new instance of InnerJoinExpression.
            </summary>
            <param name="tableExpression"> The table expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory">
            <summary>
                A factory for SelectExpression instances.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)">
            <summary>
                Creates a new SelectExpression.
            </summary>
            <param name="queryCompilationContext"> Context for the query compilation. </param>
            <returns>
                A SelectExpression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.String)">
            <summary>
                Creates a new SelectExpression.
            </summary>
            <param name="queryCompilationContext"> Context for the query compilation. </param>
            <param name="alias"> The alias. </param>
            <returns>
                A SelectExpression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression">
            <summary>
                Represents a SQL IS NULL expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression.#ctor(System.Linq.Expressions.Expression)">
            <summary>
                Creates a new instance of IsNullExpression.
            </summary>
            <param name="operand"> The operand. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression.Operand">
            <summary>
                The operand.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression.Type" /> that represents the static type of the expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.JoinExpressionBase">
            <summary>
                A base class for SQL JOIN expressions.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.JoinExpressionBase.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Specialised constructor for use only by derived class.
            </summary>
            <param name="tableExpression"> The target table expression. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.JoinExpressionBase.TableExpression">
            <summary>
                The target table expression.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.JoinExpressionBase.Predicate">
            <summary>
                Gets or sets the predicate.
            </summary>
            <value>
                The predicate.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.JoinExpressionBase.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression">
            <summary>
                Represents a SQL LATERAL JOIN expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Creates a new instance of LateralJoinExpression.
            </summary>
            <param name="tableExpression"> The target table expression. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression.TableExpression">
            <summary>
                The target table expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression">
            <summary>
                Represents a SQL LEFT OUTER JOIN expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Creates a new instance of LeftOuterJoinExpression.
            </summary>
            <param name="tableExpression"></param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression">
            <summary>
                Represents a SQL LIKE expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression.#ctor(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
                Creates a new instance of LikeExpression.
            </summary>
            <param name="match"> The expression to match. </param>
            <param name="pattern"> The pattern to match. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression.Match">
            <summary>
                Gets the match expression.
            </summary>
            <value>
                The match expression.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression.Pattern">
            <summary>
                Gets the pattern to match.
            </summary>
            <value>
                The pattern to match.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression.Type" /> that represents the static type of the expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.MaxExpression">
            <summary>
                Represents a SQL MAX aggregate expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.MaxExpression.#ctor(System.Linq.Expressions.Expression)">
            <summary>
                Creates a new instance of MaxExpression.
            </summary>
            <param name="expression"> The expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.MaxExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.MinExpression">
            <summary>
                Represents a SQL MIN aggregate expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.MinExpression.#ctor(System.Linq.Expressions.Expression)">
            <summary>
                Creates a new instance of MinExpression.
            </summary>
            <param name="expression"> The expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.MinExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.NotNullableExpression">
            <summary>
                Reducible annotation expression used to affect null expansion logic.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.NotNullableExpression.#ctor(System.Linq.Expressions.Expression)">
            <summary>
                Creates an instance of NotNullableExpression.
            </summary>
            <param name="operand"> The operand. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.NotNullableExpression.Operand">
            <summary>
                The operand.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.NotNullableExpression.NodeType">
            <summary>
                Type of the node.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.NotNullableExpression.Type">
            <summary>
                The type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.NotNullableExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the visitor delegate on the reduced expression. The method throws an exception if the node is not
                reducible.
            </summary>
            <returns>The expression being visited, or an expression which should replace it in the tree.</returns>
            <param name="visitor">An instance of <see cref="T:System.Func`2" />.</param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.NotNullableExpression.CanReduce">
            <summary>
                Indicates that the node can be reduced to a simpler node. If this returns true, Reduce() can be called to produce the reduced
                form.
            </summary>
            <returns>True if the node can be reduced, otherwise false.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.NotNullableExpression.Reduce">
            <summary>
                Reduces this node to a simpler expression. If CanReduce returns true, this should return a valid expression. This method can
                return another node which itself must be reduced.
            </summary>
            <returns>The reduced expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression">
            <summary>
                An expression that represents accessing a property on a query parameter.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression.#ctor(System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Creates a new instance of a PropertyParameterExpression.
            </summary>
            <param name="name"> The parameter name. </param>
            <param name="property"> The property to access. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression.Name">
            <summary>
                Gets the parameter name.
            </summary>
            <value>
                The parameter name.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression.Property">
            <summary>
                Gets the property.
            </summary>
            <value>
                The property.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression.PropertyParameterName">
            <summary>
                Name of the property parameter when used in DbCommands.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression.Type" /> that represents the static type of the expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression">
            <summary>
                Represents a SQL SELECT expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.#ctor(Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory,Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)">
            <summary>
                Creates a new instance of SelectExpression.
            </summary>
            <param name="querySqlGeneratorFactory"> The query SQL generator factory. </param>
            <param name="queryCompilationContext"> Context for the query compilation. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.#ctor(Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory,Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.String)">
            <summary>
                Creates a new instance of SelectExpression.
            </summary>
            <param name="querySqlGeneratorFactory"> The query SQL generator factory. </param>
            <param name="queryCompilationContext"> Context for the query compilation. </param>
            <param name="alias"> The alias. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Predicate">
            <summary>
                Gets or sets the predicate corresponding to the WHERE part of the SELECT expression.
            </summary>
            <value>
                The predicate.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.ProjectStarAlias">
            <summary>
                Gets or sets the table alias to be used for star projection.
            </summary>
            <value>
                The table alias.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Type">
            <summary>
                Type of this expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Clone(System.String)">
            <summary>
                Makes a copy of this SelectExpression.
            </summary>
            <param name="alias"> The alias. </param>
            <returns>
                A copy of this SelectExpression.
            </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Tables">
            <summary>
                The tables making up the FROM part of the SELECT expression.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.IsProjectStar">
            <summary>
                Gets or sets a value indicating whether this expression projects a single wildcard ('*').
            </summary>
            <value>
                true if this SelectExpression is project star, false if not.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.IsIdentityQuery">
            <summary>
                Determines whether this SelectExpression is an identity query. An identity query
                has a single table, and returns all of the rows from that table, unmodified.
            </summary>
            <returns>
                true if this SelectExpression is an identity query, false if not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddTable(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase,System.Boolean)">
            <summary>
                Adds a table to this SelectExpression.
            </summary>
            <param name="tableExpression"> The table expression. </param>
            <param name="createUniqueAlias"> true to create unique alias. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddTables(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase})">
            <summary>
                Adds tables to this SelectExprssion.
            </summary>
            <param name="tableExpressions"> The table expressions. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.ClearTables">
            <summary>
                Removes any tables added to this SelectExpression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.IsCorrelated">
            <summary>
                Determines if this SelectExpression contains any correlated subqueries.
            </summary>
            <returns>
                true if correlated, false if not.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.HandlesQuerySource(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Determines whether or not this SelectExpression handles the given query source.
            </summary>
            <param name="querySource"> The query source. </param>
            <returns>
                true if the supplied query source is handled by this SelectExpression; otherwise false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.GetTableForQuerySource(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Gets the table corresponding to the supplied query source.
            </summary>
            <param name="querySource"> The query source. </param>
            <returns>
                The table for query source.
            </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.IsDistinct">
            <summary>
                Gets or sets a value indicating whether this SelectExpression is DISTINCT.
            </summary>
            <value>
                true if this SelectExpression is distinct, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Limit">
            <summary>
                Gets or sets the LIMIT of this SelectExpression.
            </summary>
            <value>
                The limit.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Offset">
            <summary>
                Gets or sets the OFFSET of this SelectExpression.
            </summary>
            <value>
                The offset.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.PushDownSubquery">
            <summary>
                Creates a subquery based on this SelectExpression and makes that table the single entry in
                <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Tables" />. Clears all other top-level aspects of this SelectExpression.
            </summary>
            <returns>
                A SelectExpression.
            </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Projection">
            <summary>
                The projection of this SelectExpression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddToProjection(System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Adds a column to the projection.
            </summary>
            <param name="column"> The column name. </param>
            <param name="property"> The corresponding EF property. </param>
            <param name="querySource"> The originating query source. </param>
            <returns>
                The corresponding index of the added expression in <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Projection" />.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddToProjection(System.Linq.Expressions.Expression)">
            <summary>
                Adds an expression to the projection.
            </summary>
            <param name="expression"> The expression. </param>
            <returns>
                The corresponding index of the added expression in <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Projection" />.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddToProjection(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
                Adds an expression to the projection.
            </summary>
            <param name="expression"> The expression. </param>
            <param name="resetProjectStar"> true to reset the value of <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.IsProjectStar" />. </param>
            <returns>
                The corresponding index of the added expression in <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Projection" />.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddToProjection(Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression)">
            <summary>
                Adds an <see cref="T:Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression" /> to the projection.
            </summary>
            <param name="aliasExpression"> The alias expression. </param>
            <returns>
                The corresponding index of the added expression in <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Projection" />.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddAliasToProjection(System.String,System.Linq.Expressions.Expression)">
            <summary>
                Adds an expression with an alias to the projection.
            </summary>
            <param name="alias"> The alias. </param>
            <param name="expression"> The expression. </param>
            <returns>
                The corresponding index of the added expression in <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Projection" />.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddToProjection(Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression)">
            <summary>
                Adds a ColumnExpression to the projection.
            </summary>
            <param name="columnExpression"> The column expression. </param>
            <returns>
                The corresponding index of the added expression in <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Projection" />.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.GetProjectionTypes">
            <summary>
                Gets the types of the expressions in <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Projection" />.
            </summary>
            <returns>
                The types of the expressions in <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Projection" />.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.SetProjectionConditionalExpression(System.Linq.Expressions.ConditionalExpression)">
            <summary>
                Sets a <see cref="T:System.Linq.Expressions.ConditionalExpression" /> as the single projected expression
                in this SelectExpression.
            </summary>
            <param name="conditionalExpression"> The conditional expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.SetProjectionExpression(System.Linq.Expressions.Expression)">
            <summary>
                Sets an expression as the single projected expression in this SelectExpression.
            </summary>
            <param name="expression"> The expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.ClearProjection">
            <summary>
                Clears the projection.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.ClearColumnProjections">
            <summary>
                Clears the column expressions from the projection.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.RemoveRangeFromProjection(System.Int32)">
            <summary>
                Removes a range from the projection.
            </summary>
            <param name="index"> Zero-based index of the start of the range to remove. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.RemoveFromProjection(System.Collections.Generic.IEnumerable{Remotion.Linq.Clauses.Ordering})">
            <summary>
                Removes expressions from the projection corresponding to the
                supplied <see cref="T:Remotion.Linq.Clauses.Ordering" /> expressions.
            </summary>
            <param name="orderBy"> The Orderings to remove from the projection. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.GetProjectionIndex(Microsoft.EntityFrameworkCore.Metadata.IProperty,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Computes the index in <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Projection" /> corresponding to the supplied property and query source.
            </summary>
            <param name="property"> The corresponding EF property. </param>
            <param name="querySource"> The originating query source. </param>
            <returns>
                The projection index.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddToOrderBy(System.String,Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase,Remotion.Linq.Clauses.OrderingDirection)">
            <summary>
                Adds a column to the ORDER BY of this SelectExpression.
            </summary>
            <param name="column"> The column name. </param>
            <param name="property"> The corresponding EF property. </param>
            <param name="table"> The target table. </param>
            <param name="orderingDirection"> The ordering direction. </param>
            <returns>
                An AliasExpression corresponding to the expression added to the ORDER BY.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddToOrderBy(System.Collections.Generic.IEnumerable{Remotion.Linq.Clauses.Ordering})">
            <summary>
                Adds multiple expressions to the ORDER BY of this SelectExpression.
            </summary>
            <param name="orderings"> The orderings expressions. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddToOrderBy(Remotion.Linq.Clauses.Ordering)">
            <summary>
                Adds a single <see cref="T:Remotion.Linq.Clauses.Ordering" /> to the order by.
            </summary>
            <param name="ordering"> The ordering. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.PrependToOrderBy(System.Collections.Generic.IEnumerable{Remotion.Linq.Clauses.Ordering})">
            <summary>
                Prepends multiple ordering expressions to the ORDER BY of this SelectExpression.
            </summary>
            <param name="orderings"> The orderings expressions. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.OrderBy">
            <summary>
                The SQL ORDER BY of this SelectExpression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.ClearOrderBy">
            <summary>
                Clears the ORDER BY of this SelectExpression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.ExplodeStarProjection">
            <summary>
                Transforms the projection of this SelectExpression by expanding the wildcard ('*') projection
                into individual explicit projection expressions.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddCrossJoin(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
            <summary>
                Adds a SQL CROSS JOIN to this SelectExpression.
            </summary>
            <param name="tableExpression"> The target table expression. </param>
            <param name="projection"> A sequence of expressions that should be added to the projection. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddLateralJoin(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
            <summary>
                Adds a SQL LATERAL JOIN to this SelectExpression.
            </summary>
            <param name="tableExpression"> The target table expression. </param>
            <param name="projection"> A sequence of expressions that should be added to the projection. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddInnerJoin(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Adds a SQL INNER JOIN to this SelectExpression.
            </summary>
            <param name="tableExpression"> The target table expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddInnerJoin(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
            <summary>
                Adds a SQL INNER JOIN to this SelectExpression.
            </summary>
            <param name="tableExpression"> The target table expression. </param>
            <param name="projection"> A sequence of expressions that should be added to the projection. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddLeftOuterJoin(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Adds a SQL LEFT OUTER JOIN to this SelectExpression.
            </summary>
            <param name="tableExpression"> The target table expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.AddLeftOuterJoin(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
            <summary>
                Adds a SQL LEFT OUTER JOIN to this SelectExpression.
            </summary>
            <param name="tableExpression"> The target table expression. </param>
            <param name="projection"> A sequence of expressions that should be added to the projection. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.RemoveTable(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Removes a table from this SelectExpression.
            </summary>
            <param name="tableExpression"> The table expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.CreateDefaultQuerySqlGenerator">
            <summary>
                Creates the default query SQL generator.
            </summary>
            <returns>
                The new default query SQL generator.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.CreateFromSqlQuerySqlGenerator(System.String,System.Linq.Expressions.Expression)">
            <summary>
                Creates the FromSql query SQL generator.
            </summary>
            <param name="sql"> The SQL. </param>
            <param name="arguments"> The arguments. </param>
            <returns>
                The new FromSql query SQL generator.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.ToString">
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                A string that represents this object.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression.UpdateColumnExpression(System.Linq.Expressions.Expression,Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase)">
            <summary>
                Updates the table expression of any column expressions in the target expression.
            </summary>
            <param name="expression"> The target expression. </param>
            <param name="tableExpression"> The new table expression. </param>
            <returns>
                An updated expression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory">
            <summary>
                A SelectExpression factory.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.#ctor(Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory)">
            <summary>
                Initializes a new instance of the Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory class.
            </summary>
            <param name="querySqlGeneratorFactory"> The query SQL generator factory. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)">
            <summary>
                Creates a new SelectExpression.
            </summary>
            <param name="queryCompilationContext"> Context for the query compilation. </param>
            <returns>
                A SelectExpression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpressionFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.String)">
            <summary>
                Creates a new SelectExpression.
            </summary>
            <param name="queryCompilationContext"> Context for the query compilation. </param>
            <param name="alias"> The alias of this SelectExpression. </param>
            <returns>
                A SelectExpression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression">
            <summary>
                Represents a SQL function call expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression.#ctor(System.String,System.Type)">
            <summary>
                Initializes a new instance of the Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression class.
            </summary>
            <param name="functionName"> Name of the function. </param>
            <param name="returnType"> The return type. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression.#ctor(System.String,System.Type,System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
            <summary>
                Initializes a new instance of the Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression class.
            </summary>
            <param name="functionName"> Name of the function. </param>
            <param name="returnType"> The return type. </param>
            <param name="arguments"> The arguments. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression.FunctionName">
            <summary>
                Gets the name of the function.
            </summary>
            <value>
                The name of the function.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression.Arguments">
            <summary>
                The arguments.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression.Type" /> that represents the static type of the expression.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression">
            <summary>
                Represents a SQL string comparison expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression.#ctor(System.Linq.Expressions.ExpressionType,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
                Initializes a new instance of the Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression class.
            </summary>
            <param name="op"> The comparison operation. </param>
            <param name="left"> The left operand. </param>
            <param name="right"> The right operand. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression.NodeType">
            <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression.Type">
            <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression.Type" /> that represents the static type of the expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression.Operator">
            <summary>
                Gets the comparison operator.
            </summary>
            <value>
                The comparison operator.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression.Left">
            <summary>
                Gets the left operand.
            </summary>
            <value>
                The left operand.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression.Right">
            <summary>
                Gets the right operand.
            </summary>
            <value>
                The right operand.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.SumExpression">
            <summary>
                Represents a SQL SUM expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SumExpression.#ctor(System.Linq.Expressions.Expression)">
            <summary>
                Initializes a new instance of the Microsoft.EntityFrameworkCore.Query.Expressions.SumExpression class.
            </summary>
            <param name="expression"> The expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.SumExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression">
            <summary>
                Represents a SQL table expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression.#ctor(System.String,System.String,System.String,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Initializes a new instance of the Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression class.
            </summary>
            <param name="table"> The table name. </param>
            <param name="schema"> The schema name. </param>
            <param name="alias"> The alias. </param>
            <param name="querySource"> The query source. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression.Table">
            <summary>
                Gets the table name.
            </summary>
            <value>
                The table name.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression.Schema">
            <summary>
                Gets the schema name.
            </summary>
            <value>
                The schema name.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression.Accept(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Dispatches to the specific visit method for this node type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression.ToString">
            <summary>
                Creates a <see cref="T:System.String" /> representation of the Expression.
            </summary>
            <returns>A <see cref="T:System.String" /> representation of the Expression.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase">
            <summary>
                A base class for SQL table expressions.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.#ctor(Remotion.Linq.Clauses.IQuerySource,System.String)">
            <summary>
                Initializes a new instance of the Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase class.
            </summary>
            <param name="querySource"> The query source. </param>
            <param name="alias"> The alias. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.NodeType">
            <summary>
                Returns the node type of this <see cref="T:System.Linq.Expressions.Expression" />. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="T:System.Linq.Expressions.ExpressionType" /> that represents this expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.Type">
            <summary>
                Gets the static type of the expression that this <see cref="T:System.Linq.Expressions.Expression" /> represents. (Inherited from <see cref="T:System.Linq.Expressions.Expression" />.)
            </summary>
            <returns>The <see cref="P:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.Type" /> that represents the static type of the expression.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.QuerySource">
            <summary>
                Gets the query source.
            </summary>
            <value>
                The query source.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.Alias">
            <summary>
                Gets the alias.
            </summary>
            <value>
                The alias.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.TableExpressionBase.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the <see cref="M:System.Linq.Expressions.ExpressionVisitor.Visit(System.Linq.Expressions.Expression)" /> method passing the
                reduced expression.
                Throws an exception if the node isn't reducible.
            </summary>
            <param name="visitor"> An instance of <see cref="T:System.Linq.Expressions.ExpressionVisitor" />. </param>
            <returns> The expression being visited, or an expression which should replace it in the tree. </returns>
            <remarks>
                Override this method to provide logic to walk the node's children.
                A typical implementation will call visitor.Visit on each of its
                children, and if any of them change, should return a new copy of
                itself with the modified children.
            </remarks>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator">
            <summary>
                A LINQ expression translator for arbitrary CLR expression fragments.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator.Translate(System.Linq.Expressions.Expression)">
            <summary>
                Translates the given expression.
            </summary>
            <param name="expression"> The expression. </param>
            <returns>
                A SQL expression representing the translated expression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator">
            <summary>
                A LINQ expression translator for CLR <see cref="T:System.Linq.Expressions.MemberExpression" /> expressions.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator.Translate(System.Linq.Expressions.MemberExpression)">
            <summary>
                Translates the given member expression.
            </summary>
            <param name="memberExpression"> The member expression. </param>
            <returns>
                A SQL expression representing the translated MemberExpression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator">
            <summary>
                A LINQ expression translator for CLR <see cref="T:System.Linq.Expressions.MethodCallExpression" /> expressions.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                Translates the given method call expression.
            </summary>
            <param name="methodCallExpression"> The method call expression. </param>
            <returns>
                A SQL expression representing the translated MethodCallExpression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.MultipleOverloadStaticMethodCallTranslator">
            <summary>
                A base LINQ expression translator for CLR <see cref="T:System.Linq.Expressions.MethodCallExpression" /> expressions that
                have multiple overloads.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.MultipleOverloadStaticMethodCallTranslator.#ctor(System.Type,System.String,System.String)">
            <summary>
                Specialised constructor for use only by derived class.
            </summary>
            <param name="declaringType"> The declaring type of the method. </param>
            <param name="clrMethodName"> Name of the method. </param>
            <param name="sqlFunctionName"> The name of the target SQL function. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.MultipleOverloadStaticMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                Translates the given method call expression.
            </summary>
            <param name="methodCallExpression"> The method call expression. </param>
            <returns>
                A SQL expression representing the translated MethodCallExpression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator">
            <summary>
                A base LINQ expression translator for CLR <see cref="T:System.Linq.Expressions.MethodCallExpression" /> expressions that
                are instance methods and do not take arguments.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator.#ctor(System.Type,System.String,System.String)">
            <summary>
                Specialised constructor for use only by derived class.
            </summary>
            <param name="declaringType"> The declaring type of the method. </param>
            <param name="clrMethodName"> Name of the method. </param>
            <param name="sqlFunctionName"> The name of the target SQL function. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.ParameterlessInstanceMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                Translates the given method call expression.
            </summary>
            <param name="methodCallExpression"> The method call expression. </param>
            <returns>
                A SQL expression representing the translated MethodCallExpression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeExpressionFragmentTranslator">
            <summary>
                A composite expression fragment translator that dispatches to multiple specialized
                fragment translators.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeExpressionFragmentTranslator.Translate(System.Linq.Expressions.Expression)">
            <summary>
                Translates the given expression.
            </summary>
            <param name="expression"> The expression to translate. </param>
            <returns>
                A SQL expression representing the translated expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeExpressionFragmentTranslator.AddTranslators(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator})">
            <summary>
                Adds additional translators to the dispatch list.
            </summary>
            <param name="translators"> The translators. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMemberTranslator">
            <summary>
                A base composite member translator that dispatches to multiple specialized
                member translators.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMemberTranslator.Translate(System.Linq.Expressions.MemberExpression)">
            <summary>
                Translates the given member expression.
            </summary>
            <param name="memberExpression"> The member expression. </param>
            <returns>
                A SQL expression representing the translated MemberExpression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMemberTranslator.AddTranslators(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator})">
            <summary>
                Adds additional translators to the dispatch list.
            </summary>
            <param name="translators"> The translators. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator">
            <summary>
                A base composite method call translator that dispatches to multiple specialized
                method call translators.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
                Specialised constructor for use only by derived class.
            </summary>
            <param name="logger"> A logger. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                Translates the given method call expression.
            </summary>
            <param name="methodCallExpression"> The method call expression. </param>
            <returns>
                A SQL expression representing the translated MethodCallExpression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.RelationalCompositeMethodCallTranslator.AddTranslators(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator})">
            <summary>
                Adds additional translators to the dispatch list.
            </summary>
            <param name="translators"> The translators. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.SingleOverloadStaticMethodCallTranslator">
            <summary>
                A base LINQ expression translator for CLR <see cref="T:System.Linq.Expressions.MethodCallExpression" /> expressions that
                are static and are not overloaded.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.SingleOverloadStaticMethodCallTranslator.#ctor(System.Type,System.String,System.String)">
            <summary>
                Specialised constructor for use only by derived class.
            </summary>
            <param name="declaringType"> The declaring type of the method. </param>
            <param name="clrMethodName"> Name of the method. </param>
            <param name="sqlFunctionName"> The name of the target SQL function. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.SingleOverloadStaticMethodCallTranslator.Translate(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                Translates the given method call expression.
            </summary>
            <param name="methodCallExpression"> The method call expression. </param>
            <returns>
                A SQL expression representing the translated MethodCallExpression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.ContainsTranslator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.ContainsTranslator.#ctor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.ContainsTranslator.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.ContainsTranslator.Translate(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.EndsWithTranslator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.EndsWithTranslator.#ctor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.EndsWithTranslator.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.EndsWithTranslator.Translate(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.EnumHasFlagTranslator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.EnumHasFlagTranslator.Translate(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.EqualsTranslator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.EqualsTranslator.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.EqualsTranslator.Translate(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.IsNullOrEmptyTranslator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.IsNullOrEmptyTranslator.Translate(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.StartsWithTranslator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.StartsWithTranslator.#ctor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.StartsWithTranslator.#ctor(Microsoft.Extensions.Logging.ILogger)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.StartsWithTranslator.Translate(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.StringCompareTranslator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.StringCompareTranslator.Translate(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.StringConcatTranslator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.Internal.StringConcatTranslator.Translate(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory">
            <summary>
                Factory for creating instances of <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.Linq.Expressions.Expression,System.Boolean,System.Boolean)">
            <summary>
                Creates a new SqlTranslatingExpressionVisitor.
            </summary>
            <param name="queryModelVisitor"> The query model visitor. </param>
            <param name="targetSelectExpression"> The target select expression. </param>
            <param name="topLevelPredicate"> The top level predicate. </param>
            <param name="bindParentQueries"> true to bind parent queries. </param>
            <param name="inProjection"> true if we are translating a projection. </param>
            <returns>
                A SqlTranslatingExpressionVisitor.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor">
            <summary>
                A visitor that performs basic relational query translation of EF query roots.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMaterializerFactory,Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor" />.
            </summary>
            <param name="model"> The model. </param>
            <param name="selectExpressionFactory"> The select expression factory. </param>
            <param name="materializerFactory"> The materializer factory. </param>
            <param name="shaperCommandContextFactory"> The shaper command context factory. </param>
            <param name="relationalAnnotationProvider"> The relational annotation provider. </param>
            <param name="queryModelVisitor"> The query model visitor. </param>
            <param name="querySource"> The query source. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)">
            <summary>
                Visit a sub-query expression.
            </summary>
            <param name="expression"> The expression. </param>
            <returns>
                An Expression corresponding to the translated sub-query.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
                Visit a member expression.
            </summary>
            <param name="node"> The expression to visit. </param>
            <returns>
                An Expression corresponding to the translated member.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                Visit a method call expression.
            </summary>
            <param name="node"> The expression to visit. </param>
            <returns>
                An Expression corresponding to the translated method call.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor.VisitEntityQueryable(System.Type)">
            <summary>
                Visit an entity query root.
            </summary>
            <param name="elementType"> The CLR type of the entity root. </param>
            <returns>
                An Expression corresponding to the translated entity root.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitorFactory">
            <summary>
                A factory for creating instances of <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitor" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitorFactory.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMaterializerFactory,Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitorFactory" />.
            </summary>
            <param name="model"> The model. </param>
            <param name="selectExpressionFactory"> The select expression factory. </param>
            <param name="materializerFactory"> The materializer factory. </param>
            <param name="shaperCommandContextFactory"> The shaper command context factory. </param>
            <param name="relationalAnnotationProvider"> The relational annotation provider. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalEntityQueryableExpressionVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Creates a new ExpressionVisitor.
            </summary>
            <param name="queryModelVisitor"> The query model visitor. </param>
            <param name="querySource"> The query source. </param>
            <returns>
                An ExpressionVisitor.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitor">
            <summary>
                An expression visitor for translating relational LINQ query projections.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource,Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitor" />.
            </summary>
            <param name="sqlTranslatingExpressionVisitorFactory"> The SQL translating expression visitor factory. </param>
            <param name="entityMaterializerSource"> The entity materializer source. </param>
            <param name="queryModelVisitor"> The query model visitor. </param>
            <param name="querySource"> The query source. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                Visit a method call expression.
            </summary>
            <param name="node"> The expression to visit. </param>
            <returns>
                An Expression corresponding to the translated method call.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>
                Visit a new expression.
            </summary>
            <param name="expression"> The expression to visit. </param>
            <returns>
                An Expression corresponding to the translated new expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>
                Visits the given node.
            </summary>
            <param name="node"> The expression to visit. </param>
            <returns>
                An Expression to the translated input expression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitorFactory">
            <summary>
                A factory for creating instances of <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitor" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitorFactory.#ctor(Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitorFactory" />.
            </summary>
            <param name="sqlTranslatingExpressionVisitorFactory"> The SQL translating expression visitor factory. </param>
            <param name="entityMaterializerSource"> The entity materializer source. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.RelationalProjectionExpressionVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Creates a new ExpressionVisitor.
            </summary>
            <param name="entityQueryModelVisitor"> The query model visitor. </param>
            <param name="querySource"> The query source. </param>
            <returns>
                An ExpressionVisitor.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor">
            <summary>
                The default relational LINQ translating expression visitor.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.Linq.Expressions.Expression,System.Boolean,System.Boolean)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor" />.
            </summary>
            <param name="relationalAnnotationProvider"> The relational annotation provider. </param>
            <param name="compositeExpressionFragmentTranslator"> The composite expression fragment translator. </param>
            <param name="methodCallTranslator"> The method call translator. </param>
            <param name="memberTranslator"> The member translator. </param>
            <param name="relationalTypeMapper"> The relational type mapper. </param>
            <param name="queryModelVisitor"> The query model visitor. </param>
            <param name="targetSelectExpression"> The target select expression. </param>
            <param name="topLevelPredicate"> The top level predicate. </param>
            <param name="bindParentQueries"> true to bind parent queries. </param>
            <param name="inProjection"> true if the expression to be translated is a LINQ projection. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.ClientEvalPredicate">
            <summary>
                When translating a predicate expression, returns a client expression corresponding
                to the part of the target expression that should be evaluated locally.
            </summary>
            <value>
                The client eval predicate.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>
                Visits the given expression.
            </summary>
            <param name="expression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                Visit a binary expression.
            </summary>
            <param name="expression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>
                Visits a conditional expression.
            </summary>
            <param name="expression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                Visits a method call expression.
            </summary>
            <param name="methodCallExpression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
                Visit a member expression.
            </summary>
            <param name="expression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
                Visit a unary expression.
            </summary>
            <param name="expression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>
                Visits a new expression.
            </summary>
            <param name="expression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)">
            <summary>
                Visits a sub-query expression.
            </summary>
            <param name="expression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
                Visits a constant expression.
            </summary>
            <param name="expression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
                Visits a parameter expression.
            </summary>
            <param name="expression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)">
            <summary>
                Visits an extension expression.
            </summary>
            <param name="expression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)">
            <summary>
                Visits a query source reference expression.
            </summary>
            <param name="expression"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.VisitUnhandledItem``2(``0,System.String,System.Func{``0,``1})">
            <summary>
                Called when an unhandled item is visited. This method provides the item the visitor cannot handle (<paramref name="unhandledItem" />),
                the <paramref name="visitMethod" /> that is not implemented in the visitor, and a delegate that can be used to invoke the
                <paramref name="baseBehavior" /> of the <see cref="T:Remotion.Linq.Parsing.RelinqExpressionVisitor" /> class. The default behavior of
                this method is to call the
                <see cref="M:Remotion.Linq.Parsing.ThrowingExpressionVisitor.CreateUnhandledItemException``1(``0,System.String)" /> method, but it can
                be overridden to do something else.
            </summary>
            <typeparam name="TItem">
                The type of the item that could not be handled. Either an <see cref="T:System.Linq.Expressions.Expression" /> type, a
                <see cref="T:System.Linq.Expressions.MemberBinding" />
                type, or <see cref="T:System.Linq.Expressions.ElementInit" />.
            </typeparam>
            <typeparam name="TResult">The result type expected for the visited <paramref name="unhandledItem" />.</typeparam>
            <param name="unhandledItem">The unhandled item.</param>
            <param name="visitMethod">The visit method that is not implemented.</param>
            <param name="baseBehavior">The behavior exposed by <see cref="T:Remotion.Linq.Parsing.RelinqExpressionVisitor" /> for this item type.</param>
            <returns>An object to replace <paramref name="unhandledItem" /> in the expression tree. Alternatively, the method can throw any exception.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor.CreateUnhandledItemException``1(``0,System.String)">
            <summary>
                Creates an unhandled item exception.
            </summary>
            <typeparam name="T"> Generic type parameter. </typeparam>
            <param name="unhandledItem"> The unhandled item. </param>
            <param name="visitMethod"> The visit method that is not implemented. </param>
            <returns>
                The new unhandled item exception.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorFactory">
            <summary>
                A factory for creating instances of <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitor" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorFactory.#ctor(Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IExpressionFragmentTranslator,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMethodCallTranslator,Microsoft.EntityFrameworkCore.Query.ExpressionTranslators.IMemberTranslator,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorFactory" />.
            </summary>
            <param name="relationalAnnotationProvider"> The relational annotation provider. </param>
            <param name="compositeExpressionFragmentTranslator"> The composite expression fragment translator. </param>
            <param name="methodCallTranslator"> The method call translator. </param>
            <param name="memberTranslator"> The member translator. </param>
            <param name="relationalTypeMapper"> The relational type mapper. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.SqlTranslatingExpressionVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.RelationalQueryModelVisitor,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.Linq.Expressions.Expression,System.Boolean,System.Boolean)">
            <summary>
                Creates a new SqlTranslatingExpressionVisitor.
            </summary>
            <param name="queryModelVisitor"> The query model visitor. </param>
            <param name="targetSelectExpression"> The target select expression. </param>
            <param name="topLevelPredicate"> The top level predicate. </param>
            <param name="bindParentQueries"> true to bind parent queries. </param>
            <param name="inProjection"> true if we are translating a projection. </param>
            <returns>
                A SqlTranslatingExpressionVisitor.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.BufferedEntityShaper`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.BufferedEntityShaper`1.#ctor(Remotion.Linq.Clauses.IQuerySource,System.String,System.Boolean,Microsoft.EntityFrameworkCore.Metadata.IKey,System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.BufferedEntityShaper`1.Type">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.BufferedEntityShaper`1.Shape(Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.BufferedEntityShaper`1.Cast``1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.BufferedEntityShaper`1.WithOffset(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.BufferedEntityShaper`1.WithIndexMap(System.Collections.Generic.Dictionary{System.Type,System.Int32[]})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.BufferedEntityShaper`1.ToString">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.BufferedOffsetEntityShaper`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.BufferedOffsetEntityShaper`1.#ctor(Remotion.Linq.Clauses.IQuerySource,System.String,System.Boolean,Microsoft.EntityFrameworkCore.Metadata.IKey,System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.BufferedOffsetEntityShaper`1.Shape(Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.BufferedOffsetEntityShaper`1.ToString">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor.#ctor(System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.#ctor(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositePredicateExpressionVisitorFactory.Create">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ConditionalRemovingExpressionVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ConditionalRemovingExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ConditionalRemovingExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ConditionalRemovingExpressionVisitorFactory.Create">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.#ctor(Remotion.Linq.Clauses.IQuerySource,System.String,System.Boolean,Microsoft.EntityFrameworkCore.Metadata.IKey,System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.EntityType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.IsTrackingQuery">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.Key">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.Materializer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.AllowNullResult">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.ValueBufferOffset">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.Cast``1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.WithOffset(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityShaper.SetOffset(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EqualityPredicateExpandingVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EqualityPredicateExpandingVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EqualityPredicateInExpressionOptimizer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EqualityPredicateInExpressionOptimizer.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory.Create">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IConditionalRemovingExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IConditionalRemovingExpressionVisitorFactory.Create">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IIncludeExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IIncludeExpressionVisitorFactory.Create(Remotion.Linq.Clauses.IQuerySource,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.Collections.Generic.IReadOnlyList{System.Int32},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMaterializerFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMaterializerFactory.CreateMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.Int32},Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMaterializerFactory,Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory,Remotion.Linq.Clauses.IQuerySource,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.Collections.Generic.IReadOnlyList{System.Int32},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitorFactory.#ctor(Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ICompositePredicateExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMaterializerFactory,Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IncludeExpressionVisitorFactory.Create(Remotion.Linq.Clauses.IQuerySource,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.Collections.Generic.IReadOnlyList{System.Int32},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IQueryFlattenerFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IQueryFlattenerFactory.Create(Remotion.Linq.Clauses.IQuerySource,Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.Reflection.MethodInfo,System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.Shape(Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.IsShaperForQuerySource(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.SaveAccessorExpression(Remotion.Linq.Clauses.QuerySourceMapping)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IShaper`1.GetAccessorExpression(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.ResultExpression">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitExtension(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IsNullExpressionBuildingVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MaterializerFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MaterializerFactory.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MaterializerFactory.CreateMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.Int32},Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateNegationExpressionOptimizer.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateReductionExpressionOptimizer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.PredicateReductionExpressionOptimizer.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QueryFlattener">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QueryFlattener.#ctor(Remotion.Linq.Clauses.IQuerySource,Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.Reflection.MethodInfo,System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QueryFlattener.Flatten(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QueryFlattenerFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QueryFlattenerFactory.Create(Remotion.Linq.Clauses.IQuerySource,Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext,System.Reflection.MethodInfo,System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RelationalNullsExpandingVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RelationalNullsExpandingVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RelationalNullsExpandingVisitor.VisitExtension(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RelationalNullsExpressionVisitorBase">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RelationalNullsExpressionVisitorBase.BuildIsNullExpression(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RelationalNullsExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RelationalNullsOptimizedExpandingVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RelationalNullsOptimizedExpandingVisitor.IsOptimalExpansion">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RelationalNullsOptimizedExpandingVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RelationalNullsOptimizedExpandingVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1.#ctor(Remotion.Linq.Clauses.IQuerySource,Microsoft.EntityFrameworkCore.Query.RelationalQueryCompilationContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ResultTransformingExpressionVisitor`1.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.#ctor(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.IsShaperForQuerySource(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.UpdateQuerySource(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.Type">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.QuerySource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.SaveAccessorExpression(Remotion.Linq.Clauses.QuerySourceMapping)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.Shaper.GetAccessorExpression(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.UnbufferedEntityShaper`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.UnbufferedEntityShaper`1.#ctor(Remotion.Linq.Clauses.IQuerySource,System.String,System.Boolean,Microsoft.EntityFrameworkCore.Metadata.IKey,System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.UnbufferedEntityShaper`1.Type">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.UnbufferedEntityShaper`1.Shape(Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.UnbufferedEntityShaper`1.Cast``1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.UnbufferedEntityShaper`1.WithOffset(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.UnbufferedEntityShaper`1.ToString">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.UnbufferedOffsetEntityShaper`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.UnbufferedOffsetEntityShaper`1.#ctor(Remotion.Linq.Clauses.IQuerySource,System.String,System.Boolean,Microsoft.EntityFrameworkCore.Metadata.IKey,System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.UnbufferedOffsetEntityShaper`1.Shape(Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.UnbufferedOffsetEntityShaper`1.ToString">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ValueBufferShaper">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ValueBufferShaper.#ctor(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ValueBufferShaper.Type">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ValueBufferShaper.Shape(Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader}},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.WithEntityAccessor(System.Delegate)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.SetPrevious(Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.CreateIncludeContext(Microsoft.EntityFrameworkCore.Query.RelationalQueryContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.AsyncGroupJoinIncludeContext">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.AsyncGroupJoinIncludeContext.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Boolean,Microsoft.EntityFrameworkCore.Query.RelationalQueryContext,System.Collections.Generic.IReadOnlyList{System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader}})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.AsyncGroupJoinIncludeContext.SetPrevious(Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.AsyncGroupJoinIncludeContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.AsyncGroupJoinIncludeContext.IncludeAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncGroupJoinInclude.AsyncGroupJoinIncludeContext.Dispose">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.#ctor(System.Collections.Generic.IAsyncEnumerator{Microsoft.EntityFrameworkCore.Storage.ValueBuffer})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.GetRelatedValues(Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncIncludeCollectionIterator.Dispose">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable.#ctor(Microsoft.EntityFrameworkCore.Query.RelationalQueryContext,Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext,System.Nullable{System.Int32})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncQueryingEnumerable.GetEnumerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinInclude">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinInclude.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader}},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinInclude.WithEntityAccessor(System.Delegate)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinInclude.SetPrevious(Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinInclude)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinInclude.CreateIncludeContext(Microsoft.EntityFrameworkCore.Query.RelationalQueryContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinInclude.GroupJoinIncludeContext">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinInclude.GroupJoinIncludeContext.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Boolean,Microsoft.EntityFrameworkCore.Query.RelationalQueryContext,System.Collections.Generic.IReadOnlyList{System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader}})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinInclude.GroupJoinIncludeContext.SetPrevious(Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinInclude.GroupJoinIncludeContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinInclude.GroupJoinIncludeContext.Include(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinInclude.GroupJoinIncludeContext.Dispose">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.NavigationPath">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.QuerySourceRequiresTracking">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.EntityAccessor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.GroupJoinIncludeBase.Dispose">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.IncludeCollectionIterator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IncludeCollectionIterator.#ctor(System.Collections.Generic.IEnumerator{Microsoft.EntityFrameworkCore.Storage.ValueBuffer})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IncludeCollectionIterator.GetRelatedValues(Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IncludeCollectionIterator.Dispose">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IShaperCommandContextFactory.Create(System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor.Current">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor.BufferAll">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IValueBufferCursor.BufferAllAsync(System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable.#ctor(Microsoft.EntityFrameworkCore.Query.RelationalQueryContext,Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext,System.Nullable{System.Int32})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable.GetEnumerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.RelationalCompiledQueryCacheKeyGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalCompiledQueryCacheKeyGenerator.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalCompiledQueryCacheKeyGenerator.GenerateCacheKey(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalCompiledQueryCacheKeyGenerator.GenerateCacheKeyCore(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.RelationalCompiledQueryCacheKeyGenerator.RelationalCompiledQueryCacheKey">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalCompiledQueryCacheKeyGenerator.RelationalCompiledQueryCacheKey.#ctor(Microsoft.EntityFrameworkCore.Query.CompiledQueryCacheKeyGenerator.CompiledQueryCacheKey,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalCompiledQueryCacheKeyGenerator.RelationalCompiledQueryCacheKey.Equals(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalCompiledQueryCacheKeyGenerator.RelationalCompiledQueryCacheKey.GetHashCode">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.RelationalExpressionPrinter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalExpressionPrinter.#ctor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory.#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector,Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory.ExecutionStrategyFactory">
            <summary>
                The execution strategy factory.
            </summary>
            <value>
                The execution strategy factory.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalQueryContextFactory.Create">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.RelationalResultOperatorHandler">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalResultOperatorHandler.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ISqlTranslatingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.Expressions.ISelectExpressionFactory,Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.RelationalResultOperatorHandler.HandleResultOperator(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory,System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext.QuerySqlGeneratorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext.ValueBufferFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext.GetRelationalCommand(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContext.NotifyReaderCreated(System.Data.Common.DbDataReader)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ShaperCommandContextFactory.Create(System.Func{Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlExpressionNode">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlExpressionNode.SupportedMethods">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlExpressionNode.#ctor(Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo,System.Linq.Expressions.ConstantExpression,System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlExpressionNode.CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlExpressionNode.Resolve(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlResultOperator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlResultOperator.#ctor(System.String,System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlResultOperator.QuerySource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlResultOperator.QueryModel">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlResultOperator.Sql">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlResultOperator.Arguments">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlResultOperator.ToString">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlResultOperator.Clone(Remotion.Linq.Clauses.CloneContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlResultOperator.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.FromSqlResultOperator.ExecuteInMemory``1(Remotion.Linq.Clauses.StreamedData.StreamedSequence)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator">
            <summary>
                The default query SQL generator.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator" />.
            </summary>
            <param name="relationalCommandBuilderFactory"> The relational command builder factory. </param>
            <param name="sqlGenerationHelper"> The SQL generation helper. </param>
            <param name="parameterNameGeneratorFactory"> The parameter name generator factory. </param>
            <param name="relationalTypeMapper"> The relational type mapper. </param>
            <param name="selectExpression"> The select expression. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.IsCacheable">
            <summary>
                Gets or sets a value indicating whether this SQL query is cacheable.
            </summary>
            <value>
                true if this SQL query is cacheable, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.SelectExpression">
            <summary>
                Gets the select expression.
            </summary>
            <value>
                The select expression.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.SqlGenerator">
            <summary>
                Gets the SQL generation helper.
            </summary>
            <value>
                The SQL generation helper.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ParameterValues">
            <summary>
                Gets the parameter values.
            </summary>
            <value>
                The parameter values.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateSql(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                Generates SQL for the given parameter values.
            </summary>
            <param name="parameterValues"> The parameter values. </param>
            <returns>
                A relational command.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateValueBufferFactory(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory,System.Data.Common.DbDataReader)">
            <summary>
                Creates a relational value buffer factory.
            </summary>
            <param name="relationalValueBufferFactoryFactory"> The relational value buffer factory. </param>
            <param name="dataReader"> The data reader. </param>
            <returns>
                The new value buffer factory.
            </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.Sql">
            <summary>
                The generated SQL.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ConcatOperator">
            <summary>
                The default string concatenation operator SQL.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.TypedTrueLiteral">
            <summary>
                The default true literal SQL.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.TypedFalseLiteral">
            <summary>
                The default false literal SQL.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSelect(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)">
            <summary>
                Visit a top-level SelectExpression.
            </summary>
            <param name="selectExpression"> The select expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitProjection(System.Collections.Generic.IReadOnlyList{System.Linq.Expressions.Expression})">
            <summary>
                Visit the projection.
            </summary>
            <param name="projections"> The projection expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateOrderBy(System.Collections.Generic.IReadOnlyList{Remotion.Linq.Clauses.Ordering})">
            <summary>
                Generates the ORDER BY SQL.
            </summary>
            <param name="orderings"> The orderings. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateOrdering(Remotion.Linq.Clauses.Ordering)">
            <summary>
                Generates a single ordering in an SQL ORDER BY clause.
            </summary>
            <param name="ordering"> The ordering. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitFromSql(Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression)">
            <summary>
                Visit a FromSqlExpression.
            </summary>
            <param name="fromSqlExpression"> The FromSql expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateFromSql(System.String,System.Linq.Expressions.Expression,System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                Generate SQL corresponding to a FromSql query.
            </summary>
            <param name="sql"> The FromSql SQL query. </param>
            <param name="arguments"> The arguments. </param>
            <param name="parameters"> The parameters for this query. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitTable(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression)">
            <summary>
                Visit a TableExpression.
            </summary>
            <param name="tableExpression"> The table expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitCrossJoin(Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression)">
            <summary>
                Visit a CrossJoin expression.
            </summary>
            <param name="crossJoinExpression"> The cross join expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLateralJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression)">
            <summary>
                Visit a LateralJoin expression.
            </summary>
            <param name="lateralJoinExpression"> The lateral join expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitCount(Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression)">
            <summary>
                Visit a CountExpression
            </summary>
            <param name="countExpression"> The count expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSum(Microsoft.EntityFrameworkCore.Query.Expressions.SumExpression)">
            <summary>
                Visit a SumExpression.
            </summary>
            <param name="sumExpression"> The sum expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitMin(Microsoft.EntityFrameworkCore.Query.Expressions.MinExpression)">
            <summary>
                Visit a MinExpression.
            </summary>
            <param name="minExpression"> The min expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitMax(Microsoft.EntityFrameworkCore.Query.Expressions.MaxExpression)">
            <summary>
                Visit a MaxExpression.
            </summary>
            <param name="maxExpression"> The max expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitStringCompare(Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression)">
            <summary>
                Visit a StringCompareExpression.
            </summary>
            <param name="stringCompareExpression"> The string compare expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIn(Microsoft.EntityFrameworkCore.Query.Expressions.InExpression)">
            <summary>
                Visit an InExpression.
            </summary>
            <param name="inExpression"> The in expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitNotIn(Microsoft.EntityFrameworkCore.Query.Expressions.InExpression)">
            <summary>
                Visit a negated InExpression.
            </summary>
            <param name="inExpression"> The in expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ProcessInExpressionValues(System.Collections.Generic.IEnumerable{System.Linq.Expressions.Expression})">
            <summary>
                Process the InExpression values.
            </summary>
            <param name="inExpressionValues"> The in expression values. </param>
            <returns>
                A list of expressions.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.ExtractNonNullExpressionValues(System.Collections.Generic.IReadOnlyList{System.Linq.Expressions.Expression})">
            <summary>
                Extracts the non null expression values from a list of expressions.
            </summary>
            <param name="inExpressionValues"> The list of expressions. </param>
            <returns>
                The extracted non null expression values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitInnerJoin(Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression)">
            <summary>
                Visit an InnerJoinExpression.
            </summary>
            <param name="innerJoinExpression"> The inner join expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLeftOuterJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression)">
            <summary>
                Visit an LeftOuterJoinExpression.
            </summary>
            <param name="leftOuterJoinExpression"> The left outer join expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateTop(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)">
            <summary>
                Generates the TOP part of the SELECT statement,
            </summary>
            <param name="selectExpression"> The select expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateLimitOffset(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)">
            <summary>
                Generates the LIMIT OFFSET part of the SELECT statement,
            </summary>
            <param name="selectExpression"> The select expression. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>
                Visit a ConditionalExpression.
            </summary>
            <param name="expression"> The conditional expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitExists(Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression)">
            <summary>
                Visit an ExistsExpression.
            </summary>
            <param name="existsExpression"> The exists expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                Visit a BinaryExpression.
            </summary>
            <param name="expression"> The binary expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitColumn(Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression)">
            <summary>
                Visits a ColumnExpression.
            </summary>
            <param name="columnExpression"> The column expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitAlias(Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression)">
            <summary>
                Visits an AliasExpression.
            </summary>
            <param name="aliasExpression"> The alias expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIsNull(Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression)">
            <summary>
                Visits an IsNullExpression.
            </summary>
            <param name="isNullExpression"> The is null expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitIsNotNull(Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression)">
            <summary>
                Visits an IsNotNullExpression.
            </summary>
            <param name="isNotNullExpression"> The is not null expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitLike(Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression)">
            <summary>
                Visit a LikeExpression.
            </summary>
            <param name="likeExpression"> The like expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitSqlFunction(Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression)">
            <summary>
                Visits a SqlFunctionExpression.
            </summary>
            <param name="sqlFunctionExpression"> The SQL function expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitExplicitCast(Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression)">
            <summary>
                Visit a SQL ExplicitCastExpression.
            </summary>
            <param name="explicitCastExpression"> The explicit cast expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
                Visits a UnaryExpression.
            </summary>
            <param name="expression"> The unary expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
                Visits a ConstantExpression.
            </summary>
            <param name="expression"> The constant expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
                Visits a ParameterExpression.
            </summary>
            <param name="parameterExpression"> The parameter expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.VisitPropertyParameter(Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression)">
            <summary>
                Visits a PropertyParameterExpression.
            </summary>
            <param name="propertyParameterExpression"> The property parameter expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.InferTypeMappingFromColumn(System.Linq.Expressions.Expression)">
            <summary>
                Infers a type mapping from a column expression.
            </summary>
            <param name="expression"> The expression to infer a type mapping for. </param>
            <returns>
                A RelationalTypeMapping.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.TryGenerateBinaryOperator(System.Linq.Expressions.ExpressionType,System.String@)">
            <summary>
                Attempts to generate binary operator for a given expression type.
            </summary>
            <param name="op"> The operation. </param>
            <param name="result"> [out] The SQL binary operator. </param>
            <returns>
                true if it succeeds, false if it fails.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateBinaryOperator(System.Linq.Expressions.ExpressionType)">
            <summary>
                Generates SQL for a given binary operation type.
            </summary>
            <param name="op"> The operation. </param>
            <returns>
                The binary operator.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.GenerateOperator(System.Linq.Expressions.Expression)">
            <summary>
                Generates an SQL operator for a given expression.
            </summary>
            <param name="expression"> The expression. </param>
            <returns>
                The operator.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.DefaultQuerySqlGenerator.CreateUnhandledItemException``1(``0,System.String)">
            <summary>
                Creates unhandled item exception.
            </summary>
            <typeparam name="T"> Generic type parameter. </typeparam>
            <param name="unhandledItem"> The unhandled item. </param>
            <param name="visitMethod"> The visit method. </param>
            <returns>
                The new unhandled item exception.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator">
            <summary>
                A relational SQL generator.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator.GenerateSql(System.Collections.Generic.IReadOnlyDictionary{System.String,System.Object})">
            <summary>
                Generates SQL for the given parameter values.
            </summary>
            <param name="parameterValues"> The parameter values. </param>
            <returns>
                The SQL.
            </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator.IsCacheable">
            <summary>
                Gets a value indicating whether the generated SQL is cacheable.
            </summary>
            <value>
                true if the generated SQL is cacheable, false if not.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator.CreateValueBufferFactory(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory,System.Data.Common.DbDataReader)">
            <summary>
                Creates value buffer factory corresponding to the generated query.
            </summary>
            <param name="relationalValueBufferFactoryFactory"> The relational value buffer factory. </param>
            <param name="dataReader"> The data reader. </param>
            <returns>
                The new value buffer factory.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory">
            <summary>
                A factory for instances of <see cref="T:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGenerator" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory.CreateDefault(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)">
            <summary>
                Creates the default SQL generator.
            </summary>
            <param name="selectExpression"> The select expression. </param>
            <returns>
                The new default.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.IQuerySqlGeneratorFactory.CreateFromSql(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.String,System.Linq.Expressions.Expression)">
            <summary>
                Creates a FromSql SQL generator.
            </summary>
            <param name="selectExpression"> The select expression. </param>
            <param name="sql"> The SQL. </param>
            <param name="arguments"> The arguments. </param>
            <returns>
                The new from SQL.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor">
            <summary>
                Expression visitor dispatch methods for extension expressions.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitColumn(Microsoft.EntityFrameworkCore.Query.Expressions.ColumnExpression)">
            <summary>
                Visit a ColumnExpression.
            </summary>
            <param name="columnExpression"> The column expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitAlias(Microsoft.EntityFrameworkCore.Query.Expressions.AliasExpression)">
            <summary>
                Visit an AliasExpression.
            </summary>
            <param name="aliasExpression"> The alias expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitIsNull(Microsoft.EntityFrameworkCore.Query.Expressions.IsNullExpression)">
            <summary>
                Visit an IsNullExpression.
            </summary>
            <param name="isNullExpression"> The is null expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitLike(Microsoft.EntityFrameworkCore.Query.Expressions.LikeExpression)">
            <summary>
                Visit a LikeExpression.
            </summary>
            <param name="likeExpression"> The like expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitSelect(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)">
            <summary>
                Visit a SelectExpression.
            </summary>
            <param name="selectExpression"> The select expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitTable(Microsoft.EntityFrameworkCore.Query.Expressions.TableExpression)">
            <summary>
                Visit a TableExpression.
            </summary>
            <param name="tableExpression"> The table expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitFromSql(Microsoft.EntityFrameworkCore.Query.Expressions.FromSqlExpression)">
            <summary>
                Visit a FromSqlExpression.
            </summary>
            <param name="fromSqlExpression"> from SQL expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitCrossJoin(Microsoft.EntityFrameworkCore.Query.Expressions.CrossJoinExpression)">
            <summary>
                Visit a CrossJoinExpression.
            </summary>
            <param name="crossJoinExpression"> The cross join expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitLateralJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LateralJoinExpression)">
            <summary>
                Visit a LateralJoinExpression.
            </summary>
            <param name="lateralJoinExpression"> The lateral join expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitInnerJoin(Microsoft.EntityFrameworkCore.Query.Expressions.InnerJoinExpression)">
            <summary>
                Visit an InnerJoinExpression.
            </summary>
            <param name="innerJoinExpression"> The inner join expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitLeftOuterJoin(Microsoft.EntityFrameworkCore.Query.Expressions.LeftOuterJoinExpression)">
            <summary>
                Visit a LeftOuterJoinExpression.
            </summary>
            <param name="leftOuterJoinExpression"> The left outer join expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitExists(Microsoft.EntityFrameworkCore.Query.Expressions.ExistsExpression)">
            <summary>
                Visits an ExistsExpression.
            </summary>
            <param name="existsExpression"> The exists expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitCount(Microsoft.EntityFrameworkCore.Query.Expressions.CountExpression)">
            <summary>
                Visit a CountExpression.
            </summary>
            <param name="countExpression"> The count expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitSum(Microsoft.EntityFrameworkCore.Query.Expressions.SumExpression)">
            <summary>
                Visit a SumExpression.
            </summary>
            <param name="sumExpression"> The sum expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitMin(Microsoft.EntityFrameworkCore.Query.Expressions.MinExpression)">
            <summary>
                Visit a MinExpression.
            </summary>
            <param name="minExpression"> The minimum expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitMax(Microsoft.EntityFrameworkCore.Query.Expressions.MaxExpression)">
            <summary>
                Visit a MaxExpression.
            </summary>
            <param name="maxExpression"> The maximum expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitIn(Microsoft.EntityFrameworkCore.Query.Expressions.InExpression)">
            <summary>
                Visit an InExpression.
            </summary>
            <param name="inExpression"> The in expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitSqlFunction(Microsoft.EntityFrameworkCore.Query.Expressions.SqlFunctionExpression)">
            <summary>
                Visit a SqlFunctionExpression.
            </summary>
            <param name="sqlFunctionExpression"> The SQL function expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitStringCompare(Microsoft.EntityFrameworkCore.Query.Expressions.StringCompareExpression)">
            <summary>
                Visit a StringCompareExpression.
            </summary>
            <param name="stringCompareExpression"> The string compare expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitExplicitCast(Microsoft.EntityFrameworkCore.Query.Expressions.ExplicitCastExpression)">
            <summary>
                Visit an ExplicitCastExpression.
            </summary>
            <param name="explicitCastExpression"> The explicit cast expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.ISqlExpressionVisitor.VisitPropertyParameter(Microsoft.EntityFrameworkCore.Query.Expressions.PropertyParameterExpression)">
            <summary>
                Visit a PropertyParameterExpression.
            </summary>
            <param name="propertyParameterExpression"> The property parameter expression. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorFactoryBase">
            <summary>
                A base class for query SQL generators.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorFactoryBase.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper)">
            <summary>
                Specialised constructor for use only by derived class.
            </summary>
            <param name="commandBuilderFactory"> The command builder factory. </param>
            <param name="sqlGenerationHelper"> The SQL generation helper. </param>
            <param name="parameterNameGeneratorFactory"> The parameter name generator factory. </param>
            <param name="relationalTypeMapper"> The relational type mapper. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorFactoryBase.CommandBuilderFactory">
            <summary>
                Gets the command builder factory.
            </summary>
            <value>
                The command builder factory.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorFactoryBase.SqlGenerationHelper">
            <summary>
                Gets the SQL generation helper.
            </summary>
            <value>
                The SQL generation helper.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorFactoryBase.ParameterNameGeneratorFactory">
            <summary>
                Gets the parameter name generator factory.
            </summary>
            <value>
                The parameter name generator factory.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorFactoryBase.RelationalTypeMapper">
            <summary>
                Gets the relational type mapper.
            </summary>
            <value>
                The relational type mapper.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorFactoryBase.CreateDefault(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression)">
            <summary>
                Creates a default query SQL generator.
            </summary>
            <param name="selectExpression"> The select expression. </param>
            <returns>
                The new default query SQL generator.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.QuerySqlGeneratorFactoryBase.CreateFromSql(Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.String,System.Linq.Expressions.Expression)">
            <summary>
                Creates a query SQL generator for a FromSql query.
            </summary>
            <param name="selectExpression"> The select expression. </param>
            <param name="sql"> The SQL. </param>
            <param name="arguments"> The arguments. </param>
            <returns>
                The query SQL generator.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Sql.Internal.FromSqlNonComposedQuerySqlGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.Internal.FromSqlNonComposedQuerySqlGenerator.#ctor(Microsoft.EntityFrameworkCore.Storage.IRelationalCommandBuilderFactory,Microsoft.EntityFrameworkCore.Storage.ISqlGenerationHelper,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,Microsoft.EntityFrameworkCore.Storage.IRelationalTypeMapper,Microsoft.EntityFrameworkCore.Query.Expressions.SelectExpression,System.String,System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.Internal.FromSqlNonComposedQuerySqlGenerator.Visit(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Sql.Internal.FromSqlNonComposedQuerySqlGenerator.CreateValueBufferFactory(Microsoft.EntityFrameworkCore.Storage.IRelationalValueBufferFactoryFactory,System.Data.Common.DbDataReader)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Update.AffectedCountModificationCommandBatch">
            <summary>
                A <see cref="T:Microsoft.EntityFrameworkCore.Update.ReaderModificationCommandBatch" /> for providers which append an SQL query to find out
                how many rows were affected (see <see cref="M:Microsoft.EntityFrameworkCore.Update.UpdateSqlGenerator.AppendSelectAffectedCountCommand(System.Text.StringBuilder,System.String,System.String,System.Int32)" />).
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.CurrentContext">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecutionStrategyFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.Execute(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.BatchExecutor.ExecuteAsync(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommandBatch},Microsoft.EntityFrameworkCore.Storage.IRelationalConnection,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.#ctor(Microsoft.EntityFrameworkCore.Update.IModificationCommandBatchFactory,Microsoft.EntityFrameworkCore.Storage.IParameterNameGeneratorFactory,System.Collections.Generic.IComparer{Microsoft.EntityFrameworkCore.Update.ModificationCommand},Microsoft.EntityFrameworkCore.Metadata.IRelationalAnnotationProvider,Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.BatchCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.CreateModificationCommands(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Func{System.String})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.CommandBatchPreparer.TopologicalSort(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Update.ModificationCommand})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndex.WithOriginalValuesFlag">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactory.CreatePrincipalKeyValue(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactory.CreatePrincipalKeyValueFromOriginalValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactory.CreateDependentKeyValue(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactory.CreateDependentKeyValueFromOriginalValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.IKeyValueIndexFactorySource.GetKeyValueIndexFactory(Microsoft.EntityFrameworkCore.Metadata.IKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,`0,System.Collections.Generic.IEqualityComparer{`0},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.WithOriginalValuesFlag">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.Equals(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndex`1.GetHashCode">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndexFactory`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndexFactory`1.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndexFactory`1.CreatePrincipalKeyValue(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndexFactory`1.CreatePrincipalKeyValueFromOriginalValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndexFactory`1.CreateDependentKeyValue(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndexFactory`1.CreateDependentKeyValueFromOriginalValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndexFactorySource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndexFactorySource.GetKeyValueIndexFactory(Microsoft.EntityFrameworkCore.Metadata.IKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.KeyValueIndexFactorySource.Create(Microsoft.EntityFrameworkCore.Metadata.IKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.Internal.ModificationCommandComparer.Compare(Microsoft.EntityFrameworkCore.Update.ModificationCommand,Microsoft.EntityFrameworkCore.Update.ModificationCommand)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.DiscriminatorValueGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.DiscriminatorValueGenerator.#ctor(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.DiscriminatorValueGenerator.NextValue(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.DiscriminatorValueGenerator.GeneratesTemporaryValues">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
    </members>
</doc>
