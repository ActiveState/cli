<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Microsoft.EntityFrameworkCore</name>
    </assembly>
    <members>
        <member name="T:Microsoft.EntityFrameworkCore.DbContext">
            <summary>
                A DbContext instance represents a session with the database and can be used to query and save
                instances of your entities. DbContext is a combination of the Unit Of Work and Repository patterns.
            </summary>
            <remarks>
                <para>
                    Typically you create a class that derives from DbContext and contains <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" />
                    properties for each entity in the model. If the <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> properties have a public setter,
                    they are automatically initialized when the instance of the derived context is created.
                </para>
                <para>
                    Override the <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> method to configure the database (and
                    other options) to be used for the context. Alternatively, if you would rather perform configuration externally
                    instead of inline in your context, you can use <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1" />
                    (or <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />) to externally create an instance of <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions`1" />
                    (or <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions" />) and pass it to a base constructor of <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.
                </para>
                <para>
                    The model is discovered by running a set of conventions over the entity classes found in the
                    <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> properties on the derived context. To further configure the model that
                    is discovered by convention, you can override the <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)" /> method.
                </para>
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.#ctor">
            <summary>
                <para>
                    Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> class. The
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" />
                    method will be called to configure the database (and other options) to be used for this context.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)">
            <summary>
                <para>
                    Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> class using the specified options.
                    The <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> method will still be called to allow further
                    configuration of the options.
                </para>
            </summary>
            <param name="options">The options for this context.</param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.DbContext.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance">
            <summary>
                <para>
                    Gets the scoped <see cref="T:System.IServiceProvider" /> being used to resolve services.
                </para>
                <para>
                    This property is intended for use by extension methods that need to make use of services
                    not directly exposed in the public API surface.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)">
            <summary>
                <para>
                    Override this method to configure the database (and other options) to be used for this context.
                    This method is called for each instance of the context that is created.
                </para>
                <para>
                    In situations where an instance of <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions" /> may or may not have been passed
                    to the constructor, you can use <see cref="P:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.IsConfigured" /> to determine if
                    the options have already been set, and skip some or all of the logic in
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" />.
                </para>
            </summary>
            <param name="optionsBuilder">
                A builder used to create or modify options for this context. Databases (and other extensions)
                typically define extension methods on this object that allow you to configure the context.
            </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <summary>
                Override this method to further configure the model that was discovered by convention from the entity types
                exposed in <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> properties on your derived context. The resulting model may be cached
                and re-used for subsequent instances of your derived context.
            </summary>
            <remarks>
                If a model is explicitly set on the options for this context (via <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.UseModel(Microsoft.EntityFrameworkCore.Metadata.IModel)" />)
                then this method will not be run.
            </remarks>
            <param name="modelBuilder">
                The builder being used to construct the model for this context. Databases (and other extensions) typically
                define extension methods on this object that allow you to configure aspects of the model that are specific
                to a given database.
            </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges">
            <summary>
                Saves all changes made in this context to the database.
            </summary>
            <remarks>
                This method will automatically call <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges" /> to discover any
                changes to entity instances before saving to the underlying database. This can be disabled via
                <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled" />.
            </remarks>
            <returns>
                The number of state entries written to the database.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges(System.Boolean)">
            <summary>
                Saves all changes made in this context to the database.
            </summary>
            <param name="acceptAllChangesOnSuccess">
                Indicates whether <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AcceptAllChanges" /> is called after the changes have
                been sent successfully to the database.
            </param>
            <remarks>
                This method will automatically call <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges" /> to discover any
                changes to entity instances before saving to the underlying database. This can be disabled via
                <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled" />.
            </remarks>
            <returns>
                The number of state entries written to the database.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously saves all changes made in this context to the database.
            </summary>
            <remarks>
                <para>
                    This method will automatically call <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges" /> to discover any
                    changes to entity instances before saving to the underlying database. This can be disabled via
                    <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled" />.
                </para>
                <para>
                    Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                    that any asynchronous operations have completed before calling another method on this context.
                </para>
            </remarks>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous save operation. The task result contains the
                number of state entries written to the database.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
                Asynchronously saves all changes made in this context to the database.
            </summary>
            <param name="acceptAllChangesOnSuccess">
                Indicates whether <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AcceptAllChanges" /> is called after the changes have
                been sent successfully to the database.
            </param>
            <remarks>
                <para>
                    This method will automatically call <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges" /> to discover any
                    changes to entity instances before saving to the underlying database. This can be disabled via
                    <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled" />.
                </para>
                <para>
                    Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                    that any asynchronous operations have completed before calling another method on this context.
                </para>
            </remarks>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous save operation. The task result contains the
                number of state entries written to the database.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.Dispose">
            <summary>
                Releases the allocated resources for this context.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.Entry``1(``0)">
            <summary>
                Gets an <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1" /> for the given entity. The entry provides
                access to change tracking information and operations for the entity.
            </summary>
            <typeparam name="TEntity"> The type of the entity. </typeparam>
            <param name="entity"> The entity to get the entry for. </param>
            <returns> The entry for the given entity. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.Entry(System.Object)">
            <summary>
                <para>
                    Gets an <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" /> for the given entity. The entry provides
                    access to change tracking information and operations for the entity.
                </para>
                <para>
                    This method may be called on an entity that is not tracked. You can then
                    set the <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State" /> property on the returned entry
                    to have the context begin tracking the entity in the specified state.
                </para>
            </summary>
            <param name="entity"> The entity to get the entry for. </param>
            <returns> The entry for the given entity. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)">
            <summary>
                Begins tracking the given entity, and any other reachable entities that are
                not already being tracked, in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state such that
                they will be inserted into the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
            </summary>
            <typeparam name="TEntity"> The type of the entity. </typeparam>
            <param name="entity"> The entity to add. </param>
            <returns>
                The <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1" /> for the entity. The entry provides
                access to change tracking information and operations for the entity.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.AddAsync``1(``0,System.Threading.CancellationToken)">
            <summary>
                <para>
                    Begins tracking the given entity, and any other reachable entities that are
                    not already being tracked, in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state such that they will
                    be inserted into the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
                </para>
                <para>
                    This method is async only to allow special value generators, such as the one used by
                    'Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy.SequenceHiLo',
                    to access the database asynchronously. For all other cases the non async method should be used.
                </para>
            </summary>
            <typeparam name="TEntity"> The type of the entity. </typeparam>
            <param name="entity"> The entity to add. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous Add operation. The task result contains the
                <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1" /> for the entity. The entry provides access to change tracking
                information and operations for the entity.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)">
            <summary>
                <para>
                    Begins tracking the given entity in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged" /> state 
                    such that no operation will be performed when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> 
                    is called.
                </para>
                <para>
                    A recursive search of the navigation properties will be performed to find reachable entities
                    that are not already being tracked by the context. These entities will also begin to be tracked 
                    by the context. If a reachable entity has its primary key value set
                    then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged" /> state. If the primary key
                    value is not set then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state. 
                    An entity is considered to have its primary key value set if the primary key property is set 
                    to anything other than the CLR default for the property type.
                </para>
            </summary>
            <typeparam name="TEntity"> The type of the entity. </typeparam>
            <param name="entity"> The entity to attach. </param>
            <returns>
                The <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1" /> for the entity. The entry provides
                access to change tracking information and operations for the entity.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.Update``1(``0)">
            <summary>
                <para>
                    Begins tracking the given entity in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Modified" /> state such that it will
                    be updated in the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
                </para>
                <para>
                    All properties of the entity will be marked as modified. To mark only some properties as modified, use
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)" /> to begin tracking the entity in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged" />
                    state and then use the returned <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" /> to mark the desired properties as modified.
                </para>
                <para>
                    A recursive search of the navigation properties will be performed to find reachable entities
                    that are not already being tracked by the context. These entities will also begin to be tracked 
                    by the context. If a reachable entity has its primary key value set
                    then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Modified" /> state. If the primary key
                    value is not set then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state. 
                    An entity is considered to have its primary key value set if the primary key property is set 
                    to anything other than the CLR default for the property type.
                </para>
            </summary>
            <typeparam name="TEntity"> The type of the entity. </typeparam>
            <param name="entity"> The entity to update. </param>
            <returns>
                The <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1" /> for the entity. The entry provides
                access to change tracking information and operations for the entity.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.Remove``1(``0)">
            <summary>
                Begins tracking the given entity in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Deleted" /> state such that it will
                be removed from the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
            </summary>
            <remarks>
                <para>
                    If the entity is already tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state then the context will
                    stop tracking the entity (rather than marking it as <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Deleted" />) since the
                    entity was previously added to the context and does not exist in the database.
                </para>
                <para>
                    Any other reachable entities that are not already being tracked will be tracked in the same way that
                    they would be if <see cref="M:Microsoft.EntityFrameworkCore.DbContext.Attach``1(``0)" /> was called before calling this method.
                    This allows any cascading actions to be applied when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
                </para>
            </remarks>
            <typeparam name="TEntity"> The type of the entity. </typeparam>
            <param name="entity"> The entity to remove. </param>
            <returns>
                The <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1" /> for the entity. The entry provides
                access to change tracking information and operations for the entity.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.Add(System.Object)">
            <summary>
                Begins tracking the given entity, and any other reachable entities that are
                not already being tracked, in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state such that they will
                be inserted into the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
            </summary>
            <param name="entity"> The entity to add. </param>
            <returns>
                The <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" /> for the entity. The entry provides
                access to change tracking information and operations for the entity.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.AddAsync(System.Object,System.Threading.CancellationToken)">
            <summary>
                <para>
                    Begins tracking the given entity, and any other reachable entities that are
                    not already being tracked, in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state such that they will
                    be inserted into the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
                </para>
                <para>
                    This method is async only to allow special value generators, such as the one used by
                    'Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy.SequenceHiLo',
                    to access the database asynchronously. For all other cases the non async method should be used.
                </para>
            </summary>
            <param name="entity"> The entity to add. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous Add operation. The task result contains the
                <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" /> for the entity. The entry provides access to change tracking
                information and operations for the entity.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)">
            <summary>
                <para>
                    Begins tracking the given entity in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged" /> state 
                    such that no operation will be performed when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> 
                    is called.
                </para>
                <para>
                    A recursive search of the navigation properties will be performed to find reachable entities
                    that are not already being tracked by the context. These entities will also begin to be tracked 
                    by the context. If a reachable entity has its primary key value set
                    then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged" /> state. If the primary key
                    value is not set then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state. 
                    An entity is considered to have its primary key value set if the primary key property is set 
                    to anything other than the CLR default for the property type.
                </para>
            </summary>
            <param name="entity"> The entity to attach. </param>
            <returns>
                The <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" /> for the entity. The entry provides
                access to change tracking information and operations for the entity.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.Update(System.Object)">
            <summary>
                <para>
                    Begins tracking the given entity in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Modified" /> state such that it will
                    be updated in the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
                </para>
                <para>
                    All properties of the entity will be marked as modified. To mark only some properties as modified, use
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)" /> to begin tracking the entity in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged" />
                    state and then use the returned <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" /> to mark the desired properties as modified.
                </para>
                <para>
                    A recursive search of the navigation properties will be performed to find reachable entities
                    that are not already being tracked by the context. These entities will also begin to be tracked 
                    by the context. If a reachable entity has its primary key value set
                    then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Modified" /> state. If the primary key
                    value is not set then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state. 
                    An entity is considered to have its primary key value set if the primary key property is set 
                    to anything other than the CLR default for the property type.
                </para>
            </summary>
            <param name="entity"> The entity to update. </param>
            <returns>
                The <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" /> for the entity. The entry provides
                access to change tracking information and operations for the entity.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.Remove(System.Object)">
            <summary>
                Begins tracking the given entity in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Deleted" /> state such that it will
                be removed from the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
            </summary>
            <remarks>
                <para>
                    If the entity is already tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state then the context will
                    stop tracking the entity (rather than marking it as <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Deleted" />) since the
                    entity was previously added to the context and does not exist in the database.
                </para>
                <para>
                    Any other reachable entities that are not already being tracked will be tracked in the same way that
                    they would be if <see cref="M:Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)" /> was called before calling this method.
                    This allows any cascading actions to be applied when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
                </para>
            </remarks>
            <param name="entity"> The entity to remove. </param>
            <returns>
                The <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" /> for the entity. The entry provides
                access to change tracking information and operations for the entity.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Object[])">
            <summary>
                Begins tracking the given entities, and any other reachable entities that are
                not already being tracked, in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state such that they will
                be inserted into the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
            </summary>
            <param name="entities"> The entities to add. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Object[])">
            <summary>
                <para>
                    Begins tracking the given entity, and any other reachable entities that are
                    not already being tracked, in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state such that they will
                    be inserted into the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
                </para>
                <para>
                    This method is async only to allow special value generators, such as the one used by
                    'Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy.SequenceHiLo',
                    to access the database asynchronously. For all other cases the non async method should be used.
                </para>
            </summary>
            <param name="entities"> The entities to add. </param>
            <returns> A task that represents the asynchronous operation. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])">
            <summary>
                <para>
                    Begins tracking the given entities in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged" /> state 
                    such that no operation will be performed when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> 
                    is called.
                </para>
                <para>
                    A recursive search of the navigation properties will be performed to find reachable entities
                    that are not already being tracked by the context. These entities will also begin to be tracked 
                    by the context. If a reachable entity has its primary key value set
                    then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged" /> state. If the primary key
                    value is not set then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state. 
                    An entity is considered to have its primary key value set if the primary key property is set 
                    to anything other than the CLR default for the property type.
                </para>
            </summary>
            <param name="entities"> The entities to attach. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Object[])">
            <summary>
                <para>
                    Begins tracking the given entities in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Modified" /> state such that they will
                    be updated in the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
                </para>
                <para>
                    All properties of each entity will be marked as modified. To mark only some properties as modified, use
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)" /> to begin tracking each entity in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged" />
                    state and then use the returned <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" /> to mark the desired properties as modified.
                </para>
                <para>
                    A recursive search of the navigation properties will be performed to find reachable entities
                    that are not already being tracked by the context. These entities will also begin to be tracked 
                    by the context. If a reachable entity has its primary key value set
                    then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Modified" /> state. If the primary key
                    value is not set then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state. 
                    An entity is considered to have its primary key value set if the primary key property is set 
                    to anything other than the CLR default for the property type.
                </para>
            </summary>
            <param name="entities"> The entities to update. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Object[])">
            <summary>
                Begins tracking the given entity in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Deleted" /> state such that it will
                be removed from the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
            </summary>
            <remarks>
                <para>
                    If any of the entities are already tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state then the context will
                    stop tracking those entities (rather than marking them as <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Deleted" />) since those
                    entities were previously added to the context and do not exist in the database.
                </para>
                <para>
                    Any other reachable entities that are not already being tracked will be tracked in the same way that
                    they would be if <see cref="M:Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Object[])" /> was called before calling this method.
                    This allows any cascading actions to be applied when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
                </para>
            </remarks>
            <param name="entities"> The entities to remove. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.AddRange(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
                Begins tracking the given entities, and any other reachable entities that are
                not already being tracked, in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state such that they will
                be inserted into the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
            </summary>
            <param name="entities"> The entities to add. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.AddRangeAsync(System.Collections.Generic.IEnumerable{System.Object},System.Threading.CancellationToken)">
            <summary>
                <para>
                    Begins tracking the given entity, and any other reachable entities that are
                    not already being tracked, in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state such that they will
                    be inserted into the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
                </para>
                <para>
                    This method is async only to allow special value generators, such as the one used by
                    'Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy.SequenceHiLo',
                    to access the database asynchronously. For all other cases the non async method should be used.
                </para>
            </summary>
            <param name="entities"> The entities to add. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
                <para>
                    Begins tracking the given entities in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged" /> state 
                    such that no operation will be performed when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> 
                    is called.
                </para>
                <para>
                    A recursive search of the navigation properties will be performed to find reachable entities
                    that are not already being tracked by the context. These entities will also begin to be tracked 
                    by the context. If a reachable entity has its primary key value set
                    then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged" /> state. If the primary key
                    value is not set then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state. 
                    An entity is considered to have its primary key value set if the primary key property is set 
                    to anything other than the CLR default for the property type.
                </para>
            </summary>
            <param name="entities"> The entities to attach. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.UpdateRange(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
                <para>
                    Begins tracking the given entities in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Modified" /> state such that they will
                    be updated in the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
                </para>
                <para>
                    All properties of each entity will be marked as modified. To mark only some properties as modified, use
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.Attach(System.Object)" /> to begin tracking each entity in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged" />
                    state and then use the returned <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" /> to mark the desired properties as modified.
                </para>
                <para>
                    A recursive search of the navigation properties will be performed to find reachable entities
                    that are not already being tracked by the context. These entities will also begin to be tracked 
                    by the context. If a reachable entity has its primary key value set
                    then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Modified" /> state. If the primary key
                    value is not set then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state. 
                    An entity is considered to have its primary key value set if the primary key property is set 
                    to anything other than the CLR default for the property type.
                </para>
            </summary>
            <param name="entities"> The entities to update. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.RemoveRange(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
                Begins tracking the given entity in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Deleted" /> state such that it will
                be removed from the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
            </summary>
            <remarks>
                <para>
                    If any of the entities are already tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state then the context will
                    stop tracking those entities (rather than marking them as <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Deleted" />) since those
                    entities were previously added to the context and do not exist in the database.
                </para>
                <para>
                    Any other reachable entities that are not already being tracked will be tracked in the same way that
                    they would be if <see cref="M:Microsoft.EntityFrameworkCore.DbContext.AttachRange(System.Collections.Generic.IEnumerable{System.Object})" /> was called before calling this method.
                    This allows any cascading actions to be applied when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
                </para>
            </remarks>
            <param name="entities"> The entities to remove. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.DbContext.Database">
            <summary>
                Provides access to database related information and operations for this context.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.DbContext.ChangeTracker">
            <summary>
                Provides access to information and operations for entity instances this context is tracking.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.DbContext.Model">
            <summary>
                The metadata about the shape of entities, the relationships between them, and how they map to the database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.Set``1">
            <summary>
                Creates a <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> that can be used to query and save instances of <typeparamref name="TEntity" />.
            </summary>
            <typeparam name="TEntity"> The type of entity for which a set should be returned. </typeparam>
            <returns> A set for the given entity type. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.Find(System.Type,System.Object[])">
            <summary>
                Finds an entity with the given primary key values. If an entity with the given primary key values
                is being tracked by the context, then it is returned immediately without making a request to the
                database. Otherwise, a query is made to the database for an entity with the given primary key values
                and this entity, if found, is attached to the context and returned. If no entity is found, then
                null is returned.
            </summary>
            <param name="entityType"> The type of entity to find. </param>
            <param name="keyValues">The values of the primary key for the entity to be found.</param>
            <returns>The entity found, or null.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[])">
            <summary>
                Finds an entity with the given primary key values. If an entity with the given primary key values
                is being tracked by the context, then it is returned immediately without making a request to the
                database. Otherwise, a query is made to the database for an entity with the given primary key values
                and this entity, if found, is attached to the context and returned. If no entity is found, then
                null is returned.
            </summary>
            <param name="entityType"> The type of entity to find. </param>
            <param name="keyValues">The values of the primary key for the entity to be found.</param>
            <returns>The entity found, or null.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.FindAsync(System.Type,System.Object[],System.Threading.CancellationToken)">
            <summary>
                Finds an entity with the given primary key values. If an entity with the given primary key values
                is being tracked by the context, then it is returned immediately without making a request to the
                database. Otherwise, a query is made to the database for an entity with the given primary key values
                and this entity, if found, is attached to the context and returned. If no entity is found, then
                null is returned.
            </summary>
            <param name="entityType"> The type of entity to find. </param>
            <param name="keyValues">The values of the primary key for the entity to be found.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>The entity found, or null.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.Find``1(System.Object[])">
            <summary>
                Finds an entity with the given primary key values. If an entity with the given primary key values
                is being tracked by the context, then it is returned immediately without making a request to the
                database. Otherwise, a query is made to the database for an entity with the given primary key values
                and this entity, if found, is attached to the context and returned. If no entity is found, then
                null is returned.
            </summary>
            <typeparam name="TEntity"> The type of entity to find. </typeparam>
            <param name="keyValues">The values of the primary key for the entity to be found.</param>
            <returns>The entity found, or null.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[])">
            <summary>
                Finds an entity with the given primary key values. If an entity with the given primary key values
                is being tracked by the context, then it is returned immediately without making a request to the
                database. Otherwise, a query is made to the database for an entity with the given primary key values
                and this entity, if found, is attached to the context and returned. If no entity is found, then
                null is returned.
            </summary>
            <typeparam name="TEntity"> The type of entity to find. </typeparam>
            <param name="keyValues">The values of the primary key for the entity to be found.</param>
            <returns>The entity found, or null.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContext.FindAsync``1(System.Object[],System.Threading.CancellationToken)">
            <summary>
                Finds an entity with the given primary key values. If an entity with the given primary key values
                is being tracked by the context, then it is returned immediately without making a request to the
                database. Otherwise, a query is made to the database for an entity with the given primary key values
                and this entity, if found, is attached to the context and returned. If no entity is found, then
                null is returned.
            </summary>
            <typeparam name="TEntity"> The type of entity to find. </typeparam>
            <param name="keyValues">The values of the primary key for the entity to be found.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>The entity found, or null.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.DbContextOptions">
            <summary>
                The options to be used by a <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />. You normally override
                <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> or use a <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />
                to create instances of this class and it is not designed to be directly constructed in your application code.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptions.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.Type,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions" /> class. You normally override
                <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> or use a <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />
                to create instances of this class and it is not designed to be directly constructed in your application code.
            </summary>
            <param name="extensions"> The extensions that store the configured options. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.DbContextOptions.Extensions">
            <summary>
                Gets the extensions that store the configured options.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptions.FindExtension``1">
            <summary>
                Gets the extension of the specified type. Returns null if no extension of the specified type is configured.
            </summary>
            <typeparam name="TExtension"> The type of the extension to get. </typeparam>
            <returns> The extension, or null if none was found. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptions.GetExtension``1">
            <summary>
                Gets the extension of the specified type. Throws if no extension of the specified type is configured.
            </summary>
            <typeparam name="TExtension"> The type of the extension to get. </typeparam>
            <returns> The extension. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptions.WithExtension``1(``0)">
            <summary>
                Adds the given extension to the options.
            </summary>
            <typeparam name="TExtension"> The type of extension to be added. </typeparam>
            <param name="extension"> The extension to be added. </param>
            <returns> The same options instance so that multiple calls can be chained. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.DbContextOptions.ContextType">
            <summary>
                The type of context that these options are for. Will return <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> if the
                options are not built for a specific derived context.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder">
            <summary>
                <para>
                    Provides a simple API surface for configuring <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions" />. Databases (and other extensions)
                    typically define extension methods on this object that allow you to configure the database connection (and other
                    options) to be used for a context.
                </para>
                <para>
                    You can use <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" /> to configure a context by overriding
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> or creating a <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions" />
                    externally and passing it to the context constructor.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" /> class with no options set.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" /> class to further configure
                a given <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions" />.
            </summary>
            <param name="options"> The options to be configured. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.Options">
            <summary>
                Gets the options being configured.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.IsConfigured">
            <summary>
                <para>
                    Gets a value indicating whether any options have been configured.
                </para>
                <para>
                    This can be useful when you have overridden <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> to configure
                    the context, but in some cases you also externally provide options via the context constructor. This property can be
                    used to determine if the options have already been set, and skip some or all of the logic in
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" />.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.UseModel(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                Sets the model to be used for the context. If the model is set, then <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)" />
                will not be run.
            </summary>
            <param name="model"> The model to be used. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.UseLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
                Sets the <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> that will be used to create <see cref="T:Microsoft.Extensions.Logging.ILogger" /> instances
                for logging done by this context.
            </summary>
            <param name="loggerFactory"> The logger factory to be used. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.UseMemoryCache(Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
                Sets the <see cref="T:Microsoft.Extensions.Caching.Memory.IMemoryCache" /> to be used for query caching by this context. EF will
                create and manage a memory cache if none is specified.
            </summary>
            <param name="memoryCache"> The memory cache to be used. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.UseInternalServiceProvider(System.IServiceProvider)">
            <summary>
                <para>
                    Sets the <see cref="T:System.IServiceProvider" /> that the context should resolve all of its services from. EF will
                    create and manage a service provider if none is specified.
                </para>
                <para>
                    The service provider must contain all the services required by Entity Framework (and the database being
                    used). The Entity Framework services can be registered using the
                    <see
                        cref="M:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServiceCollectionExtensions.AddEntityFramework(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
                    method. Most databases also provide an extension method on <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to register the
                    services required. For example, the Microsoft SQL Server provider includes an AddEntityFrameworkSqlServer() method
                    to add the required services.
                </para>
                <para>
                    If the <see cref="T:System.IServiceProvider" /> has a <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions" /> or
                    <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions`1" /> registered, then this will be used as the options for
                    this context instance.
                </para>
            </summary>
            <param name="serviceProvider"> The service provider to be used. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.EnableSensitiveDataLogging">
            <summary>
                Enables application data to be included in exception messages, logging, etc. This can include the values assigned to properties
                of your entity instances, parameter values for commands being sent to the database, and other such data. You should only enable
                this flag if you have the appropriate security measures in place based on the sensitivity of this data.
            </summary>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.UseQueryTrackingBehavior(Microsoft.EntityFrameworkCore.QueryTrackingBehavior)">
            <summary>
                <para>
                    Sets the tracking behavior for LINQ queries run against the context. Disabling change tracking
                    is useful for read-only scenarios because it avoids the overhead of setting up change tracking for each
                    entity instance. You should not disable change tracking if you want to manipulate entity instances and
                    persist those changes to the database using <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" />.
                </para>
                <para>
                    This method sets the default behavior for all contexts created with these options, but you can override this
                    behavior for a context instance using <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.QueryTrackingBehavior" /> or on individual
                    queries using the <see cref="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking``1(System.Linq.IQueryable{``0})" />
                    and <see cref="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking``1(System.Linq.IQueryable{``0})" /> methods.
                </para>
                <para>
                    The default value is <see cref="F:Microsoft.EntityFrameworkCore.QueryTrackingBehavior.TrackAll" />. This means the change tracker will
                    keep track of changes for all entities that are returned from a LINQ query.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.ConfigureWarnings(System.Action{Microsoft.EntityFrameworkCore.Infrastructure.WarningsConfigurationBuilder})">
            <summary>
                Configures the runtime behavior of warnings generated by Entity Framework. You can set a default behavior and behaviors for
                each warning type.
            </summary>
            <example>
                <code>
                    optionsBuilder.ConfigureWarnings(warnings => 
                        warnings.Default(WarningBehavior.Ignore)
                                .Log(CoreEventId.IncludeIgnoredWarning, CoreEventId.ModelValidationWarning)
                                .Throw(RelationalEventId.QueryClientEvaluationWarning))
                </code>
            </example>
            <param name="warningsConfigurationBuilderAction">
                An action to configure the warning behavior.
            </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.ReplaceService``2">
            <summary>
                <para>
                    Replaces the internal Entity Framework implementation of a service contract with a different
                    implementation.
                </para>
                <para>
                    This method can only be used when EF is building and managing its internal service provider.
                    If the service provider is being built externally and passed to
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.UseInternalServiceProvider(System.IServiceProvider)" />, then replacement services should be configured on
                    that service provider before it is passed to EF.
                </para>
                <para>
                    The replacement service gets the same scope as the EF service that it is replacing.
                </para>
            </summary>
            <typeparam name="TService"> The type (usually an interface) that defines the contract of the service to replace. </typeparam>
            <typeparam name="TImplementation"> The new implementation type for the service. </typeparam>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IDbContextOptionsBuilderInfrastructure#AddOrUpdateExtension``1(``0)">
            <summary>
                <para>
                    Adds the given extension to the options. If an existing extension of the same type already exists, it will be replaced.
                </para>
                <para>
                    This method is intended for use by extension methods to configure the context. It is not intended to be used in
                    application code.
                </para>
            </summary>
            <typeparam name="TExtension"> The type of extension to be added. </typeparam>
            <param name="extension"> The extension to be added. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1">
            <summary>
                <para>
                    Provides a simple API surface for configuring <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions`1" />. Databases (and other extensions)
                    typically define extension methods on this object that allow you to configure the database connection (and other
                    options) to be used for a context.
                </para>
                <para>
                    You can use <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" /> to configure a context by overriding
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> or creating a <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions" />
                    externally and passing it to the context constructor.
                </para>
            </summary>
            <typeparam name="TContext"> The type of context to be configured. </typeparam>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1" /> class with no options set.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1.#ctor(Microsoft.EntityFrameworkCore.DbContextOptions{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1" /> class to further configure
                a given <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions" />.
            </summary>
            <param name="options"> The options to be configured. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1.Options">
            <summary>
                Gets the options being configured.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1.UseModel(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                Sets the model to be used for the context. If the model is set, then <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)" />
                will not be run.
            </summary>
            <param name="model"> The model to be used. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1.UseLoggerFactory(Microsoft.Extensions.Logging.ILoggerFactory)">
            <summary>
                Sets the <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> used for logging information from the context.
            </summary>
            <param name="loggerFactory"> The <see cref="T:Microsoft.Extensions.Logging.ILoggerFactory" /> to be used. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1.UseMemoryCache(Microsoft.Extensions.Caching.Memory.IMemoryCache)">
            <summary>
                Sets the <see cref="T:Microsoft.Extensions.Caching.Memory.IMemoryCache" /> used to cache information such as query translations. If none is specified, then
                Entity Framework will maintain its own internal <see cref="T:Microsoft.Extensions.Caching.Memory.IMemoryCache" />.
            </summary>
            <param name="memoryCache"> The <see cref="T:Microsoft.Extensions.Caching.Memory.IMemoryCache" /> to be used. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1.UseInternalServiceProvider(System.IServiceProvider)">
            <summary>
                Sets the <see cref="T:System.IServiceProvider" /> that the context will resolve its internal services from. If none is specified, then
                Entity Framework will maintain its own internal <see cref="T:System.IServiceProvider" />. By default, we recommend allowing Entity Framework
                to create and maintain its own <see cref="T:System.IServiceProvider" /> for internal services.
            </summary>
            <param name="serviceProvider"> The <see cref="T:System.IServiceProvider" /> to be used. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1.EnableSensitiveDataLogging">
            <summary>
                Enables application data to be included in exception messages, logging, etc. This can include the values assigned to properties
                of your entity instances, parameter values for commands being sent to the database, and other such data. You should only enable
                this flag if you have the appropriate security measures in place based on the sensitivity of this data.
            </summary>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1.UseQueryTrackingBehavior(Microsoft.EntityFrameworkCore.QueryTrackingBehavior)">
            <summary>
                <para>
                    Sets the tracking behavior for LINQ queries run against the context. Disabling change tracking
                    is useful for read-only scenarios because it avoids the overhead of setting up change tracking for each
                    entity instance. You should not disable change tracking if you want to manipulate entity instances and
                    persist those changes to the database using <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" />.
                </para>
                <para>
                    This method sets the default behavior for all contexts created with these options, but you can override this
                    behavior for a context instance using <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.QueryTrackingBehavior" /> or on individual
                    queries using the <see cref="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking``1(System.Linq.IQueryable{``0})" />
                    and <see cref="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking``1(System.Linq.IQueryable{``0})" /> methods.
                </para>
                <para>
                    The default value is <see cref="F:Microsoft.EntityFrameworkCore.QueryTrackingBehavior.TrackAll" />. This means the change tracker will
                    keep track of changes for all entities that are returned from a LINQ query.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1.ConfigureWarnings(System.Action{Microsoft.EntityFrameworkCore.Infrastructure.WarningsConfigurationBuilder})">
            <summary>
                Configures the runtime behavior of warnings generated by Entity Framework. You can set a default behavior and behaviors for
                each warning type.
            </summary>
            <example>
                <code>
                    optionsBuilder.ConfigureWarnings(warnings => 
                        warnings.Default(WarningBehavior.Ignore)
                                .Log(CoreEventId.IncludeIgnoredWarning, CoreEventId.ModelValidationWarning)
                                .Throw(RelationalEventId.QueryClientEvaluationWarning))
                </code>
            </example>
            <param name="warningsConfigurationBuilderAction">
                An action to configure the warning behavior.
            </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1.ReplaceService``2">
            <summary>
                <para>
                    Replaces the internal Entity Framework implementation of a service contract with a different
                    implementation.
                </para>
                <para>
                    This method can only be used when EF is building and managing its internal service provider.
                    If the service provider is being built externally and passed to
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1.UseInternalServiceProvider(System.IServiceProvider)" />, then replacement services should be configured on
                    that service provider before it is passed to EF.
                </para>
                <para>
                    The replacement service gets the same scope as the EF service that it is replacing.
                </para>
            </summary>
            <typeparam name="TService"> The type (usually an interface) that defines the contract of the service to replace. </typeparam>
            <typeparam name="TImplementation"> The new implementation type for the service. </typeparam>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.DbContextOptions`1">
            <summary>
                The options to be used by a <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />. You normally override
                <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> or use a <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1" />
                to create instances of this class and it is not designed to be directly constructed in your application code.
            </summary>
            <typeparam name="TContext"> The type of the context these options apply to. </typeparam>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptions`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions`1" /> class. You normally override
                <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> or use a <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1" />
                to create instances of this class and it is not designed to be directly constructed in your application code.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptions`1.#ctor(System.Collections.Generic.IReadOnlyDictionary{System.Type,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions`1" /> class. You normally override
                <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> or use a <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder`1" />
                to create instances of this class and it is not designed to be directly constructed in your application code.
            </summary>
            <param name="extensions"> The extensions that store the configured options. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbContextOptions`1.WithExtension``1(``0)">
            <summary>
                Adds the given extension to the options.
            </summary>
            <typeparam name="TExtension"> The type of extension to be added. </typeparam>
            <param name="extension"> The extension to be added. </param>
            <returns> The same options instance so that multiple calls can be chained. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.DbContextOptions`1.ContextType">
            <summary>
                The type of context that these options are for (<typeparamref name="TContext" />).
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.DbSet`1">
            <summary>
                <para>
                    A <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> can be used to query and save instances of <typeparamref name="TEntity" />.
                    LINQ queries against a <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> will be translated into queries against the database.
                </para>
                <para>
                    The results of a LINQ query against a <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> will contain the results
                    returned from the database and may not reflect changes made in the context that have not
                    been persisted to the database. For example, the results will not contain newly added entities
                    and may still contain entities that are marked for deletion.
                </para>
                <para>
                    Depending on the database being used, some parts of a LINQ query against a <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" />
                    may be evaluated in memory rather than being translated into a database query.
                </para>
                <para>
                    <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> objects are usually obtained from a <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" />
                    property on a derived <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> or from the <see cref="M:Microsoft.EntityFrameworkCore.DbContext.Set``1" />
                    method.
                </para>
            </summary>
            <typeparam name="TEntity"> The type of entity being operated on by this set. </typeparam>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.DbSet`1.Local">
            <summary>
                <para>
                    Gets an <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1" /> that represents a local view of all Added, Unchanged,
                    and Modified entities in this set.
                </para>
                <para>
                    This local view will stay in sync as entities are added or removed from the context. Likewise, entities
                    added to or removed from the local view will automatically be added to or removed
                    from the context.
                </para>
                <para>
                    This property can be used for data binding by populating the set with data, for example by using the
                    <see cref="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load``1(System.Linq.IQueryable{``0})" /> extension method,
                    and then binding to the local data through this property.  For WPF bind to this property
                    directly.  For Windows Forms bind to the result of calling ToBindingList on this property.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbSet`1.Find(System.Object[])">
            <summary>
                Finds an entity with the given primary key values. If an entity with the given primary key values
                is being tracked by the context, then it is returned immediately without making a request to the
                database. Otherwise, a query is made to the database for an entity with the given primary key values
                and this entity, if found, is attached to the context and returned. If no entity is found, then
                null is returned.
            </summary>
            <param name="keyValues">The values of the primary key for the entity to be found.</param>
            <returns>The entity found, or null.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbSet`1.FindAsync(System.Object[])">
            <summary>
                Finds an entity with the given primary key values. If an entity with the given primary key values
                is being tracked by the context, then it is returned immediately without making a request to the
                database. Otherwise, a query is made to the database for an entity with the given primary key values
                and this entity, if found, is attached to the context and returned. If no entity is found, then
                null is returned.
            </summary>
            <param name="keyValues">The values of the primary key for the entity to be found.</param>
            <returns>The entity found, or null.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbSet`1.FindAsync(System.Object[],System.Threading.CancellationToken)">
            <summary>
                Finds an entity with the given primary key values. If an entity with the given primary key values
                is being tracked by the context, then it is returned immediately without making a request to the
                database. Otherwise, a query is made to the database for an entity with the given primary key values
                and this entity, if found, is attached to the context and returned. If no entity is found, then
                null is returned.
            </summary>
            <param name="keyValues">The values of the primary key for the entity to be found.</param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>The entity found, or null.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbSet`1.Add(`0)">
            <summary>
                Begins tracking the given entity, and any other reachable entities that are
                not already being tracked, in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state such that they will
                be inserted into the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
            </summary>
            <param name="entity"> The entity to add. </param>
            <returns>
                The <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1" /> for the entity. The entry provides
                access to change tracking information and operations for the entity.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbSet`1.AddAsync(`0,System.Threading.CancellationToken)">
            <summary>
                <para>
                    Begins tracking the given entity, and any other reachable entities that are
                    not already being tracked, in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state such that they will
                    be inserted into the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
                </para>
                <para>
                    This method is async only to allow special value generators, such as the one used by
                    'Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy.SequenceHiLo',
                    to access the database asynchronously. For all other cases the non async method should be used.
                </para>
            </summary>
            <param name="entity"> The entity to add. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous Add operation. The task result contains the
                <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1" /> for the entity. The entry provides access to change tracking
                information and operations for the entity.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbSet`1.Attach(`0)">
            <summary>
                <para>
                    Begins tracking the given entity in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged" /> state 
                    such that no operation will be performed when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> 
                    is called.
                </para>
                <para>
                    A recursive search of the navigation properties will be performed to find reachable entities
                    that are not already being tracked by the context. These entities will also begin to be tracked 
                    by the context. If a reachable entity has its primary key value set
                    then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged" /> state. If the primary key
                    value is not set then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state. 
                    An entity is considered to have its primary key value set if the primary key property is set 
                    to anything other than the CLR default for the property type.
                </para>
            </summary>
            <param name="entity"> The entity to attach. </param>
            <returns>
                The <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" /> for the entity. The entry provides
                access to change tracking information and operations for the entity.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbSet`1.Remove(`0)">
            <summary>
                Begins tracking the given entity in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Deleted" /> state such that it will
                be removed from the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
            </summary>
            <remarks>
                <para>
                    If the entity is already tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state then the context will
                    stop tracking the entity (rather than marking it as <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Deleted" />) since the
                    entity was previously added to the context and does not exist in the database.
                </para>
                <para>
                    Any other reachable entities that are not already being tracked will be tracked in the same way that
                    they would be if <see cref="M:Microsoft.EntityFrameworkCore.DbSet`1.Attach(`0)" /> was called before calling this method.
                    This allows any cascading actions to be applied when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
                </para>
            </remarks>
            <param name="entity"> The entity to remove. </param>
            <returns>
                The <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1" /> for the entity. The entry provides
                access to change tracking information and operations for the entity.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbSet`1.Update(`0)">
            <summary>
                <para>
                    Begins tracking the given entity in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Modified" /> state such that it will
                    be updated in the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
                </para>
                <para>
                    All properties of the entity will be marked as modified. To mark only some properties as modified, use
                    <see cref="M:Microsoft.EntityFrameworkCore.DbSet`1.Attach(`0)" /> to begin tracking the entity in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged" />
                    state and then use the returned <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" /> to mark the desired properties as modified.
                </para>
                <para>
                    A recursive search of the navigation properties will be performed to find reachable entities
                    that are not already being tracked by the context. These entities will also begin to be tracked 
                    by the context. If a reachable entity has its primary key value set
                    then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Modified" /> state. If the primary key
                    value is not set then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state. 
                    An entity is considered to have its primary key value set if the primary key property is set 
                    to anything other than the CLR default for the property type.
                </para>
            </summary>
            <param name="entity"> The entity to update. </param>
            <returns>
                The <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" /> for the entity. The entry provides
                access to change tracking information and operations for the entity.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbSet`1.AddRange(`0[])">
            <summary>
                Begins tracking the given entities, and any other reachable entities that are
                not already being tracked, in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state such that they will
                be inserted into the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
            </summary>
            <param name="entities"> The entities to add. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbSet`1.AddRangeAsync(`0[])">
            <summary>
                <para>
                    Begins tracking the given entities, and any other reachable entities that are
                    not already being tracked, in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state such that they will
                    be inserted into the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
                </para>
                <para>
                    This method is async only to allow special value generators, such as the one used by
                    'Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy.SequenceHiLo',
                    to access the database asynchronously. For all other cases the non async method should be used.
                </para>
            </summary>
            <param name="entities"> The entities to add. </param>
            <returns> A task that represents the asynchronous operation. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(`0[])">
            <summary>
                <para>
                    Begins tracking the given entities in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged" /> state 
                    such that no operation will be performed when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> 
                    is called.
                </para>
                <para>
                    A recursive search of the navigation properties will be performed to find reachable entities
                    that are not already being tracked by the context. These entities will also begin to be tracked 
                    by the context. If a reachable entity has its primary key value set
                    then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged" /> state. If the primary key
                    value is not set then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state. 
                    An entity is considered to have its primary key value set if the primary key property is set 
                    to anything other than the CLR default for the property type.
                </para>
            </summary>
            <param name="entities"> The entities to attach. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbSet`1.RemoveRange(`0[])">
            <summary>
                Begins tracking the given entity in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Deleted" /> state such that it will
                be removed from the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
            </summary>
            <remarks>
                <para>
                    If any of the entities are already tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state then the context will
                    stop tracking those entities (rather than marking them as <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Deleted" />) since those
                    entities were previously added to the context and do not exist in the database.
                </para>
                <para>
                    Any other reachable entities that are not already being tracked will be tracked in the same way that
                    they would be if <see cref="M:Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(`0[])" /> was called before calling this method.
                    This allows any cascading actions to be applied when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
                </para>
            </remarks>
            <param name="entities"> The entities to remove. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbSet`1.UpdateRange(`0[])">
            <summary>
                <para>
                    Begins tracking the given entities in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Modified" /> state such that they will
                    be updated in the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
                </para>
                <para>
                    All properties of each entity will be marked as modified. To mark only some properties as modified, use
                    <see cref="M:Microsoft.EntityFrameworkCore.DbSet`1.Attach(`0)" /> to begin tracking each entity in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged" />
                    state and then use the returned <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" /> to mark the desired properties as modified.
                </para>
                <para>
                    A recursive search of the navigation properties will be performed to find reachable entities
                    that are not already being tracked by the context. These entities will also begin to be tracked 
                    by the context. If a reachable entity has its primary key value set
                    then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Modified" /> state. If the primary key
                    value is not set then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state. 
                    An entity is considered to have its primary key value set if the primary key property is set 
                    to anything other than the CLR default for the property type.
                </para>
            </summary>
            <param name="entities"> The entities to update. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbSet`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Begins tracking the given entities, and any other reachable entities that are
                not already being tracked, in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state such that they will
                be inserted into the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
            </summary>
            <param name="entities"> The entities to add. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbSet`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
                <para>
                    Begins tracking the given entities, and any other reachable entities that are
                    not already being tracked, in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state such that they will
                    be inserted into the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
                </para>
                <para>
                    This method is async only to allow special value generators, such as the one used by
                    'Microsoft.EntityFrameworkCore.Metadata.SqlServerValueGenerationStrategy.SequenceHiLo',
                    to access the database asynchronously. For all other cases the non async method should be used.
                </para>
            </summary>
            <param name="entities"> The entities to add. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns> A task that represents the asynchronous operation. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                <para>
                    Begins tracking the given entities in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged" /> state 
                    such that no operation will be performed when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> 
                    is called.
                </para>
                <para>
                    A recursive search of the navigation properties will be performed to find reachable entities
                    that are not already being tracked by the context. These entities will also begin to be tracked 
                    by the context. If a reachable entity has its primary key value set
                    then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged" /> state. If the primary key
                    value is not set then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state. 
                    An entity is considered to have its primary key value set if the primary key property is set 
                    to anything other than the CLR default for the property type.
                </para>
            </summary>
            <param name="entities"> The entities to attach. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbSet`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Begins tracking the given entity in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Deleted" /> state such that it will
                be removed from the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
            </summary>
            <remarks>
                <para>
                    If any of the entities are already tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state then the context will
                    stop tracking those entities (rather than marking them as <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Deleted" />) since those
                    entities were previously added to the context and do not exist in the database.
                </para>
                <para>
                    Any other reachable entities that are not already being tracked will be tracked in the same way that
                    they would be if <see cref="M:Microsoft.EntityFrameworkCore.DbSet`1.AttachRange(System.Collections.Generic.IEnumerable{`0})" /> was called before calling this method.
                    This allows any cascading actions to be applied when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
                </para>
            </remarks>
            <param name="entities"> The entities to remove. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbSet`1.UpdateRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                <para>
                    Begins tracking the given entities in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Modified" /> state such that they will
                    be updated in the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
                </para>
                <para>
                    All properties of each entity will be marked as modified. To mark only some properties as modified, use
                    <see cref="M:Microsoft.EntityFrameworkCore.DbSet`1.Attach(`0)" /> to begin tracking each entity in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged" />
                    state and then use the returned <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" /> to mark the desired properties as modified.
                </para>
                <para>
                    A recursive search of the navigation properties will be performed to find reachable entities
                    that are not already being tracked by the context. These entities will also begin to be tracked 
                    by the context. If a reachable entity has its primary key value set
                    then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Modified" /> state. If the primary key
                    value is not set then it will be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state. 
                    An entity is considered to have its primary key value set if the primary key property is set 
                    to anything other than the CLR default for the property type.
                </para>
            </summary>
            <param name="entities"> The entities to update. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbSet`1.System#Collections#Generic#IEnumerable{TEntity}#GetEnumerator">
            <summary>
                Returns an <see cref="T:System.Collections.Generic.IEnumerator`1" /> which when enumerated will execute a query against the database
                to load all entities from the database.
            </summary>
            <returns> The query results. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbSet`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
                Returns an <see cref="T:System.Collections.IEnumerator" /> which when enumerated will execute a query against the database
                to load all entities from the database.
            </summary>
            <returns> The query results. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.DbSet`1.Microsoft#EntityFrameworkCore#Query#Internal#IAsyncEnumerableAccessor{TEntity}#AsyncEnumerable">
            <summary>
                Returns an <see cref="T:System.Collections.Generic.IAsyncEnumerable`1" /> which when enumerated will asynchronously execute the query against
                the database.
            </summary>
            <returns> The query results. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.DbSet`1.System#Linq#IQueryable#ElementType">
            <summary>
                Gets the IQueryable element type.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.DbSet`1.System#Linq#IQueryable#Expression">
            <summary>
                Gets the IQueryable LINQ Expression.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.DbSet`1.System#Linq#IQueryable#Provider">
            <summary>
                Gets the IQueryable provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.DbSet`1.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance">
            <summary>
                <para>
                    Gets the scoped <see cref="T:System.IServiceProvider" /> being used to resolve services.
                </para>
                <para>
                    This property is intended for use by extension methods that need to make use of services
                    not directly exposed in the public API surface.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbSet`1.System#ComponentModel#IListSource#GetList">
            <summary>
                <para>
                    This method is called by data binding frameworks when attempting to data bind directly to a <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" />.
                </para>
                <para>
                    This implementation always throws an exception as binding directly to a <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> will result in a query being
                    sent to the database every time the data binding framework requests the contents of the collection. Instead materialize the results
                    into a collection, by calling a method such as <see cref="M:System.Linq.Enumerable.ToList``1(System.Collections.Generic.IEnumerable{``0})" /> or
                    <see cref="M:System.Linq.Enumerable.ToArray``1(System.Collections.Generic.IEnumerable{``0})" />, and bind to the collection.
                </para>
            </summary>
            <exception cref="T:System.NotSupportedException"> Always thrown. </exception>
            <returns> Never returns, always throws an exception. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.DbSet`1.System#ComponentModel#IListSource#ContainsListCollection">
            <summary>
                Gets a value indicating whether the collection is a collection of System.Collections.IList objects.
                Always returns false.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException">
            <summary>
                An exception that is thrown when a concurrency violation is encountered while saving to the database. A concurrency violation
                occurs when an unexpected number of rows are affected during save. This is usually because the data in the database has
                been modified since it was loaded into memory.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException" /> class.
            </summary>
            <param name="message"> The error message that explains the reason for the exception. </param>
            <param name="entries"> The entries that were involved in the concurrency violation. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.DbUpdateException">
            <summary>
                An exception that is thrown when an error is encountered while saving to the database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbUpdateException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.DbUpdateException" /> class.
            </summary>
            <param name="message"> The error message that explains the reason for the exception. </param>
            <param name="innerException"> The exception that is the cause of the current exception. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbUpdateException.#ctor(System.String,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.DbUpdateException" /> class.
            </summary>
            <param name="message"> The error message that explains the reason for the exception. </param>
            <param name="entries"> The entries that were involved in the error. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.DbUpdateException.#ctor(System.String,System.Exception,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.DbUpdateException" /> class.
            </summary>
            <param name="message"> The error message that explains the reason for the exception. </param>
            <param name="entries"> The entries that were involved in the error. </param>
            <param name="innerException"> The exception that is the cause of the current exception. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.DbUpdateException.Entries">
            <summary>
                Gets the entries that were involved in the error. Typically this is a single entry, but in some cases it
                may be zero or multiple entries.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.EF">
            <summary>
                Static methods that are useful in application code where there is not an EF type for the method to be accessed from. For example,
                referencing a shadow state property in a LINQ query.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EF.Property``1(System.Object,System.String)">
            <summary>
                Addresses a given property on an entity instance. This is useful when you want to reference a shadow state property in a
                LINQ query. Currently this method can only be used in LINQ queries and can not be used to access the value assigned to a
                property in other scenarios.
            </summary>
            <example>
                The following code performs a filter using the a LastUpdated shadow state property.
                <code>
                    var blogs = context.Blogs
                        .Where(b =&gt; EF.Property&lt;DateTime&gt;(b, "LastUpdated") > DateTime.Now.AddDays(-5))
                </code>
            </example>
            <typeparam name="TProperty"> The type of the property being referenced. </typeparam>
            <param name="entity"> The entity to access the property on. </param>
            <param name="propertyName"> The name of the property. </param>
            <returns> The value assigned to the property. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions">
            <summary>
                Entity Framework LINQ related extension methods.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
                Asynchronously determines whether a sequence contains any elements.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to check for being empty.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains <c>true</c> if the source sequence contains any elements; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AnyAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously determines whether any element of a sequence satisfies a condition.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> whose elements to test for a condition.
            </param>
            <param name="predicate"> A function to test each element for a condition. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains <c>true</c> if any elements in the source sequence pass the test in the specified
                predicate; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AllAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously determines whether all the elements of a sequence satisfy a condition.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> whose elements to test for a condition.
            </param>
            <param name="predicate"> A function to test each element for a condition. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains <c>true</c> if every element of the source sequence passes the test in the specified
                predicate; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
                Asynchronously returns the number of elements in a sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the number of elements in the input sequence.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.CountAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously returns the number of elements in a sequence that satisfy a condition.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.
            </param>
            <param name="predicate"> A function to test each element for a condition. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the number of elements in the sequence that satisfy the condition in the predicate
                function.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
                Asynchronously returns an <see cref="T:System.Int64" /> that represents the total number of elements in a sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the number of elements in the input sequence.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LongCountAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously returns an <see cref="T:System.Int64" /> that represents the number of elements in a sequence
                that satisfy a condition.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to be counted.
            </param>
            <param name="predicate"> A function to test each element for a condition. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the number of elements in the sequence that satisfy the condition in the predicate
                function.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
                Asynchronously returns the first element of a sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to return the first element of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the first element in <paramref name="source" />.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously returns the first element of a sequence that satisfies a specified condition.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to return the first element of.
            </param>
            <param name="predicate"> A function to test each element for a condition. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the first element in <paramref name="source" /> that passes the test in
                <paramref name="predicate" />.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
                Asynchronously returns the first element of a sequence, or a default value if the sequence contains no elements.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to return the first element of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains <c>default</c> ( <typeparamref name="TSource" /> ) if
                <paramref name="source" /> is empty; otherwise, the first element in <paramref name="source" />.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.FirstOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously returns the first element of a sequence that satisfies a specified condition
                or a default value if no such element is found.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to return the first element of.
            </param>
            <param name="predicate"> A function to test each element for a condition. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains <c>default</c> ( <typeparamref name="TSource" /> ) if <paramref name="source" />
                is empty or if no element passes the test specified by <paramref name="predicate" /> ; otherwise, the first
                element in <paramref name="source" /> that passes the test specified by <paramref name="predicate" />.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
                Asynchronously returns the last element of a sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to return the last element of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the last element in <paramref name="source" />.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously returns the last element of a sequence that satisfies a specified condition.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to return the last element of.
            </param>
            <param name="predicate"> A function to test each element for a condition. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the last element in <paramref name="source" /> that passes the test in
                <paramref name="predicate" />.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
                Asynchronously returns the last element of a sequence, or a default value if the sequence contains no elements.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to return the last element of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains <c>default</c> ( <typeparamref name="TSource" /> ) if
                <paramref name="source" /> is empty; otherwise, the last element in <paramref name="source" />.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LastOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously returns the last element of a sequence that satisfies a specified condition
                or a default value if no such element is found.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to return the last element of.
            </param>
            <param name="predicate"> A function to test each element for a condition. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains <c>default</c> ( <typeparamref name="TSource" /> ) if <paramref name="source" />
                is empty or if no element passes the test specified by <paramref name="predicate" /> ; otherwise, the last
                element in <paramref name="source" /> that passes the test specified by <paramref name="predicate" />.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
                Asynchronously returns the only element of a sequence, and throws an exception
                if there is not exactly one element in the sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to return the single element of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the single element of the input sequence.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously returns the only element of a sequence that satisfies a specified condition,
                and throws an exception if more than one such element exists.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to return the single element of.
            </param>
            <param name="predicate"> A function to test an element for a condition. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the single element of the input sequence that satisfies the condition in
                <paramref name="predicate" />.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
                Asynchronously returns the only element of a sequence, or a default value if the sequence is empty;
                this method throws an exception if there is more than one element in the sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to return the single element of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the single element of the input sequence, or <c>default</c> (
                <typeparamref name="TSource" />)
                if the sequence contains no elements.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SingleOrDefaultAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Boolean}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously returns the only element of a sequence that satisfies a specified condition or
                a default value if no such element exists; this method throws an exception if more than one element
                satisfies the condition.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to return the single element of.
            </param>
            <param name="predicate"> A function to test an element for a condition. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the single element of the input sequence that satisfies the condition in
                <paramref name="predicate" />, or <c>default</c> ( <typeparamref name="TSource" /> ) if no such element is found.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
                Asynchronously returns the minimum value of a sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to determine the minimum of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the minimum value in the sequence.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MinAsync``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously invokes a projection function on each element of a sequence and returns the minimum resulting value.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <typeparam name="TResult">
                The type of the value returned by the function represented by <paramref name="selector" /> .
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to determine the minimum of.
            </param>
            <param name="selector"> A projection function to apply to each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the minimum value in the sequence.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
                Asynchronously returns the maximum value of a sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to determine the maximum of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the maximum value in the sequence.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.MaxAsync``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously invokes a projection function on each element of a sequence and returns the maximum resulting value.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <typeparam name="TResult">
                The type of the value returned by the function represented by <paramref name="selector" /> .
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> that contains the elements to determine the maximum of.
            </param>
            <param name="selector"> A projection function to apply to each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the maximum value in the sequence.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(System.Linq.IQueryable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the sum of a sequence of values.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values to calculate the sum of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the sum of the values in the sequence.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(System.Linq.IQueryable{System.Nullable{System.Decimal}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the sum of a sequence of values.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values to calculate the sum of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the sum of the values in the sequence.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the sum of the sequence of values that is obtained by invoking a projection function on
                each element of the input sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values of type <typeparamref name="TSource" />.
            </param>
            <param name="selector"> A projection function to apply to each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the sum of the projected values..
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the sum of the sequence of values that is obtained by invoking a projection function on
                each element of the input sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values of type <typeparamref name="TSource" />.
            </param>
            <param name="selector"> A projection function to apply to each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the sum of the projected values..
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(System.Linq.IQueryable{System.Int32},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the sum of a sequence of values.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values to calculate the sum of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the sum of the values in the sequence.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(System.Linq.IQueryable{System.Nullable{System.Int32}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the sum of a sequence of values.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values to calculate the sum of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the sum of the values in the sequence.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the sum of the sequence of values that is obtained by invoking a projection function on
                each element of the input sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values of type <typeparamref name="TSource" />.
            </param>
            <param name="selector"> A projection function to apply to each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the sum of the projected values..
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the sum of the sequence of values that is obtained by invoking a projection function on
                each element of the input sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values of type <typeparamref name="TSource" />.
            </param>
            <param name="selector"> A projection function to apply to each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the sum of the projected values..
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(System.Linq.IQueryable{System.Int64},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the sum of a sequence of values.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values to calculate the sum of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the sum of the values in the sequence.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(System.Linq.IQueryable{System.Nullable{System.Int64}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the sum of a sequence of values.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values to calculate the sum of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the sum of the values in the sequence.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the sum of the sequence of values that is obtained by invoking a projection function on
                each element of the input sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values of type <typeparamref name="TSource" />.
            </param>
            <param name="selector"> A projection function to apply to each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the sum of the projected values..
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the sum of the sequence of values that is obtained by invoking a projection function on
                each element of the input sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values of type <typeparamref name="TSource" />.
            </param>
            <param name="selector"> A projection function to apply to each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the sum of the projected values..
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(System.Linq.IQueryable{System.Double},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the sum of a sequence of values.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values to calculate the sum of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the sum of the values in the sequence.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(System.Linq.IQueryable{System.Nullable{System.Double}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the sum of a sequence of values.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values to calculate the sum of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the sum of the values in the sequence.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the sum of the sequence of values that is obtained by invoking a projection function on
                each element of the input sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values of type <typeparamref name="TSource" />.
            </param>
            <param name="selector"> A projection function to apply to each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the sum of the projected values..
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the sum of the sequence of values that is obtained by invoking a projection function on
                each element of the input sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values of type <typeparamref name="TSource" />.
            </param>
            <param name="selector"> A projection function to apply to each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the sum of the projected values..
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(System.Linq.IQueryable{System.Single},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the sum of a sequence of values.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values to calculate the sum of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the sum of the values in the sequence.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync(System.Linq.IQueryable{System.Nullable{System.Single}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the sum of a sequence of values.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values to calculate the sum of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the sum of the values in the sequence.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the sum of the sequence of values that is obtained by invoking a projection function on
                each element of the input sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values of type <typeparamref name="TSource" />.
            </param>
            <param name="selector"> A projection function to apply to each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the sum of the projected values..
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.SumAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the sum of the sequence of values that is obtained by invoking a projection function on
                each element of the input sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values of type <typeparamref name="TSource" />.
            </param>
            <param name="selector"> A projection function to apply to each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the sum of the projected values..
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Decimal},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the average of a sequence of values.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values to calculate the average of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the average of the sequence of values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Nullable{System.Decimal}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the average of a sequence of values.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values to calculate the average of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the average of the sequence of values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Decimal}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the average of a sequence of values that is obtained
                by invoking a projection function on each element of the input sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" /> .
            </typeparam>
            <param name="source"> A sequence of values of type <typeparamref name="TSource" />. </param>
            <param name="selector"> A projection function to apply to each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the average of the projected values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Decimal}}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the average of a sequence of values that is obtained
                by invoking a projection function on each element of the input sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" /> .
            </typeparam>
            <param name="source"> A sequence of values of type <typeparamref name="TSource" />. </param>
            <param name="selector"> A projection function to apply to each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the average of the projected values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Int32},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the average of a sequence of values.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values to calculate the average of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the average of the sequence of values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Nullable{System.Int32}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the average of a sequence of values.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values to calculate the average of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the average of the sequence of values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int32}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the average of a sequence of values that is obtained
                by invoking a projection function on each element of the input sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" /> .
            </typeparam>
            <param name="source"> A sequence of values of type <typeparamref name="TSource" />. </param>
            <param name="selector"> A projection function to apply to each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the average of the projected values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int32}}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the average of a sequence of values that is obtained
                by invoking a projection function on each element of the input sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" /> .
            </typeparam>
            <param name="source"> A sequence of values of type <typeparamref name="TSource" />. </param>
            <param name="selector"> A projection function to apply to each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the average of the projected values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Int64},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the average of a sequence of values.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values to calculate the average of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the average of the sequence of values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Nullable{System.Int64}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the average of a sequence of values.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values to calculate the average of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the average of the sequence of values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Int64}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the average of a sequence of values that is obtained
                by invoking a projection function on each element of the input sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" /> .
            </typeparam>
            <param name="source"> A sequence of values of type <typeparamref name="TSource" />. </param>
            <param name="selector"> A projection function to apply to each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the average of the projected values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Int64}}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the average of a sequence of values that is obtained
                by invoking a projection function on each element of the input sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" /> .
            </typeparam>
            <param name="source"> A sequence of values of type <typeparamref name="TSource" />. </param>
            <param name="selector"> A projection function to apply to each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the average of the projected values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Double},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the average of a sequence of values.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values to calculate the average of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the average of the sequence of values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Nullable{System.Double}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the average of a sequence of values.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values to calculate the average of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the average of the sequence of values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Double}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the average of a sequence of values that is obtained
                by invoking a projection function on each element of the input sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" /> .
            </typeparam>
            <param name="source"> A sequence of values of type <typeparamref name="TSource" />. </param>
            <param name="selector"> A projection function to apply to each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the average of the projected values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Double}}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the average of a sequence of values that is obtained
                by invoking a projection function on each element of the input sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" /> .
            </typeparam>
            <param name="source"> A sequence of values of type <typeparamref name="TSource" />. </param>
            <param name="selector"> A projection function to apply to each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the average of the projected values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Single},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the average of a sequence of values.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values to calculate the average of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the average of the sequence of values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync(System.Linq.IQueryable{System.Nullable{System.Single}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the average of a sequence of values.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <param name="source">
                A sequence of values to calculate the average of.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the average of the sequence of values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Single}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the average of a sequence of values that is obtained
                by invoking a projection function on each element of the input sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" /> .
            </typeparam>
            <param name="source"> A sequence of values of type <typeparamref name="TSource" />. </param>
            <param name="selector"> A projection function to apply to each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the average of the projected values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AverageAsync``1(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,System.Nullable{System.Single}}},System.Threading.CancellationToken)">
            <summary>
                Asynchronously computes the average of a sequence of values that is obtained
                by invoking a projection function on each element of the input sequence.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" /> .
            </typeparam>
            <param name="source"> A sequence of values of type <typeparamref name="TSource" />. </param>
            <param name="selector"> A projection function to apply to each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains the average of the projected values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ContainsAsync``1(System.Linq.IQueryable{``0},``0,System.Threading.CancellationToken)">
            <summary>
                Asynchronously determines whether a sequence contains a specified element by using the default equality comparer.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to return the single element of.
            </param>
            <param name="item"> The object to locate in the sequence. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains <c>true</c> if the input sequence contains the specified value; otherwise, <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToListAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
                Asynchronously creates a <see cref="T:System.Collections.Generic.List`1" /> from an <see cref="T:System.Linq.IQueryable`1" /> by enumerating it
                asynchronously.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to create a list from.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains a <see cref="T:System.Collections.Generic.List`1" /> that contains elements from the input sequence.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToArrayAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
                Asynchronously creates an array from an <see cref="T:System.Linq.IQueryable`1" /> by enumerating it asynchronously.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to create an array from.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains an array that contains elements from the input sequence.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})">
            <summary>
                Specifies related entities to include in the query results. The navigation property to be included is specified starting with the
                type of entity being queried (<typeparamref name="TEntity" />). If you wish to include additional types based on the navigation
                properties of the type being included, then chain a call to
                <see
                    cref="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ThenInclude``3(Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``0,System.Collections.Generic.IEnumerable{``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})" />
                after this call.
            </summary>
            <example>
                <para>
                    The following query shows including a single level of related entities.
                    <code>
                        context.Blogs.Include(blog => blog.Posts);
                    </code>
                </para>
                <para>
                    The following query shows including two levels of entities on the same branch.
                    <code>
                        context.Blogs
                            .Include(blog => blog.Posts).ThenInclude(post => post.Tags);
                    </code>
                </para>
                <para>
                    The following query shows including multiple levels and branches of related data.
                    <code>
                        context.Blogs
                            .Include(blog => blog.Posts).ThenInclude(post => post.Tags).ThenInclude(tag => tag.TagInfo)
                            .Include(blog => blog.Contributors);
                    </code>
                </para>
            </example>
            <typeparam name="TEntity"> The type of entity being queried. </typeparam>
            <typeparam name="TProperty"> The type of the related entity to be included. </typeparam>
            <param name="source"> The source query. </param>
            <param name="navigationPropertyPath">
                A lambda expression representing the navigation property to be included (<c>t => t.Property1</c>).
            </param>
            <returns>
                A new query with the related data included.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ThenInclude``3(Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``0,System.Collections.Generic.IEnumerable{``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
            <summary>
                Specifies additional related data to be further included based on a related type that was just included.
            </summary>
            <example>
                <para>
                    The following query shows including a single level of related entities.
                    <code>
                        context.Blogs.Include(blog => blog.Posts);
                    </code>
                </para>
                <para>
                    The following query shows including two levels of entities on the same branch.
                    <code>
                        context.Blogs
                            .Include(blog => blog.Posts).ThenInclude(post => post.Tags);
                    </code>
                </para>
                <para>
                    The following query shows including multiple levels and branches of related data.
                    <code>
                        context.Blogs
                            .Include(blog => blog.Posts).ThenInclude(post => post.Tags).ThenInclude(tag => tag.TagInfo)
                            .Include(blog => blog.Contributors);
                    </code>
                </para>
            </example>
            <typeparam name="TEntity"> The type of entity being queried. </typeparam>
            <typeparam name="TPreviousProperty"> The type of the entity that was just included. </typeparam>
            <typeparam name="TProperty"> The type of the related entity to be included. </typeparam>
            <param name="source"> The source query. </param>
            <param name="navigationPropertyPath">
                A lambda expression representing the navigation property to be included (<c>t => t.Property1</c>).
            </param>
            <returns>
                A new query with the related data included.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ThenInclude``3(Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``0,System.Collections.Generic.ICollection{``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
            <summary>
                This method exists only for binary compatibility and is obsolete. Use
                <see
                    cref="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ThenInclude``3(Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``0,System.Collections.Generic.IEnumerable{``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})" />
                instead.
            </summary>
            <typeparam name="TEntity"> The type of entity being queried. </typeparam>
            <typeparam name="TPreviousProperty"> The type of the entity that was just included. </typeparam>
            <typeparam name="TProperty"> The type of the related entity to be included. </typeparam>
            <param name="source"> The source query. </param>
            <param name="navigationPropertyPath">
                A lambda expression representing the navigation property to be included (<c>t => t.Property1</c>).
            </param>
            <returns>
                A new query with the related data included.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ThenInclude``3(Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``0,``1},System.Linq.Expressions.Expression{System.Func{``1,``2}})">
            <summary>
                Specifies additional related data to be further included based on a related type that was just included.
            </summary>
            <example>
                <para>
                    The following query shows including a single level of related entities.
                    <code>
                        context.Blogs.Include(blog => blog.Posts);
                    </code>
                </para>
                <para>
                    The following query shows including two levels of entities on the same branch.
                    <code>
                        context.Blogs
                            .Include(blog => blog.Posts).ThenInclude(post => post.Tags);
                    </code>
                </para>
                <para>
                    The following query shows including multiple levels and branches of related data.
                    <code>
                        context.Blogs
                            .Include(blog => blog.Posts).ThenInclude(post => post.Tags).ThenInclude(tag => tag.TagInfo)
                            .Include(blog => blog.Contributors);
                    </code>
                </para>
            </example>
            <typeparam name="TEntity"> The type of entity being queried. </typeparam>
            <typeparam name="TPreviousProperty"> The type of the entity that was just included. </typeparam>
            <typeparam name="TProperty"> The type of the related entity to be included. </typeparam>
            <param name="source"> The source query. </param>
            <param name="navigationPropertyPath">
                A lambda expression representing the navigation property to be included (<c>t => t.Property1</c>).
            </param>
            <returns>
                A new query with the related data included.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``1(System.Linq.IQueryable{``0},System.String)">
            <summary>
                Specifies related entities to include in the query results. The navigation property to be included is
                specified starting with the type of entity being queried (<typeparamref name="TEntity" />). Further
                navigation properties to be included can be appended, separated by the '.' character.
            </summary>
            <example>
                <para>
                    The following query shows including a single level of related entities.
                    <code>
                        context.Blogs.Include("Posts");
                    </code>
                </para>
                <para>
                    The following query shows including two levels of entities on the same branch.
                    <code>
                        context.Blogs.Include("Posts.Tags");
                    </code>
                </para>
                <para>
                    The following query shows including multiple levels and branches of related data.
                    <code>
                        context.Blogs
                            .Include("Posts.Tags.TagInfo')
                            .Include("Contributors");
                    </code>
                </para>
            </example>
            <typeparam name="TEntity"> The type of entity being queried. </typeparam>
            <param name="source"> The source query. </param>
            <param name="navigationPropertyPath"> A string of '.' separated navigation property names to be included.  </param>
            <returns> A new query with the related data included. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking``1(System.Linq.IQueryable{``0})">
            <summary>
                <para>
                    Returns a new query where the change tracker will not track any of the entities that are returned.
                    If the entity instances are modified, this will not be detected by the change tracker and
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> will not persist those changes to the database.
                </para>
                <para>
                    Disabling change tracking is useful for read-only scenarios because it avoids the overhead of setting
                    up change tracking for each entity instance. You should not disable change tracking if you want to
                    manipulate entity instances and persist those changes to the database using
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" />.
                </para>
                <para>
                    Identity resolution will still be performed to ensure that all occurrences of an entity with a given key
                    in the result set are represented by the same entity instance.
                </para>
                <para>
                    The default tracking behavior for queries can be controlled by <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.QueryTrackingBehavior" />.
                </para>
            </summary>
            <typeparam name="TEntity"> The type of entity being queried. </typeparam>
            <param name="source"> The source query. </param>
            <returns>
                A new query where the result set will not be tracked by the context.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking``1(System.Linq.IQueryable{``0})">
            <summary>
                <para>
                    Returns a new query where the change tracker will keep track of changes for all entities that are returned.
                    Any modification to the entity instances will be detected and persisted to the database during
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" />.
                </para>
                <para>
                    The default tracking behavior for queries can be controlled by <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.QueryTrackingBehavior" />.
                </para>
            </summary>
            <typeparam name="TEntity"> The type of entity being queried. </typeparam>
            <param name="source"> The source query. </param>
            <returns>
                A new query where the result set will not be tracked by the context.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Load``1(System.Linq.IQueryable{``0})">
            <summary>
                Enumerates the query. When using Entity Framework, this causes the results of the query to
                be loaded into the associated context. This is equivalent to calling ToList
                and then throwing away the list (without the overhead of actually creating the list).
            </summary>
            <param name="source"> The source query. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.LoadAsync``1(System.Linq.IQueryable{``0},System.Threading.CancellationToken)">
            <summary>
                Asynchronously enumerates the query. When using Entity Framework, this causes the results of the query to
                be loaded into the associated context. This is equivalent to calling ToList
                and then throwing away the list (without the overhead of actually creating the list).
            </summary>
            <param name="source"> The source query. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns> A task that represents the asynchronous operation. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Threading.CancellationToken)">
            <summary>
                Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> from an <see cref="T:System.Linq.IQueryable`1" /> by enumerating it
                asynchronously
                according to a specified key selector function.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <typeparam name="TKey">
                The type of the key returned by <paramref name="keySelector" /> .
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to create a <see cref="T:System.Collections.Generic.Dictionary`2" /> from.
            </param>
            <param name="keySelector"> A function to extract a key from each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains a <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains selected keys and values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``2(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)">
            <summary>
                Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> from an <see cref="T:System.Linq.IQueryable`1" /> by enumerating it
                asynchronously
                according to a specified key selector function and a comparer.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <typeparam name="TKey">
                The type of the key returned by <paramref name="keySelector" /> .
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to create a <see cref="T:System.Collections.Generic.Dictionary`2" /> from.
            </param>
            <param name="keySelector"> A function to extract a key from each element. </param>
            <param name="comparer">
                An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains a <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains selected keys and values.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Threading.CancellationToken)">
            <summary>
                Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> from an <see cref="T:System.Linq.IQueryable`1" /> by enumerating it
                asynchronously
                according to a specified key selector and an element selector function.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <typeparam name="TKey">
                The type of the key returned by <paramref name="keySelector" /> .
            </typeparam>
            <typeparam name="TElement">
                The type of the value returned by <paramref name="elementSelector" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to create a <see cref="T:System.Collections.Generic.Dictionary`2" /> from.
            </param>
            <param name="keySelector"> A function to extract a key from each element. </param>
            <param name="elementSelector"> A transform function to produce a result element value from each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains a <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains values of type
                <typeparamref name="TElement" /> selected from the input sequence.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ToDictionaryAsync``3(System.Linq.IQueryable{``0},System.Func{``0,``1},System.Func{``0,``2},System.Collections.Generic.IEqualityComparer{``1},System.Threading.CancellationToken)">
            <summary>
                Creates a <see cref="T:System.Collections.Generic.Dictionary`2" /> from an <see cref="T:System.Linq.IQueryable`1" /> by enumerating it
                asynchronously
                according to a specified key selector function, a comparer, and an element selector function.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="TSource">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <typeparam name="TKey">
                The type of the key returned by <paramref name="keySelector" /> .
            </typeparam>
            <typeparam name="TElement">
                The type of the value returned by <paramref name="elementSelector" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to create a <see cref="T:System.Collections.Generic.Dictionary`2" /> from.
            </param>
            <param name="keySelector"> A function to extract a key from each element. </param>
            <param name="elementSelector"> A transform function to produce a result element value from each element. </param>
            <param name="comparer">
                An <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> to compare keys.
            </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
                The task result contains a <see cref="T:System.Collections.Generic.Dictionary`2" /> that contains values of type
                <typeparamref name="TElement" /> selected from the input sequence.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ForEachAsync``1(System.Linq.IQueryable{``0},System.Action{``0},System.Threading.CancellationToken)">
            <summary>
                Asynchronously enumerates the query results and performs the specified action on each element.
            </summary>
            <remarks>
                Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                that any asynchronous operations have completed before calling another method on this context.
            </remarks>
            <typeparam name="T">
                The type of the elements of <paramref name="source" />.
            </typeparam>
            <param name="source">
                An <see cref="T:System.Linq.IQueryable`1" /> to enumerate.
            </param>
            <param name="action"> The action to perform on each element. </param>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns> A task that represents the asynchronous operation. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.EntityState">
            <summary>
                The state in which an entity is being tracked by a context.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.EntityState.Detached">
            <summary>
                The entity is not being tracked by the context.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged">
            <summary>
                The entity is being tracked by the context and exists in the database. Its property
                values have not changed from the values in the database.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.EntityState.Deleted">
            <summary>
                The entity is being tracked by the context and exists in the database. It has been marked
                for deletion from the database.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.EntityState.Modified">
            <summary>
                The entity is being tracked by the context and exists in the database. Some or all of its
                property values have been modified.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.EntityState.Added">
            <summary>
                The entity is being tracked by the context but does not yet exist in the database.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ModelBuilder">
            <summary>
                <para>
                    Provides a simple API surface for configuring a <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableModel" /> that defines the shape of your
                    entities, the relationships between them, and how they map to the database.
                </para>
                <para>
                    You can use <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> to construct a model for a context by overriding
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)" /> on your derived context. Alternatively you can create the
                    model externally and set it on a <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions" /> instance that is passed to the context constructor.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ModelBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> class that will
                apply a set of conventions.
            </summary>
            <param name="conventions"> The conventions to be applied to the model. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ModelBuilder.Model">
            <summary>
                The model being configured.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ModelBuilder.HasAnnotation(System.String,System.Object)">
            <summary>
                Adds or updates an annotation on the model. If an annotation with the key specified in
                <paramref name="annotation" /> already exists it's value will be updated.
            </summary>
            <param name="annotation"> The key of the annotation to be added or updated. </param>
            <param name="value"> The value to be stored in the annotation. </param>
            <returns> The same <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ModelBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalModelBuilder}#Instance">
            <summary>
                <para>
                    The internal <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> being used to configure this model.
                </para>
                <para>
                    This property is intended for use by extension methods to configure the model. It is not intended to be used in
                    application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity``1">
            <summary>
                Returns an object that can be used to configure a given entity type in the model.
                If the entity type is not already part of the model, it will be added to the model.
            </summary>
            <typeparam name="TEntity"> The entity type to be configured. </typeparam>
            <returns> An object that can be used to configure the entity type. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.Type)">
            <summary>
                Returns an object that can be used to configure a given entity type in the model.
                If the entity type is not already part of the model, it will be added to the model.
            </summary>
            <param name="type"> The entity type to be configured. </param>
            <returns> An object that can be used to configure the entity type. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String)">
            <summary>
                Returns an object that can be used to configure a given entity type in the model.
                If an entity type with the provided name is not already part of the model,
                a new entity type that does not have a corresponding CLR type will be added to the model.
            </summary>
            <param name="name"> The name of the entity type to be configured. </param>
            <returns> An object that can be used to configure the entity type. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity``1(System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder{``0}})">
            <summary>
                <para>
                    Performs configuration of a given entity type in the model. If the entity type is not already part
                    of the model, it will be added to the model.
                </para>
                <para>
                    This overload allows configuration of the entity type to be done in line in the method call rather
                    than being chained after a call to <see cref="M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity``1" />. This allows additional
                    configuration at the model level to be chained after configuration for the entity type.
                </para>
            </summary>
            <typeparam name="TEntity"> The entity type to be configured. </typeparam>
            <param name="buildAction"> An action that performs configuration of the entity type. </param>
            <returns>
                The same <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> instance so that additional configuration calls can be chained.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.Type,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})">
            <summary>
                <para>
                    Performs configuration of a given entity type in the model. If the entity type is not already part
                    of the model, it will be added to the model.
                </para>
                <para>
                    This overload allows configuration of the entity type to be done in line in the method call rather
                    than being chained after a call to <see cref="M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity``1" />. This allows additional
                    configuration at the model level to be chained after configuration for the entity type.
                </para>
            </summary>
            <param name="type"> The entity type to be configured. </param>
            <param name="buildAction"> An action that performs configuration of the entity type. </param>
            <returns>
                The same <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> instance so that additional configuration calls can be chained.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String,System.Action{Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder})">
            <summary>
                <para>
                    Performs configuration of a given entity type in the model.
                    If an entity type with the provided name is not already part of the model,
                    a new entity type that does not have a corresponding CLR type will be added to the model.
                </para>
                <para>
                    This overload allows configuration of the entity type to be done in line in the method call rather
                    than being chained after a call to <see cref="M:Microsoft.EntityFrameworkCore.ModelBuilder.Entity(System.String)" />. This allows additional
                    configuration at the model level to be chained after configuration for the entity type.
                </para>
            </summary>
            <param name="name"> The name of the entity type to be configured. </param>
            <param name="buildAction"> An action that performs configuration of the entity type. </param>
            <returns>
                The same <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> instance so that additional configuration calls can be chained.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ModelBuilder.Ignore``1">
            <summary>
                Excludes the given entity type from the model. This method is typically used to remove types from
                the model that were added by convention.
            </summary>
            <typeparam name="TEntity"> The  entity type to be removed from the model. </typeparam>
            <returns>
                The same <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> instance so that additional configuration calls can be chained.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ModelBuilder.Ignore(System.Type)">
            <summary>
                Excludes the given entity type from the model. This method is typically used to remove types from
                the model that were added by convention.
            </summary>
            <param name="type"> The entity type to be removed from the model. </param>
            <returns>
                The same <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> instance so that additional configuration calls can be chained.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ModelBuilder.HasChangeTrackingStrategy(Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy)">
            <summary>
                Configures the default <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy" /> to be used for this model.
                This strategy indicates how the context detects changes to properties for an instance of an entity type.
            </summary>
            <param name="changeTrackingStrategy"> The change tracking strategy to be used. </param>
            <returns>
                The same <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> instance so that additional configuration calls can be chained.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ModelBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)">
            <summary>
                <para>
                    Sets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" /> to use for all properties of this entity type.
                </para>
                <para>
                    By default, the backing field, if one is found by convention or has been specified, is used when
                    new objects are constructed, typically when entities are queried from the database.
                    Properties are used for all other accesses.  Calling this method witll change that behavior
                    for all properties in the model as described in the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" /> enum.
                </para>
            </summary>
            <param name="propertyAccessMode"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" /> to use for properties of this model. </param>
            <returns>
                The same <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> instance so that additional configuration calls can be chained.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.QueryTrackingBehavior">
            <summary>
                Indicates how the results of a query are tracked by the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" />.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.QueryTrackingBehavior.TrackAll">
            <summary>
                The change tracker will keep track of changes for all entities that are returned from a LINQ query.
                Any modification to the entity instances will be detected and persisted to the database during
                <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" />.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.QueryTrackingBehavior.NoTracking">
            <summary>
                <para>
                    The change tracker will not track any of the entities that are returned from a LINQ query. If the
                    entity instances are modified, this will not be detected by the change tracker and
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> will not persist those changes to the database.
                </para>
                <para>
                    Disabling change tracking is useful for read-only scenarios because it avoids the overhead of setting
                    up change tracking for each entity instance. You should not disable change tracking if you want to
                    manipulate entity instances and persist those changes to the database using
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" />.
                </para>
                <para>
                    Identity resolution will still be performed to ensure that all occurrences of an entity with a given key
                    in the result set are represented by the same entity instance.
                </para>
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.WarningBehavior">
            <summary>
                The runtime behavior of warnings generated by Entity Framework
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.WarningBehavior.Log">
            <summary>
                A warning is logged.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.WarningBehavior.Ignore">
            <summary>
                No action is taken.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.WarningBehavior.Throw">
            <summary>
                An exception is thrown.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker">
            <summary>
                Provides access to change tracking information and operations for entity instances the context is tracking.
                Instances of this class are typically obtained from <see cref="P:Microsoft.EntityFrameworkCore.DbContext.ChangeTracker" /> and it is not designed
                to be directly constructed in your application code.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.#ctor(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled">
            <summary>
                <para>
                    Gets or sets a value indicating whether the <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges" /> method is called
                    automatically by methods of <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> and related classes.
                </para>
                <para>
                    The default value is true. This ensures the context is aware of any changes to tracked entity instances
                    before performing operations such as <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> or returning change tracking
                    information. If you disable automatic detect changes then you must ensure that
                    <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges" /> is called when entity instances have been modified.
                    Failure to do so may result in some changes not being persisted during
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> or out-of-date change tracking information being returned.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.QueryTrackingBehavior">
            <summary>
                <para>
                    Gets or sets the tracking behavior for LINQ queries run against the context. Disabling change tracking
                    is useful for read-only scenarios because it avoids the overhead of setting up change tracking for each
                    entity instance. You should not disable change tracking if you want to manipulate entity instances and
                    persist those changes to the database using <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" />.
                </para>
                <para>
                    This method sets the default behavior for the context, but you can override this behavior for individual
                    queries using the <see cref="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsNoTracking``1(System.Linq.IQueryable{``0})" />
                    and <see cref="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.AsTracking``1(System.Linq.IQueryable{``0})" /> methods.
                </para>
                <para>
                    The default value is <see cref="F:Microsoft.EntityFrameworkCore.QueryTrackingBehavior.TrackAll" />. This means the change tracker will
                    keep track of changes for all entities that are returned from a LINQ query.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Entries">
            <summary>
                Gets an <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" /> for each entity being tracked by the context.
                The entries provide access to change tracking information and operations for each entity.
            </summary>
            <returns> An entry for each entity being tracked. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Entries``1">
            <summary>
                Gets an <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" /> for all entities of a given type being tracked by the context.
                The entries provide access to change tracking information and operations for each entity.
            </summary>
            <typeparam name="TEntity"> The type of entities to get entries for. </typeparam>
            <returns> An entry for each entity of the given type that is being tracked. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.HasChanges">
            <summary>
                <para>
                    Checks if any new, deleted, or changed entities are being tracked
                    such that these changes will be sent to the database if <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" />
                    or <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChangesAsync(System.Threading.CancellationToken)" /> is called.
                </para>
                <para>
                    Note that this method calls <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges" /> unless
                    <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled" /> has been set to false.
                </para>
            </summary>
            <returns> True if there are changes to save, otherwise false. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#IStateManager}#Instance">
            <summary>
                <para>
                    Gets the internal state manager being used to store information about tracked entities.
                </para>
                <para>
                    This property is intended for use by extension methods. It is not intended to be used in
                    application code.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.Context">
            <summary>
                Gets the context this change tracker belongs to.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges">
            <summary>
                Scans the tracked entity instances to detect any changes made to the instance data. <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges" />
                is usually called automatically by the context when up-to-date information is required (before
                <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> and when returning change tracking information). You typically only need to
                call this method if you have disabled <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AutoDetectChangesEnabled" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.AcceptAllChanges">
            <summary>
                Accepts all changes made to entities in the context. It will be assumed that the tracked entities
                represent the current state of the database. This method is typically called by <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" />
                after changes have been successfully saved to the database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.TrackGraph(System.Object,System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode})">
            <summary>
                <para>
                    Begins tracking an entity and any entities that are reachable by traversing it's navigation properties.
                    Traversal is recursive so the navigation properties of any discovered entities will also be scanned.
                    The specified <paramref name="callback" /> is called for each discovered entity and must set the
                    <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State" /> that each entity should be tracked in. If no state is set, the entity
                    remains untracked.
                </para>
                <para>
                    This method is designed for use in disconnected scenarios where entities are retrieved using one instance of
                    the context and then changes are saved using a different instance of the context. An example of this is a
                    web service where one service call retrieves entities from the database and another service call persists
                    any changes to the entities. Each service call uses a new instance of the context that is disposed when the
                    call is complete.
                </para>
                <para>
                    If an entity is discovered that is already tracked by the context, that entity is not processed (and it's
                    navigation properties are not traversed).
                </para>
            </summary>
            <param name="rootEntity"> The entity to begin traversal from. </param>
            <param name="callback">
                An action to configure the change tracking information for each entity. For the entity to begin being tracked,
                the <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State" /> must be set.
            </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry">
            <summary>
                <para>
                    Provides access to change tracking and loading information for a collection
                    navigation property that associates this entity to a collection of another entities.
                </para>
                <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> API and it is
                    not designed to be directly constructed in your application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.CurrentValue">
            <summary>
                Gets or sets the value currently assigned to this property. If the current value is set using this property,
                the change tracker is aware of the change and <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges" /> is not required
                for the context to detect the change.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Load">
            <summary>
                <para>
                    Loads the entities referenced by this navigation property, unless <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded" />
                    is already set to true.
                </para>
                <para>
                    Note that entities that are already being tracked are not overwritten with new data from the database.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.LoadAsync(System.Threading.CancellationToken)">
            <summary>
                <para>
                    Loads entities referenced by this navigation property, unless <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded" />
                    is already set to true.
                </para>
                <para>
                    Note that entities that are already being tracked are not overwritten with new data from the database.
                </para>
                <para>
                    Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                    that any asynchronous operations have completed before calling another method on this context.
                </para>
            </summary>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous save operation.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Query">
            <summary>
                <para>
                    Returns the query that would be used by <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Load" /> to load entities referenced by
                    this navigation property.
                </para>
                <para>
                    The query can be composed over using LINQ to perform filtering, counting, etc. without
                    actually loading all entities from the database.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.EnsureInitialized">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry`2">
            <summary>
                <para>
                    Provides access to change tracking and loading information for a collection
                    navigation property that associates this entity to a collection of another entities.
                </para>
                <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> API and it is
                    not designed to be directly constructed in your application code.
                </para>
            </summary>
            <typeparam name="TEntity"> The type of the entity the property belongs to. </typeparam>
            <typeparam name="TProperty"> The type of the property. </typeparam>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry`2.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry`2.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry`2.EntityEntry">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1" /> to which this member belongs.
            </summary>
            <value> An entry for the entity that owns this member. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry`2.CurrentValue">
            <summary>
                Gets or sets the value currently assigned to this property. If the current value is set using this property,
                the change tracker is aware of the change and <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges" /> is not required
                for the context to detect the change.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry`2.Query">
            <summary>
                <para>
                    Returns the query that would be used by <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry.Load" /> to load entities referenced by
                    this navigation property.
                </para>
                <para>
                    The query can be composed over using LINQ to perform filtering, counting, etc. without
                    actually loading all entities from the database.
                </para>
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry">
            <summary>
                <para>
                    Provides access to change tracking information and operations for a given entity.
                </para>
                <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> API and it is
                    not designed to be directly constructed in your application code.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.InternalEntry">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Entity">
            <summary>
                Gets the entity being tracked by this entry.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.State">
            <summary>
                <para>
                    Gets or sets that state that this entity is being tracked in.
                </para>
                <para>
                    When setting the state, the entity will always end up in the specified state. For example, if you
                    change the state to <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Deleted" /> the entity will be marked for deletion regardless
                    of its current state. This is different than calling <see cref="M:Microsoft.EntityFrameworkCore.DbSet`1.Remove(`0)" /> where the entity
                    will be disconnected (rather than marked for deletion) if it is in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Context">
            <summary>
                Gets the context that is tracking the entity.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Metadata">
            <summary>
                Gets the metadata about the shape of the entity, its relationships to other entities, and how it maps to the database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Member(System.String)">
            <summary>
                Provides access to change tracking information and operations for a given
                property or navigation property of this entity.
            </summary>
            <param name="propertyName"> The property to access information and operations for. </param>
            <returns> An object that exposes change tracking information and operations for the given property. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Members">
            <summary>
                Provides access to change tracking information and operations for all
                properties and navigation properties of this entity.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Navigation(System.String)">
            <summary>
                Provides access to change tracking information and operations for a given
                navigation property of this entity.
            </summary>
            <param name="propertyName"> The property to access information and operations for. </param>
            <returns> An object that exposes change tracking information and operations for the given property. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Navigations">
            <summary>
                Provides access to change tracking information and operations for all
                navigation properties of this entity.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Property(System.String)">
            <summary>
                Provides access to change tracking information and operations for a given
                property of this entity.
            </summary>
            <param name="propertyName"> The property to access information and operations for. </param>
            <returns> An object that exposes change tracking information and operations for the given property. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Properties">
            <summary>
                Provides access to change tracking information and operations for all
                properties of this entity.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Reference(System.String)">
            <summary>
                Provides access to change tracking and loading information for a reference (i.e. non-collection)
                navigation property that associates this entity to another entity.
            </summary>
            <param name="propertyName"> The name of the navigation property. </param>
            <returns>
                An object that exposes change tracking information and operations for the
                given navigation property.
            </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.References">
            <summary>
                Provides access to change tracking information and loading information for all
                reference (i.e. non-collection) navigation properties of this entity.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Collection(System.String)">
            <summary>
                Provides access to change tracking and loading information for a collection
                navigation property that associates this entity to a collection of another entities.
            </summary>
            <param name="propertyName"> The name of the navigation property. </param>
            <returns>
                An object that exposes change tracking information and operations for the
                given navigation property.
            </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Collections">
            <summary>
                Provides access to change tracking information and loading information for all
                collection navigation properties of this entity.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.IsKeySet">
            <summary>
                Gets a value indicating if the key values of this entity have been assigned a value.
                False if one or more of the key properties is assigned null or the CLR default,
                otherwise true.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.CurrentValues">
            <summary>
                Gets the current property values for this entity.
            </summary>
            <value> The current values. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.OriginalValues">
            <summary>
                Gets the original property values for this entity. The original values are the property
                values as they were when the entity was retrieved from the database.
            </summary>
            <value> The original values. </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.GetDatabaseValues">
            <summary>
                <para>
                    Queries the database for copies of the values of the tracked entity as they currently
                    exist in the database. If the entity is not found in the database, then null is returned.
                </para>
                <para>
                    Note that changing the values in the returned dictionary will not update the values
                    in the database.
                </para>
            </summary>
            <returns> The store values, or null if the entity does not exist in the database. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.GetDatabaseValuesAsync(System.Threading.CancellationToken)">
            <summary>
                <para>
                    Queries the database for copies of the values of the tracked entity as they currently
                    exist in the database. If the entity is not found in the database, then null is returned.
                </para>
                <para>
                    Note that changing the values in the returned dictionary will not update the values
                    in the database.
                </para>
                <para>
                    Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                    that any asynchronous operations have completed before calling another method on this context.
                </para>
            </summary>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation. The task result contains the store values,
                or null if the entity does not exist in the database.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.Reload">
            <summary>
                <para>
                    Reloads the entity from the database overwriting any property values with values from the database.
                </para>
                <para>
                    The entity will be in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged" /> state after calling this method,
                    unless the entity does not exist in the database, in which case the entity will be
                    <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Detached" />. Finally, calling Reload on an <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" />
                    entity that does not exist in the database is a no-op. Note, however, that an Added entity may
                    not yet have had its permanent key value created.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.ReloadAsync(System.Threading.CancellationToken)">
            <summary>
                <para>
                    Reloads the entity from the database overwriting any property values with values from the database.
                </para>
                <para>
                    The entity will be in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Unchanged" /> state after calling this method,
                    unless the entity does not exist in the database, in which case the entity will be
                    <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Detached" />. Finally, calling Reload on an <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" />
                    entity that does not exist in the database is a no-op. Note, however, that an Added entity may
                    not yet have had its permanent key value created.
                </para>
            </summary>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous operation.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode">
            <summary>
                Provides access to change tracking information and operations for a node in a
                graph of entities that is being traversed.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.InboundNavigation">
            <summary>
                Gets the navigation property that is being traversed to reach this node in the graph.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.NodeState">
            <summary>
                Gets or sets state that will be available to all nodes that are visited after this node.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.Entry">
            <summary>
                Gets the entry tracking information about this entity.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance">
            <summary>
                <para>
                    Gets the internal entry that is tracking information about this entity.
                </para>
                <para>
                    This property is intended for use by extension methods. It is not intended to be used in
                    application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode.CreateNode(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)">
            <summary>
                Creates a new node for the entity that is being traversed next in the graph.
            </summary>
            <param name="currentNode"> The node that the entity is being traversed from. </param>
            <param name="internalEntityEntry">
                The internal entry tracking information about the entity being traversed to.
            </param>
            <param name="reachedVia"> The navigation property that is being traversed to reach the new node. </param>
            <returns> The newly created node. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1">
            <summary>
                <para>
                    Provides access to change tracking information and operations for a given entity.
                </para>
                <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> API and it is
                    not designed to be directly constructed in your application code.
                </para>
            </summary>
            <typeparam name="TEntity"> The type of entity being tracked by this entry. </typeparam>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Entity">
            <summary>
                Gets the entity being tracked by this entry.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
                Provides access to change tracking information and operations for a given
                property of this entity.
            </summary>
            <param name="propertyExpression">
                A lambda expression representing the property to access information and operations for
                (<c>t => t.Property1</c>).
            </param>
            <returns> An object that exposes change tracking information and operations for the given property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Reference``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
                Provides access to change tracking and loading information for a reference (i.e. non-collection)
                navigation property that associates this entity to another entity.
            </summary>
            <param name="propertyExpression">
                A lambda expression representing the property to access information and operations for
                (<c>t => t.Property1</c>).
            </param>
            <returns>
                An object that exposes change tracking information and operations for the
                given navigation property.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Collection``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
            <summary>
                Provides access to change tracking and loading information for a collection
                navigation property that associates this entity to a collection of another entities.
            </summary>
            <param name="propertyExpression">
                A lambda expression representing the property to access information and operations for
                (<c>t => t.Property1</c>).
            </param>
            <returns>
                An object that exposes change tracking information and operations for the
                given navigation property.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Reference``1(System.String)">
            <summary>
                Provides access to change tracking and loading information for a reference (i.e. non-collection)
                navigation property that associates this entity to another entity.
            </summary>
            <param name="propertyName"> The name of the navigation property. </param>
            <returns>
                An object that exposes change tracking information and operations for the
                given navigation property.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Collection``1(System.String)">
            <summary>
                Provides access to change tracking and loading information for a collection
                navigation property that associates this entity to a collection of another entities.
            </summary>
            <param name="propertyName"> The name of the navigation property. </param>
            <returns>
                An object that exposes change tracking information and operations for the
                given navigation property.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1.Property``1(System.String)">
            <summary>
                Provides access to change tracking information and operations for a given
                property of this entity.
            </summary>
            <typeparam name="TProperty"> The type of the property. </typeparam>
            <param name="propertyName"> The property to access information and operations for. </param>
            <returns> An object that exposes change tracking information and operations for the given property. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1">
            <summary>
                <para>
                    A collection that stays in sync with entities of a given type being tracked by
                    a <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />. Call <see cref="P:Microsoft.EntityFrameworkCore.DbSet`1.Local" /> to obtain a
                    local view.
                </para>
                <para>
                    This local view will stay in sync as entities are added or removed from the context. Likewise, entities
                    added to or removed from the local view will automatically be added to or removed
                    from the context.
                </para>
                <para>
                    Adding an entity to this collection will cause it to be tracked in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" />
                    state by the context unless it is already being tracked.
                </para>
                <para>
                    Removing an entity from this collection will cause it to be marked as <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Deleted" />,
                    unless it was previously in the Added state, in which case it will be detached from the context.
                </para>
                <para>
                    The collection implements <see cref="T:System.Collections.Specialized.INotifyCollectionChanged" />,
                    <see cref="T:System.ComponentModel.INotifyPropertyChanging" />, and <see cref="T:System.ComponentModel.INotifyPropertyChanging" /> such that
                    notifications are generated when an entity starts being tracked by the context or is
                    marked as <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Deleted" /> or <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Detached" />.
                </para>
            </summary>
            <typeparam name="TEntity">The type of the entity in the local view.</typeparam>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.#ctor(Microsoft.EntityFrameworkCore.DbSet{`0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.GetEnumerator">
            <summary>
                Returns an <see cref="T:System.Collections.Generic.IEnumerator`1" /> for all tracked entities of type TEntity
                that are not marked as deleted.
            </summary>
            <returns> An enumerator for the collection. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>
                Returns an <see cref="T:System.Collections.Generic.IEnumerator`1" /> for all tracked entities of type TEntity
                that are not marked as deleted.
            </summary>
            <returns> An enumerator for the collection. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.Add(`0)">
            <summary>
                <para>
                    Adds a new entity to the <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />. If the entity is not being tracked or is currently
                    marked as deleted, then it becomes tracked as <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" />.
                </para>
                <para>
                    Note that only the given entity is tracked. Any related entities discoverable from
                    the given entity are not automatically tracked.
                </para>
            </summary>
            <param name="item">The item to start tracking. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.Clear">
            <summary>
                <para>
                    Marks all entities of type TEntity being tracked by the <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />
                    as <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Deleted" />.
                </para>
                <para>
                    Entities that are currently marked as <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> will be marked
                    as <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Detached" /> since the Added state indicates that the entity
                    has not been saved to the database and hence it does not make sense to attempt to
                    delete it from the database.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.Contains(`0)">
            <summary>
                Returns true if the entity is being tracked by the context and has not been
                marked as Deleted.
            </summary>
            <param name="item"> The entity to check. </param>
            <returns></returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.CopyTo(`0[],System.Int32)">
            <summary>
                Copies to an array all entities of type TEntity that are being tracked and are
                not marked as Deleted.
            </summary>
            <param name="array"> The array into which to copy entities. </param>
            <param name="arrayIndex"> The index into the array to start copying. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.Remove(`0)">
            <summary>
                <para>
                    Marks the given entity as <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Deleted" />.
                </para>
                <para>
                    Entities that are currently marked as <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> will be marked
                    as <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Detached" /> since the Added state indicates that the entity
                    has not been saved to the database and hence it does not make sense to attempt to
                    delete it from the database.
                </para>
            </summary>
            <param name="item"> The entity to delete. </param>
            <returns>True if the entity was being tracked and was not already Deleted. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.Count">
            <summary>
                The number of entities of type TEntity that are being tracked and are not marked
                as Deleted.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.IsReadOnly">
            <summary>
                False, since the collection is not read-only.
            </summary>
        </member>
        <member name="E:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.PropertyChanged">
            <summary>
                Occurs when a property of this collection (such as <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.Count" />) changes.
            </summary>
        </member>
        <member name="E:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.PropertyChanging">
            <summary>
                Occurs when a property of this collection (such as <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.Count" />) is changing.
            </summary>
        </member>
        <member name="E:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.CollectionChanged">
            <summary>
                Occurs when the contents of the collection changes, either because an entity
                has been directly added or removed from the collection, or because an entity
                starts being tracked, or because an entity is marked as Deleted.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
                Raises the <see cref="E:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.PropertyChanged" /> event.
            </summary>
            <param name="e"> Details of the property that changed. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.OnPropertyChanging(System.ComponentModel.PropertyChangingEventArgs)">
            <summary>
                Raises the <see cref="E:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.PropertyChanging" /> event.
            </summary>
            <param name="e"> Details of the property that is changing. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
                Raises the <see cref="E:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.CollectionChanged" /> event.
            </summary>
            <param name="e"> Details of the change. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.LocalView`1.ToBindingList">
            <summary>
                Returns an <see cref="T:System.ComponentModel.BindingList`1" /> implementation that stays in sync with this collection.
            </summary>
            <returns> The binding list. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry">
            <summary>
                <para>
                    Provides access to change tracking information and operations for a given property
                    or navigation property.
                </para>
                <para>
                    Scalar properties use the derived class <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry" />, reference navigation
                    properties use the derived class <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry" />, and collection navigation
                    properties use the derived class <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.CollectionEntry" />.
                </para>
                <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> API and it is
                    not designed to be directly constructed in your application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.InternalEntry">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.IsModified">
            <summary>
                <para>
                    For non-navigation properties, gets or sets a value indicating whether the value of this
                    property has been modified and should be updated in the database when
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" />
                    is called.
                </para>
                <para>
                    For navigation properties, gets or sets a value indicating whether any of foreign key
                    property values associated with this navigation property have been modified and should
                    be updated in the database  when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Metadata">
            <summary>
                Gets the metadata that describes the facets of this property and how it maps to the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.CurrentValue">
            <summary>
                Gets or sets the value currently assigned to this property. If the current value is set using this property,
                the change tracker is aware of the change and <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges" /> is not required
                for the context to detect the change.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.EntityEntry">
            <summary>
                The <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.EntityEntry" /> to which this member belongs.
            </summary>
            <value> An entry for the entity that owns this member. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.MemberEntry.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#ChangeTracking#Internal#InternalEntityEntry}#Instance">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry">
            <summary>
                <para>
                    Provides access to change tracking and loading information for a navigation property
                    that associates this entity to one or more other entities.
                </para>
                <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> API and it is
                    not designed to be directly constructed in your application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.String,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load">
            <summary>
                <para>
                    Loads the entity or entities referenced by this navigation property, unless <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded" />
                    is already set to true.
                </para>
                <para>
                    Note that entities that are already being tracked are not overwritten with new data from the database.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)">
            <summary>
                <para>
                    Loads the entity or entities referenced by this navigation property, unless <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded" />
                    is already set to true.
                </para>
                <para>
                    Note that entities that are already being tracked are not overwritten with new data from the database.
                </para>
                <para>
                    Multiple active operations on the same context instance are not supported.  Use 'await' to ensure
                    that any asynchronous operations have completed before calling another method on this context.
                </para>
            </summary>
            <param name="cancellationToken">
                A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.
            </param>
            <returns>
                A task that represents the asynchronous save operation.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Query">
            <summary>
                <para>
                    Returns the query that would be used by <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load" /> to load entities referenced by
                    this navigation property.
                </para>
                <para>
                    The query can be composed over using LINQ to perform filtering, counting, etc. without
                    actually loading all entities from the database.
                </para>
            </summary>
            <returns> The query to load related entities. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsLoaded">
            <summary>
                <para>
                    Gets or sets a value indicating whether the entity or entities referenced by this navigation property
                    are known to be loaded.
                </para>
                <para>
                    Loading entities from the database using
                    <see cref="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.Include``2(System.Linq.IQueryable{``0},System.Linq.Expressions.Expression{System.Func{``0,``1}})" /> or
                    <see
                        cref="M:Microsoft.EntityFrameworkCore.EntityFrameworkQueryableExtensions.ThenInclude``3(Microsoft.EntityFrameworkCore.Query.IIncludableQueryable{``0,System.Collections.Generic.IEnumerable{``1}},System.Linq.Expressions.Expression{System.Func{``1,``2}})" />
                    , <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load" />, or <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)" /> will set this flag. Subseqent calls to <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load" />
                    or <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)" /> will then be a no-op.
                </para>
                <para>
                    It is possible for IsLoaded to be false even if all related entities are loaded. This is because, depending on
                    how entities are loaded, it is not always possible to know for sure that all entities in a related collection
                    have been loaded. In such cases, calling <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load" /> or <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.LoadAsync(System.Threading.CancellationToken)" /> will ensure all
                    related entities are loaded and will set this flag to true.
                </para>
            </summary>
            <value>
                True if all the related entities are loaded or the IsLoaded has been explicitly set to true.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Finder(System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.IsModified">
            <summary>
                Gets or sets a value indicating whether any of foreign key property values associated
                with this navigation property have been modified and should be updated in the database
                when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> is called.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Metadata">
            <summary>
                Gets the metadata that describes the facets of this property and how it maps to the database.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1">
            <summary>
                <para>
                    Extends <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" /> and adds an explicit implementation of <see cref="T:System.ComponentModel.IListSource" />.
                </para>
                <para>
                    The method <see cref="M:System.ComponentModel.IListSource.GetList" /> is implemented to return an <see cref="T:System.ComponentModel.IBindingList" />
                    implementation that stays in sync with the ObservableCollection.
                </para>
                <para>
                    This class can be used to implement navigation properties on entities for use in Windows Forms data binding.
                    For WPF data binding use an ObservableCollection rather than an instance of this class.
                </para>
            </summary>
            <typeparam name="T"> </typeparam>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1" /> class that
                contains elements copied from the specified collection.
            </summary>
            <param name="collection"> The collection from which the elements are copied. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1.#ctor(System.Collections.Generic.List{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1" /> class that
                contains elements copied from the specified list.
            </summary>
            <param name="list"> The list from which the elements are copied. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1.System#ComponentModel#IListSource#ContainsListCollection">
            <summary>
                Always false because there is never a contained collection.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableCollectionListSource`1.System#ComponentModel#IListSource#GetList">
            <summary>
                Returns an <see cref="T:System.ComponentModel.IBindingList" /> implementation that stays in sync with
                this <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />. The returned list is cached on this object
                such that the same list is returned each time this method is called.
            </summary>
            <returns>
                An <see cref="T:System.ComponentModel.IBindingList" /> in sync with the ObservableCollection.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1">
            <summary>
                A hash set that implements the interfaces required for Entity Framework to use notification based change tracking
                for a collection navigation property.
            </summary>
            <typeparam name="T"> The type of elements in the hash set. </typeparam>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1" /> class
                that is empty and uses the default equality comparer for the set type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.#ctor(System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1" /> class
                that is empty and uses the specified equality comparer for the set type.
            </summary>
            <param name="comparer">
                The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when
                comparing values in the set, or null to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1" />
                implementation for the set type.
            </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1" /> class
                that uses the default equality comparer for the set type, contains elements copied
                from the specified collection, and has sufficient capacity to accommodate the
                number of elements copied.
            </summary>
            <param name="collection"> The collection whose elements are copied to the new set. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.#ctor(System.Collections.Generic.IEnumerable{`0},System.Collections.Generic.IEqualityComparer{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1" /> class
                that uses the specified equality comparer for the set type, contains elements
                copied from the specified collection, and has sufficient capacity to accommodate
                the number of elements copied.
            </summary>
            <param name="collection"> The collection whose elements are copied to the new set. </param>
            <param name="comparer">
                The <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> implementation to use when
                comparing values in the set, or null to use the default <see cref="T:System.Collections.Generic.IEqualityComparer`1" />
                implementation for the set type.
            </param>
        </member>
        <member name="E:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.PropertyChanged">
            <summary>
                Occurs when a property of this hash set (such as <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.Count" />) changes.
            </summary>
        </member>
        <member name="E:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.PropertyChanging">
            <summary>
                Occurs when a property of this hash set (such as <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.Count" />) is changing.
            </summary>
        </member>
        <member name="E:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.CollectionChanged">
            <summary>
                Occurs when the contents of the hash set changes.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.Clear">
            <summary>
                Removes all elements from the hash set.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.Contains(`0)">
            <summary>
                Determines whether the hash set object contains the
                specified element.
            </summary>
            <param name="item">The element to locate in the hash set.</param>
            <returns>
                True if the hash set contains the specified element; otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.CopyTo(`0[],System.Int32)">
            <summary>
                Copies the elements of the hash set to an array, starting at the specified array index.
            </summary>
            <param name="array">
                The one-dimensional array that is the destination of the elements copied from
                the hash set. The array must have zero-based indexing.
            </param>
            <param name="arrayIndex"> The zero-based index in array at which copying begins. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.Remove(`0)">
            <summary>
                Removes the specified element from the hash set.
            </summary>
            <param name="item"> The element to remove. </param>
            <returns>
                True if the element is successfully found and removed; otherwise, false.
            </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.Count">
            <summary>
                Gets the number of elements that are contained in the hash set.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.IsReadOnly">
            <summary>
                Gets a value indicating whether the hash set is read-only.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.GetEnumerator">
            <summary>
                Returns an enumerator that iterates through the hash set.
            </summary>
            <returns>
                An enumerator for the hash set.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.Add(`0)">
            <summary>
                Adds the specified element to the hash set.
            </summary>
            <param name="item"> The element to add to the set. </param>
            <returns>
                true if the element is added to the hash set; false if the element is already present.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.UnionWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Modifies the hash set to contain all elements that are present in itself, the specified collection, or both.
            </summary>
            <param name="other"> The collection to compare to the current hash set. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.IntersectWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Modifies the current hash set to contain only
                elements that are present in that object and in the specified collection.
            </summary>
            <param name="other"> The collection to compare to the current hash set. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.ExceptWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Removes all elements in the specified collection from the hash set.
            </summary>
            <param name="other"> The collection of items to remove from the current hash set. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.SymmetricExceptWith(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Modifies the current hash set to contain only elements that are present either in that
                object or in the specified collection, but not both.
            </summary>
            <param name="other"> The collection to compare to the current hash set. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.IsSubsetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Determines whether the hash set is a subset of the specified collection.
            </summary>
            <param name="other"> The collection to compare to the current hash set. </param>
            <returns>
                True if the hash set is a subset of other; otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.IsProperSubsetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Determines whether the hash set is a proper subset of the specified collection.
            </summary>
            <param name="other"> The collection to compare to the current hash set. </param>
            <returns>
                True if the hash set is a proper subset of other; otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.IsSupersetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Determines whether the hash set is a superset of the specified collection.
            </summary>
            <param name="other"> The collection to compare to the current hash set. </param>
            <returns>
                True if the hash set is a superset of other; otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.IsProperSupersetOf(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Determines whether the hash set is a proper superset of the specified collection.
            </summary>
            <param name="other"> The collection to compare to the current hash set. </param>
            <returns>
                True if the hash set is a proper superset of other; otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.Overlaps(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Determines whether the current System.Collections.Generic.HashSet`1 object and a specified collection share common elements.
            </summary>
            <param name="other"> The collection to compare to the current hash set. </param>
            <returns>
                True if the hash set and other share at least one common element; otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.SetEquals(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Determines whether the hash set and the specified collection contain the same elements.
            </summary>
            <param name="other"> The collection to compare to the current hash set. </param>
            <returns>
                True if the hash set is equal to other; otherwise, false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.CopyTo(`0[])">
            <summary>
                Copies the elements of the hash set to an array.
            </summary>
            <param name="array">
                The one-dimensional array that is the destination of the elements copied from
                the hash set. The array must have zero-based indexing.
            </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.CopyTo(`0[],System.Int32,System.Int32)">
            <summary>
                Copies the specified number of elements of the hash set to an array, starting at the specified array index.
            </summary>
            <param name="array">
                The one-dimensional array that is the destination of the elements copied from
                the hash set. The array must have zero-based indexing.
            </param>
            <param name="arrayIndex"> The zero-based index in array at which copying begins. </param>
            <param name="count"> The number of elements to copy to array. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.RemoveWhere(System.Predicate{`0})">
            <summary>
                Removes all elements that match the conditions defined by the specified predicate
                from the hash set.
            </summary>
            <param name="match">
                The <see cref="T:System.Predicate`1" /> delegate that defines the conditions of the elements to remove.
            </param>
            <returns> The number of elements that were removed from the hash set. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.Comparer">
            <summary>
                Gets the <see cref="T:System.Collections.Generic.IEqualityComparer`1" /> object that is used to determine equality for the values in the set.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.TrimExcess">
            <summary>
                Sets the capacity of the hash set to the actual number of elements it contains, rounded up to a nearby,
                implementation-specific value.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.OnPropertyChanged(System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
                Raises the <see cref="E:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.PropertyChanged" /> event.
            </summary>
            <param name="e"> Details of the property that changed. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.OnPropertyChanging(System.ComponentModel.PropertyChangingEventArgs)">
            <summary>
                Raises the <see cref="E:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.PropertyChanging" /> event.
            </summary>
            <param name="e"> Details of the property that is changing. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.OnCollectionChanged(System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
                Raises the <see cref="E:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.CollectionChanged" /> event.
            </summary>
            <param name="e"> Details of the change. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1.ToBindingList">
            <summary>
                Returns an <see cref="T:System.ComponentModel.BindingList`1" /> implementation that stays in sync with this collection.
            </summary>
            <returns> The binding list. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSetListSource`1">
            <summary>
                <para>
                    Extends <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1" /> and adds an explicit implementation of <see cref="T:System.ComponentModel.IListSource" />.
                </para>
                <para>
                    The method <see cref="M:System.ComponentModel.IListSource.GetList" /> is implemented to return an <see cref="T:System.ComponentModel.IBindingList" />
                    implementation that stays in sync with the ObservableHashSet.
                </para>
                <para>
                    This class can be used to implement navigation properties on entities for use in Windows Forms data binding.
                    For WPF data binding use an ObservableHashSet rather than an instance of this class.
                </para>
            </summary>
            <typeparam name="T"> </typeparam>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSetListSource`1.#ctor">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSetListSource`1" /> class.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSetListSource`1.#ctor(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSetListSource`1" /> class that
                contains elements copied from the specified collection.
            </summary>
            <param name="collection"> The collection from which the elements are copied. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSetListSource`1.#ctor(System.Collections.Generic.List{`0})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSetListSource`1" /> class that
                contains elements copied from the specified list.
            </summary>
            <param name="list"> The list from which the elements are copied. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSetListSource`1.System#ComponentModel#IListSource#ContainsListCollection">
            <summary>
                Always false because there is never a contained collection.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSetListSource`1.System#ComponentModel#IListSource#GetList">
            <summary>
                Returns an <see cref="T:System.ComponentModel.IBindingList" /> implementation that stays in sync with
                this <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet`1" />. The returned list is cached on this object
                such that the same list is returned each time this method is called.
            </summary>
            <returns>
                An <see cref="T:System.ComponentModel.IBindingList" /> in sync with the ObservableHashSet.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry">
            <summary>
                <para>
                    Provides access to change tracking information and operations for a given property.
                </para>
                <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> API and it is
                    not designed to be directly constructed in your application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry.IsModified">
            <summary>
                Gets or sets a value indicating whether the value of this property has been modified
                and should be updated in the database when <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" />
                is called.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry.IsTemporary">
            <summary>
                Gets or sets a value indicating whether the value of this property is considered a
                temporary value which will be replaced by a value generated from the store when
                <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" />is called.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry.Metadata">
            <summary>
                Gets the metadata that describes the facets of this property and how it maps to the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry.OriginalValue">
            <summary>
                Gets or sets the value that was assigned to this property when it was retrieved from the database.
                This property is populated when an entity is retrieved from the database, but setting it may be
                useful in disconnected scenarios where entities are retrieved with one context instance and
                saved with a different context instance.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry`2">
            <summary>
                <para>
                    Provides access to change tracking information and operations for a given property.
                </para>
                <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> API and it is
                    not designed to be directly constructed in your application code.
                </para>
            </summary>
            <typeparam name="TEntity"> The type of the entity the property belongs to. </typeparam>
            <typeparam name="TProperty"> The type of the property. </typeparam>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry`2.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry`2.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry`2.EntityEntry">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1" /> to which this member belongs.
            </summary>
            <value> An entry for the entity that owns this member. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry`2.CurrentValue">
            <summary>
                Gets or sets the value currently assigned to this property. If the current value is set using this property,
                the change tracker is aware of the change and <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges" /> is not required
                for the context to detect the change.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyEntry`2.OriginalValue">
            <summary>
                Gets or sets the value that was assigned to this property when it was retrieved from the database.
                This property is populated when an entity is retrieved from the database, but setting it may be
                useful in disconnected scenarios where entities are retrieved with one context instance and
                saved with a different context instance.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyValues">
            <summary>
                <para>
                    A collection of all property values for an entity.
                </para>
                <para>
                    Objects of this type can be obtained from <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.CurrentValues" />,
                    <see cref="P:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.OriginalValues" />,  <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.GetDatabaseValues" />,
                    or <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry.GetDatabaseValuesAsync(System.Threading.CancellationToken)" />.
                    Once obtained, the objects are usually used in various combinations to resolve optimitisic
                    concurrency exceptions signalled by the throwing of a <see cref="T:Microsoft.EntityFrameworkCore.DbUpdateConcurrencyException" />.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyValues.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyValues.InternalEntry">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyValues.ToObject">
            <summary>
                Creates an insatcne of the entity type and sets all its properties using the
                values from this object.
            </summary>
            <returns> The values of this object copied into a new entity instance. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyValues.SetValues(System.Object)">
            <summary>
                <para>
                    Sets the values of this object by copying values from the given object.
                </para>
                <para>
                    The given object can be of any type.  Any property on the object with a name that
                    matches a property name in the entity type and can be read will be copied.  Other
                    properties will be ignored.  This allows, for example, copying of properties from
                    simple Data Transfer Objects (DTOs).
                </para>
            </summary>
            <param name="obj"> The object to read values from. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyValues.Clone">
            <summary>
                Creates a clone of the values in this object. Changes made to the new object will not be
                reflected in this object and vice versa.
            </summary>
            <returns> A clone of this object. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyValues.SetValues(Microsoft.EntityFrameworkCore.ChangeTracking.PropertyValues)">
            <summary>
                <para>
                    Sets the values of this object by reading values from another <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyValues" />
                    object.
                </para>
                <para>
                    The other object must be based on the same type as this object, or a type derived
                    from the type for this object.
                </para>
            </summary>
            <param name="propertyValues"> The object from which values should be coiped. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyValues.SetValues(System.Collections.Generic.IDictionary{System.String,System.Object})">
            <summary>
                <para>
                    Sets the values of this object by copying values from the given dictionary.
                </para>
                <para>
                    The keys of the dictionary must match property names. Any key in the dictionary
                    that does not match the name of a property in the entity type will be ignored.
                </para>
            </summary>
            <param name="values"> The dictionary to read values from. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyValues.Properties">
            <summary>
                Gets the properties for which this object is storing values.
            </summary>
            <value> The properties. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyValues.EntityType">
            <summary>
                Gets the underlying entity type for which this object is storing values.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyValues.Item(System.String)">
            <summary>
                Gets or sets the value of the property with the specified property name.
            </summary>
            <param name="propertyName"> The property name. </param>
            <returns> The value of the property. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyValues.Item(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets or sets the value of the property.
            </summary>
            <param name="property"> The property. </param>
            <returns> The value of the property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyValues.GetValue``1(System.String)">
            <summary>
                Gets the value of the property just like using the indexed property getter but
                typed to the type of the generic parameter.
            </summary>
            <typeparam name="TValue"> The type of the property. </typeparam>
            <param name="propertyName"> The property name. </param>
            <returns> The value of the property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.PropertyValues.GetValue``1(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the value of the property just like using the indexed property getter but
                typed to the type of the generic parameter.
            </summary>
            <typeparam name="TValue"> The type of the property. </typeparam>
            <param name="property"> The property. </param>
            <returns> The value of the property. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry">
            <summary>
                <para>
                    Provides access to change tracking and loading information for a reference (i.e. non-collection)
                    navigation property that associates this entity to another entity.
                </para>
                <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> API and it is
                    not designed to be directly constructed in your application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry`2">
            <summary>
                <para>
                    Provides access to change tracking and loading information for a reference (i.e. non-collection)
                    navigation property that associates this entity to another entity.
                </para>
                <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> API and it is
                    not designed to be directly constructed in your application code.
                </para>
            </summary>
            <typeparam name="TEntity"> The type of the entity the property belongs to. </typeparam>
            <typeparam name="TProperty"> The type of the property. </typeparam>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry`2.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry`2.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry`2.EntityEntry">
            <summary>
                The <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry`1" /> to which this member belongs.
            </summary>
            <value> An entry for the entity that owns this member. </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry`2.CurrentValue">
            <summary>
                Gets or sets the value currently assigned to this property. If the current value is set using this property,
                the change tracker is aware of the change and <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges" /> is not required
                for the context to detect the change.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.ReferenceEntry`2.Query">
            <summary>
                <para>
                    Returns the query that would be used by <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.NavigationEntry.Load" /> to load the entity referenced by
                    this navigation property.
                </para>
                <para>
                    The query can be composed over using LINQ to perform filtering, counting, etc. without
                    actually loading the entity from the database.
                </para>
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ArrayPropertyValues">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ArrayPropertyValues.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Object[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ArrayPropertyValues.ToObject">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ArrayPropertyValues.SetValues(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ArrayPropertyValues.Clone">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ArrayPropertyValues.SetValues(Microsoft.EntityFrameworkCore.ChangeTracking.PropertyValues)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ArrayPropertyValues.Properties">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ArrayPropertyValues.Item(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ArrayPropertyValues.Item(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ArrayPropertyValues.GetValue``1(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ArrayPropertyValues.GetValue``1(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.SkipDetectChangesAnnotation">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.Suspend">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.Resume">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.PropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.PropertyChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeTrackerFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeTrackerFactory.#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ChangeTrackerFactory.Create">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeDependentValueFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeDependentValueFactory.#ctor(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeDependentValueFactory.TryCreateFromBuffer(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object[]@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeDependentValueFactory.TryCreateFromCurrentValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Object[]@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeDependentValueFactory.TryCreateFromPreStoreGeneratedCurrentValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Object[]@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeDependentValueFactory.TryCreateFromOriginalValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Object[]@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositeDependentValueFactory.TryCreateFromRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Object[]@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositePrincipalKeyValueFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositePrincipalKeyValueFactory.#ctor(Microsoft.EntityFrameworkCore.Metadata.IKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositePrincipalKeyValueFactory.CreateFromKeyValues(System.Object[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositePrincipalKeyValueFactory.CreateFromBuffer(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositePrincipalKeyValueFactory.CreateFromCurrentValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositePrincipalKeyValueFactory.CreateFromOriginalValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositePrincipalKeyValueFactory.CreateFromRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CompositePrincipalKeyValueFactory.EqualityComparer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CurrentPropertyValues">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CurrentPropertyValues.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CurrentPropertyValues.GetValue``1(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CurrentPropertyValues.GetValue``1(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CurrentPropertyValues.SetValueInternal(Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.CurrentPropertyValues.GetValueInternal(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.Create``1(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateSimple``1(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentKeyValueFactoryFactory.CreateComposite(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory{`0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.Update(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.GetDependents(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMap`1.GetDependentsUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMapFactoryFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.DependentsMapFactoryFactory.Create(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EmptyShadowValuesFactoryFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EmptyShadowValuesFactoryFactory.GetPropertyIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EmptyShadowValuesFactoryFactory.GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EmptyShadowValuesFactoryFactory.UseEntityVariable">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EmptyShadowValuesFactoryFactory.CreateReadShadowValueExpression(System.Linq.Expressions.ParameterExpression,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityEntryGraphIterator.TraverseGraph(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,System.Func{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,System.Boolean})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityEntryGraphIterator)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntityGraphAttacher.AttachGraph(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntryPropertyValues">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntryPropertyValues.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntryPropertyValues.ToObject">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntryPropertyValues.SetValues(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntryPropertyValues.Clone">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntryPropertyValues.SetValues(Microsoft.EntityFrameworkCore.ChangeTracking.PropertyValues)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntryPropertyValues.Properties">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntryPropertyValues.Item(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntryPropertyValues.Item(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntryPropertyValues.SetValueInternal(Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.EntryPropertyValues.GetValueInternal(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.DetectChanges(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.Suspend">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector.Resume">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeTrackerFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeTrackerFactory.Create">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.PrincipalKeyValueFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Key">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Contains(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Contains(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntry(System.Object[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntry(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntry(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntryUsingPreStoreGeneratedValues(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.TryGetEntryUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.AddOrUpdate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Add(`0,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.GetDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.FindDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.RemoveUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMap`1.Remove(`0,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMapFactoryFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMapFactoryFactory.Create(Microsoft.EntityFrameworkCore.Metadata.IKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMapFactoryFactoryBase">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IdentityMapFactoryFactoryBase.GetKeyType(Microsoft.EntityFrameworkCore.Metadata.IKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1.TryCreateFromBuffer(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1.TryCreateFromCurrentValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1.TryCreateFromPreStoreGeneratedCurrentValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1.TryCreateFromOriginalValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory`1.TryCreateFromRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Update(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependents(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentsMap.GetDependentsUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityEntryGraphIterator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityEntryGraphIterator.TraverseGraph(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,System.Func{Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntryGraphNode,System.Boolean})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityGraphAttacher">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityGraphAttacher.AttachGraph(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Key">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Contains(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Contains(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry(System.Object[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntry(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntryUsingPreStoreGeneratedValues(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.TryGetEntryUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.AddOrUpdate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.Remove(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.RemoveUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.GetDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IIdentityMap.FindDependentsMap(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryFactory.Create(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryFactory.Create(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Object,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.TrackedFromQuery(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Collections.Generic.ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.NavigationReferenceChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Object,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.NavigationCollectionChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.KeyPropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Object,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.PropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier.PropertyChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntrySubscriber">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntrySubscriber.SnapshotAndSubscribe(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntrySubscriber.Unsubscribe(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IKeyListener">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IKeyListener.KeyPropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Object,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IKeyPropagator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IKeyPropagator.PropagateValue(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IKeyPropagator.PropagateValueAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ILocalViewListener.RegisterView(System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.INavigationFixer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.INavigationListener">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.INavigationListener.NavigationReferenceChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Object,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.INavigationListener.NavigationCollectionChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalClrEntityEntry">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalClrEntityEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalClrEntityEntry.Entity">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.Entity">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.EntityType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.StateManager">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityState(Microsoft.EntityFrameworkCore.EntityState,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetEntityStateAsync(Microsoft.EntityFrameworkCore.EntityState,System.Boolean,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.MarkUnchangedFromQuery(System.Collections.Generic.ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.EntityState">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.IsModified(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetPropertyModified(Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HasConceptualNull">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.IsConceptualNull(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HasTemporaryValue(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.MarkAsTemporary(Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.MarkShadowPropertiesNotSet(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.ReadShadowValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.GetCurrentValue``1(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.GetOriginalValue``1(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.GetRelationshipSnapshotValue``1(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.ReadPropertyValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.WritePropertyValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.GetCurrentValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.GetPreStoreGeneratedCurrentValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.GetOriginalValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.GetRelationshipSnapshotValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetCurrentValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetOriginalValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object,System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetRelationshipSnapshotValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.EnsureOriginalValues">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.EnsureRelationshipSnapshot">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HasOriginalValuesSnapshot">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HasRelationshipSnapshot">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.RemoveFromCollectionSnapshot(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.AddToCollectionSnapshot(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.AddRangeToCollectionSnapshot(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.Item(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetProperty(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.AcceptChanges">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.PrepareToSave">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HandleConceptualNulls">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.CascadeDelete">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.DiscardStoreGeneratedValues">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.IsStoreGenerated(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.IsKeySet">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.ToEntityEntry">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HandleINotifyPropertyChanging(System.Object,System.ComponentModel.PropertyChangingEventArgs)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HandleINotifyPropertyChanged(System.Object,System.ComponentModel.PropertyChangedEventArgs)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.HandleINotifyCollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.SetIsLoaded(Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry.IsLoaded(Microsoft.EntityFrameworkCore.Metadata.INavigation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntryFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntryFactory.Create(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntryFactory.Create(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Object,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntryNotifier">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntryNotifier.#ctor(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityStateListener},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.INavigationListener},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IKeyListener},System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IQueryTrackingListener})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntryNotifier.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntryNotifier.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntryNotifier.TrackedFromQuery(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Collections.Generic.ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntryNotifier.NavigationReferenceChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Object,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntryNotifier.NavigationCollectionChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntryNotifier.KeyPropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Object,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntryNotifier.PropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntryNotifier.PropertyChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntrySubscriber">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntrySubscriber.SnapshotAndSubscribe(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntrySubscriber.Unsubscribe(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Object,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry.Entity">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry.ReadShadowValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry.ReadPropertyValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalMixedEntityEntry.WritePropertyValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.Entity">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.ReadShadowValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.ReadPropertyValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalShadowEntityEntry.WritePropertyValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1.CreateFromKeyValues(System.Object[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1.CreateFromBuffer(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1.CreateFromCurrentValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1.CreateFromOriginalValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1.CreateFromRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory`1.EqualityComparer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener.PropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPropertyListener.PropertyChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IQueryTrackingListener">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IQueryTrackingListener.TrackedFromQuery(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Collections.Generic.ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetOrCreateEntry(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.StartTrackingFromQuery(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Object,Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Collections.Generic.ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.BeginTrackingQuery">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.TryGetEntry(Microsoft.EntityFrameworkCore.Metadata.IKey,System.Object[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.TryGetEntry(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.TryGetEntry(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.Entries">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.ChangedCount">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.Notify">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.ValueGeneration">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.StartTracking(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.StopTracking(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.RecordReferencedUntrackedEntity(System.Object,Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetRecordedReferers(System.Object,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetPrincipal(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetPrincipalUsingPreStoreGeneratedValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetPrincipalUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.UpdateIdentityMap(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.UpdateDependentMap(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetDependentsFromNavigation(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetDependents(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetDependentsUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.SaveChanges(System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.AcceptAllChanges">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.Context">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.GetTrackingQueryMode(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.EndSingleQueryMode">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager.Unsubscribe">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.Generate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.GenerateAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager.MayGetTemporaryValue(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.KeyPropagator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.KeyPropagator.#ctor(Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorSelector)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.KeyPropagator.PropagateValue(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.KeyPropagator.PropagateValueAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.KeyValueFactoryFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.KeyValueFactoryFactory.Create``1(Microsoft.EntityFrameworkCore.Metadata.IKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.RegisterView(System.Action{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.LocalViewListener.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ISnapshot[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.MultiSnapshot.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.NavigationFixer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.NavigationFixer.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IEntityGraphAttacher)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.NavigationFixer.NavigationReferenceChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Object,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.NavigationFixer.NavigationCollectionChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Collections.Generic.IEnumerable{System.Object},System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.NavigationFixer.KeyPropertyChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IKey},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IForeignKey},System.Object,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.NavigationFixer.StateChanging(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.NavigationFixer.TrackedFromQuery(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Collections.Generic.ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.NavigationFixer.StateChanged(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.EntityState,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.NullableKeyIdentityMap`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.NullableKeyIdentityMap`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.NullableKeyIdentityMap`1.Add(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.NullableKeyIdentityMap`1.RemoveUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ObservableBackedBindingList`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ObservableBackedBindingList`1.#ctor(System.Collections.Generic.ICollection{`0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ObservableBackedBindingList`1.AddNewCore">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ObservableBackedBindingList`1.CancelNew(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ObservableBackedBindingList`1.ClearItems">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ObservableBackedBindingList`1.EndNew(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ObservableBackedBindingList`1.InsertItem(System.Int32,`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ObservableBackedBindingList`1.RemoveItem(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ObservableBackedBindingList`1.SetItem(System.Int32,`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.OriginalPropertyValues">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.OriginalPropertyValues.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.OriginalPropertyValues.GetValue``1(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.OriginalPropertyValues.GetValue``1(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.OriginalPropertyValues.SetValueInternal(Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.OriginalPropertyValues.GetValueInternal(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.OriginalValuesFactoryFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.OriginalValuesFactoryFactory.GetPropertyIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.OriginalValuesFactoryFactory.GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.RelationshipSnapshotFactoryFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.RelationshipSnapshotFactoryFactory.GetPropertyIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.RelationshipSnapshotFactoryFactory.GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.GetPropertyIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.UseEntityVariable">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ShadowValuesFactoryFactory.CreateReadShadowValueExpression(System.Linq.Expressions.ParameterExpression,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleFullyNullableDependentKeyValueFactory`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleFullyNullableDependentKeyValueFactory`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleFullyNullableDependentKeyValueFactory`1.TryCreateFromBuffer(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleFullyNullableDependentKeyValueFactory`1.TryCreateFromCurrentValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleFullyNullableDependentKeyValueFactory`1.TryCreateFromPreStoreGeneratedCurrentValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleFullyNullableDependentKeyValueFactory`1.TryCreateFromOriginalValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleFullyNullableDependentKeyValueFactory`1.TryCreateFromRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleNonNullableDependentKeyValueFactory`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleNonNullableDependentKeyValueFactory`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleNonNullableDependentKeyValueFactory`1.TryCreateFromBuffer(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleNonNullableDependentKeyValueFactory`1.TryCreateFromCurrentValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleNonNullableDependentKeyValueFactory`1.TryCreateFromPreStoreGeneratedCurrentValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleNonNullableDependentKeyValueFactory`1.TryCreateFromOriginalValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleNonNullableDependentKeyValueFactory`1.TryCreateFromRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleNullableDependentKeyValueFactory`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleNullableDependentKeyValueFactory`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleNullableDependentKeyValueFactory`1.TryCreateFromBuffer(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleNullableDependentKeyValueFactory`1.TryCreateFromCurrentValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleNullableDependentKeyValueFactory`1.TryCreateFromPreStoreGeneratedCurrentValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleNullableDependentKeyValueFactory`1.TryCreateFromOriginalValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleNullableDependentKeyValueFactory`1.TryCreateFromRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleNullablePrincipalDependentKeyValueFactory`2">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleNullablePrincipalDependentKeyValueFactory`2.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleNullablePrincipalDependentKeyValueFactory`2.TryCreateFromBuffer(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleNullablePrincipalDependentKeyValueFactory`2.TryCreateFromCurrentValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleNullablePrincipalDependentKeyValueFactory`2.TryCreateFromPreStoreGeneratedCurrentValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleNullablePrincipalDependentKeyValueFactory`2.TryCreateFromOriginalValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimpleNullablePrincipalDependentKeyValueFactory`2.TryCreateFromRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,`0@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimplePrincipalKeyValueFactory`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimplePrincipalKeyValueFactory`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimplePrincipalKeyValueFactory`1.CreateFromKeyValues(System.Object[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimplePrincipalKeyValueFactory`1.CreateFromBuffer(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimplePrincipalKeyValueFactory`1.CreateFromCurrentValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimplePrincipalKeyValueFactory`1.CreateFromOriginalValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimplePrincipalKeyValueFactory`1.CreateFromRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SimplePrincipalKeyValueFactory`1.EqualityComparer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot.MaxGenericTypes">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot.Empty">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot.CreateReaders``1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot.CreateSnapshotType(System.Type[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`30">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`30.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28,`29)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`30.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`30.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`29">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`29.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27,`28)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`29.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`29.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`28">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`28.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26,`27)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`28.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`28.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`27">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`27.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25,`26)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`27.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`27.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`26">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`26.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24,`25)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`26.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`26.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`25">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`25.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23,`24)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`25.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`25.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`24">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`24.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22,`23)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`24.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`24.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`23">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`23.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21,`22)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`23.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`23.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`22">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`22.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20,`21)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`22.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`22.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`21">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`21.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19,`20)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`21.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`21.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`20">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`20.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18,`19)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`20.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`20.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`19">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`19.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17,`18)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`19.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`19.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`18">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`18.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16,`17)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`18.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`18.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`17">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`17.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15,`16)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`17.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`17.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`16">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`16.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14,`15)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`16.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`16.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`15">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`15.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13,`14)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`15.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`15.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`14">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`14.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12,`13)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`14.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`14.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`13">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`13.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11,`12)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`13.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`13.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`12">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`12.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10,`11)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`12.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`12.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`11">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`11.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9,`10)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`11.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`11.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`10">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`10.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8,`9)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`10.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`10.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`9">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`9.#ctor(`0,`1,`2,`3,`4,`5,`6,`7,`8)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`9.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`9.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`8">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`8.#ctor(`0,`1,`2,`3,`4,`5,`6,`7)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`8.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`8.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`7">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`7.#ctor(`0,`1,`2,`3,`4,`5,`6)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`7.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`7.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6.#ctor(`0,`1,`2,`3,`4,`5)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`6.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`5">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`5.#ctor(`0,`1,`2,`3,`4)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`5.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`5.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`4">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`4.#ctor(`0,`1,`2,`3)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`4.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`4.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`3">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`3.#ctor(`0,`1,`2)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`3.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`3.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`2">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`2.#ctor(`0,`1)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`2.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`2.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`1.#ctor(`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`1.GetValue``1(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.Snapshot`1.Item(System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateEmpty(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateConstructorExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Linq.Expressions.ParameterExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.CreateReadShadowValueExpression(System.Linq.Expressions.ParameterExpression,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.GetPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory.UseEntityVariable">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SnapshotFactoryFactory`1.Create(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SortableBindingList`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SortableBindingList`1.#ctor(System.Collections.Generic.List{`0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SortableBindingList`1.ApplySortCore(System.ComponentModel.PropertyDescriptor,System.ComponentModel.ListSortDirection)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SortableBindingList`1.RemoveSortCore">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SortableBindingList`1.IsSortedCore">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SortableBindingList`1.SortDirectionCore">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SortableBindingList`1.SortPropertyCore">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.SortableBindingList`1.SupportsSortingCore">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.#ctor(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryFactory,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntrySubscriber,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IInternalEntityEntryNotifier,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IValueGenerationManager,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Storage.IDatabase,Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector,Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.GetTrackingQueryMode(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.EndSingleQueryMode">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.Notify">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.ValueGeneration">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.GetOrCreateEntry(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.BeginTrackingQuery">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTrackingFromQuery(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Object,Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Collections.Generic.ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.TryGetEntry(Microsoft.EntityFrameworkCore.Metadata.IKey,System.Object[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.TryGetEntry(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.TryGetEntry(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.Entries">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StartTracking(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.StopTracking(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.Unsubscribe">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.RecordReferencedUntrackedEntity(System.Object,Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.GetRecordedReferers(System.Object,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.GetPrincipal(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.GetPrincipalUsingPreStoreGeneratedValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.GetPrincipalUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.UpdateIdentityMap(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.UpdateDependentMap(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.GetDependents(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.GetDependentsUsingRelationshipSnapshot(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.GetDependentsFromNavigation(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.ChangedCount">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(System.Boolean,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChanges(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.SaveChangesAsync(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry},System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.AcceptAllChanges">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.StateManager.Context">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.TrackingQueryMode">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.TrackingQueryMode.Simple">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
                The state manager is tracking for a single query for one entity type and no self-refs.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.TrackingQueryMode.Single">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
                The state manager is tracking for a single query, but with multiple entity types and/or self refs.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.TrackingQueryMode.Multiple">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
                The state manager is tracking for multiple queries and/or with other tracked entities.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ValueGenerationManager">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ValueGenerationManager.#ctor(Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorSelector,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IKeyPropagator)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ValueGenerationManager.Generate(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ValueGenerationManager.GenerateAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ChangeTracking.Internal.ValueGenerationManager.MayGetTemporaryValue(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.EntityTypeExtensions">
            <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IEntityType" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityTypeExtensions.GetDerivedTypes(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                Gets all types in the model that derive from a given entity type.
            </summary>
            <param name="entityType"> The base type to find types that derive from. </param>
            <returns> The derived types. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityTypeExtensions.RootType(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                Gets the root base type for a given entity type.
            </summary>
            <param name="entityType"> The type to find the root of. </param>
            <returns>
                The root base type. If the given entity type is not a derived type, then the same entity type is returned.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityTypeExtensions.IsAssignableFrom(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                Determines if an entity type derives from (or is the same as) a given entity type.
            </summary>
            <param name="entityType"> The base entity type. </param>
            <param name="derivedType"> The entity type to check if it derives from <paramref name="entityType" />. </param>
            <returns>
                True if <paramref name="derivedType" /> derives from (or is the same as) <paramref name="entityType" />, otherwise false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityTypeExtensions.LeastDerivedType(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                Gets the least derived type between the specified two.
            </summary>
            <param name="entityType"> The type to compare. </param>
            <param name="otherEntityType"> The other entity type to compare with. </param>
            <returns>
                The least derived type between the specified two.
                If the given entity types are not related, then <c>null</c> is returned.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityTypeExtensions.FindKey(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the primary or alternate key that is defined on the given property. Returns null if no key is defined
                for the given property.
            </summary>
            <param name="entityType"> The entity type to find the key on. </param>
            <param name="property"> The property that the key is defined on. </param>
            <returns> The key, or null if none is defined. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityTypeExtensions.FindForeignKeys(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the foreign keys defined on the given property. Only foreign keys that are defined on exactly the specified
                property are returned. Composite foreign keys that include the specified property are not returned.
            </summary>
            <param name="entityType"> The entity type to find the foreign keys on. </param>
            <param name="property"> The property to find the foreign keys on. </param>
            <returns> The foreign keys. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityTypeExtensions.FindForeignKeys(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                Gets the foreign keys defined on the given properties. Only foreign keys that are defined on exactly the specified
                set of properties are returned.
            </summary>
            <param name="entityType"> The entity type to find the foreign keys on. </param>
            <param name="properties"> The properties to find the foreign keys on. </param>
            <returns> The foreign keys. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityTypeExtensions.FindForeignKey(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                Gets the foreign key for the given properties that points to a given primary or alternate key. Returns null
                if no foreign key is found.
            </summary>
            <param name="entityType"> The entity type to find the foreign keys on. </param>
            <param name="property"> The property that the foreign key is defined on. </param>
            <param name="principalKey"> The primary or alternate key that is referenced. </param>
            <param name="principalEntityType">
                The entity type that the relationship targets. This may be different from the type that <paramref name="principalKey" />
                is defined on when the relationship targets a derived type in an inheritance hierarchy (since the key is defined on the
                base type of the hierarchy).
            </param>
            <returns> The foreign key, or null if none is defined. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityTypeExtensions.GetReferencingForeignKeys(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                Gets all foreign keys that target a given entity type (i.e. foreign keys where the given entity type
                is the principal).
            </summary>
            <param name="entityType"> The entity type to find the foreign keys for. </param>
            <returns> The foreign keys that reference the given entity type. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityTypeExtensions.FindNavigation(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Reflection.PropertyInfo)">
            <summary>
                Gets a navigation property on the given entity type. Returns null if no navigation property is found.
            </summary>
            <param name="entityType"> The entity type to find the navigation property on. </param>
            <param name="propertyInfo"> The navigation property on the entity class. </param>
            <returns> The navigation property, or null if none is found. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityTypeExtensions.FindNavigation(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.String)">
            <summary>
                Gets a navigation property on the given entity type. Returns null if no navigation property is found.
            </summary>
            <param name="entityType"> The entity type to find the navigation property on. </param>
            <param name="name"> The name of the navigation property on the entity class. </param>
            <returns> The navigation property, or null if none is found. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityTypeExtensions.GetNavigations(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                Gets all navigation properties on the given entity type.
            </summary>
            <param name="entityType"> The entity type to get navigation properties for. </param>
            <returns> All navigation properties on the given entity type. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityTypeExtensions.FindProperty(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Reflection.PropertyInfo)">
            <summary>
                <para>
                    Gets a property on the given entity type. Returns null if no property is found.
                </para>
                <para>
                    This API only finds scalar properties and does not find navigation properties. Use
                    <see cref="M:Microsoft.EntityFrameworkCore.EntityTypeExtensions.FindNavigation(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Reflection.PropertyInfo)" /> to find a navigation property.
                </para>
            </summary>
            <param name="entityType"> The entity type to find the property on. </param>
            <param name="propertyInfo"> The property on the entity class. </param>
            <returns> The property, or null if none is found. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityTypeExtensions.FindIndex(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the index defined on the given property. Returns null if no index is defined.
            </summary>
            <param name="entityType"> The entity type to find the index on. </param>
            <param name="property"> The property to find the index on. </param>
            <returns> The index, or null if none is found. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.EntityTypeExtensions.GetChangeTrackingStrategy(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                Gets the change tracking strategy being used for this entity type. This strategy indicates how the
                context detects changes to properties for an instance of the entity type.
            </summary>
            <param name="entityType"> The entity type to get the change tracking strategy for. </param>
            <returns> The change tracking strategy. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions">
            <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" />
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.Execute(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,System.Action)">
            <summary>
                Executes the specified operation.
            </summary>
            <param name="strategy">The strategy that will be used for the execution.</param>
            <param name="operation">A delegate representing an executable operation that doesn't return any results.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.Execute``1(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,System.Func{``0})">
            <summary>
                Executes the specified operation and returns the result.
            </summary>
            <param name="strategy">The strategy that will be used for the execution.</param>
            <param name="operation">
                A delegate representing an executable operation that returns the result of type <typeparamref name="TResult" />.
            </param>
            <typeparam name="TResult">The return type of <paramref name="operation" />.</typeparam>
            <returns>The result from the operation.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.Execute``1(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,System.Action{``0},``0)">
            <summary>
                Executes the specified operation.
            </summary>
            <param name="strategy">The strategy that will be used for the execution.</param>
            <param name="operation">A delegate representing an executable operation that doesn't return any results.</param>
            <param name="state">The state that will be passed to the operation.</param>
            <typeparam name="TState">The type of the state.</typeparam>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.ExecuteAsync(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,System.Func{System.Threading.Tasks.Task})">
            <summary>
                Executes the specified asynchronous operation.
            </summary>
            <param name="strategy">The strategy that will be used for the execution.</param>
            <param name="operation">A function that returns a started task.</param>
            <returns>
                A task that will run to completion if the original task completes successfully (either the
                first time or after retrying transient failures). If the task fails with a non-transient error or
                the retry limit is reached, the returned task will become faulted and the exception must be observed.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.ExecuteAsync(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task},System.Threading.CancellationToken)">
            <summary>
                Executes the specified asynchronous operation.
            </summary>
            <param name="strategy">The strategy that will be used for the execution.</param>
            <param name="operation">A function that returns a started task.</param>
            <param name="cancellationToken">
                A cancellation token used to cancel the retry operation, but not operations that are already in flight
                or that already completed successfully.
            </param>
            <returns>
                A task that will run to completion if the original task completes successfully (either the
                first time or after retrying transient failures). If the task fails with a non-transient error or
                the retry limit is reached, the returned task will become faulted and the exception must be observed.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.ExecuteAsync``1(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,System.Func{System.Threading.Tasks.Task{``0}})">
            <summary>
                Executes the specified asynchronous operation and returns the result.
            </summary>
            <param name="strategy">The strategy that will be used for the execution.</param>
            <param name="operation">
                A function that returns a started task of type <typeparamref name="TResult" />.
            </param>
            <typeparam name="TResult">
                The result type of the <see cref="T:System.Threading.Tasks.Task`1" /> returned by <paramref name="operation" />.
            </typeparam>
            <returns>
                A task that will run to completion if the original task completes successfully (either the
                first time or after retrying transient failures). If the task fails with a non-transient error or
                the retry limit is reached, the returned task will become faulted and the exception must be observed.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.ExecuteAsync``1(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{``0}},System.Threading.CancellationToken)">
            <summary>
                Executes the specified asynchronous operation and returns the result.
            </summary>
            <param name="strategy">The strategy that will be used for the execution.</param>
            <param name="operation">
                A function that returns a started task of type <typeparamref name="TResult" />.
            </param>
            <param name="cancellationToken">
                A cancellation token used to cancel the retry operation, but not operations that are already in flight
                or that already completed successfully.
            </param>
            <typeparam name="TResult">
                The result type of the <see cref="T:System.Threading.Tasks.Task`1" /> returned by <paramref name="operation" />.
            </typeparam>
            <returns>
                A task that will run to completion if the original task completes successfully (either the
                first time or after retrying transient failures). If the task fails with a non-transient error or
                the retry limit is reached, the returned task will become faulted and the exception must be observed.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.ExecuteAsync``1(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,System.Func{``0,System.Threading.Tasks.Task},``0)">
            <summary>
                Executes the specified asynchronous operation.
            </summary>
            <param name="strategy">The strategy that will be used for the execution.</param>
            <param name="operation">A function that returns a started task.</param>
            <param name="state">The state that will be passed to the operation.</param>
            <typeparam name="TState">The type of the state.</typeparam>
            <returns>
                A task that will run to completion if the original task completes successfully (either the
                first time or after retrying transient failures). If the task fails with a non-transient error or
                the retry limit is reached, the returned task will become faulted and the exception must be observed.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.ExecuteAsync``1(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task},``0,System.Threading.CancellationToken)">
            <summary>
                Executes the specified asynchronous operation.
            </summary>
            <param name="strategy">The strategy that will be used for the execution.</param>
            <param name="operation">A function that returns a started task.</param>
            <param name="cancellationToken">
                A cancellation token used to cancel the retry operation, but not operations that are already in flight
                or that already completed successfully.
            </param>
            <param name="state">The state that will be passed to the operation.</param>
            <typeparam name="TState">The type of the state.</typeparam>
            <returns>
                A task that will run to completion if the original task completes successfully (either the
                first time or after retrying transient failures). If the task fails with a non-transient error or
                the retry limit is reached, the returned task will become faulted and the exception must be observed.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.ExecuteAsync``2(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,System.Func{``0,System.Threading.Tasks.Task{``1}},``0)">
            <summary>
                Executes the specified asynchronous operation and returns the result.
            </summary>
            <param name="strategy">The strategy that will be used for the execution.</param>
            <param name="operation">
                A function that returns a started task of type <typeparamref name="TResult" />.
            </param>
            <param name="state">The state that will be passed to the operation.</param>
            <typeparam name="TState">The type of the state.</typeparam>
            <typeparam name="TResult">
                The result type of the <see cref="T:System.Threading.Tasks.Task`1" /> returned by <paramref name="operation" />.
            </typeparam>
            <returns>
                A task that will run to completion if the original task completes successfully (either the
                first time or after retrying transient failures). If the task fails with a non-transient error or
                the retry limit is reached, the returned task will become faulted and the exception must be observed.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.Execute``2(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,System.Func{``0,``1},``0)">
            <summary>
                Executes the specified operation and returns the result.
            </summary>
            <param name="strategy">The strategy that will be used for the execution.</param>
            <param name="operation">
                A delegate representing an executable operation that returns the result of type <typeparamref name="TResult" />.
            </param>
            <param name="state">The state that will be passed to the operation.</param>
            <typeparam name="TState">The type of the state.</typeparam>
            <typeparam name="TResult">The return type of <paramref name="operation" />.</typeparam>
            <returns>The result from the operation.</returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.ExecuteAsync``2(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``1}},``0,System.Threading.CancellationToken)">
            <summary>
                Executes the specified asynchronous operation and returns the result.
            </summary>
            <param name="strategy">The strategy that will be used for the execution.</param>
            <param name="operation">
                A function that returns a started task of type <typeparamref name="TResult" />.
            </param>
            <param name="cancellationToken">
                A cancellation token used to cancel the retry operation, but not operations that are already in flight
                or that already completed successfully.
            </param>
            <param name="state">The state that will be passed to the operation.</param>
            <typeparam name="TState">The type of the state.</typeparam>
            <typeparam name="TResult">
                The result type of the <see cref="T:System.Threading.Tasks.Task`1" /> returned by <paramref name="operation" />.
            </typeparam>
            <returns>
                A task that will run to completion if the original task completes successfully (either the
                first time or after retrying transient failures). If the task fails with a non-transient error or
                the retry limit is reached, the returned task will become faulted and the exception must be observed.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.ExecuteInTransaction``2(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,System.Func{``0,``1},System.Func{``0,System.Boolean},``0,Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                Executes the specified operation in a transaction and returns the result after commiting it.
            </summary>
            <param name="strategy">The strategy that will be used for the execution.</param>
            <param name="operation">
                A delegate representing an executable operation that returns the result of type <typeparamref name="TResult" />.
            </param>
            <param name="verifySucceeded">
                A delegate that tests whether the operation succeeded even though an exception was thrown when the
                transaction was being committed.
            </param>
            <param name="state"> The state that will be passed to the operation. </param>
            <param name="context"> The context that will be used to start the transaction. </param>
            <typeparam name="TState"> The type of the state. </typeparam>
            <typeparam name="TResult"> The return type of <paramref name="operation" />. </typeparam>
            <returns> The result from the operation. </returns>
            <exception cref="T:Microsoft.EntityFrameworkCore.Storage.RetryLimitExceededException">
                Thrown if the operation has not succeeded after the configured number of retries.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ExecutionStrategyExtensions.ExecuteInTransactionAsync``2(Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy,System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},``0,Microsoft.EntityFrameworkCore.DbContext,System.Threading.CancellationToken)">
            <summary>
                Executes the specified asynchronous operation and returns the result.
            </summary>
            <param name="strategy">The strategy that will be used for the execution.</param>
            <param name="operation">
                A function that returns a started task of type <typeparamref name="TResult" />.
            </param>
            <param name="verifySucceeded">
                A delegate that tests whether the operation succeeded even though an exception was thrown when the
                transaction was being committed.
            </param>
            <param name="cancellationToken">
                A cancellation token used to cancel the retry operation, but not operations that are already in flight
                or that already completed successfully.
            </param>
            <param name="state"> The state that will be passed to the operation. </param>
            <param name="context"> The context that will be used to start the transaction. </param>
            <typeparam name="TState"> The type of the state. </typeparam>
            <typeparam name="TResult"> The result type of the <see cref="T:System.Threading.Tasks.Task`1" /> returned by <paramref name="operation" />. </typeparam>
            <returns>
                A task that will run to completion if the original task completes successfully (either the
                first time or after retrying transient failures). If the task fails with a non-transient error or
                the retry limit is reached, the returned task will become faulted and the exception must be observed.
            </returns>
            <exception cref="T:Microsoft.EntityFrameworkCore.Storage.RetryLimitExceededException">
                Thrown if the operation has not succeeded after the configured number of retries.
            </exception>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.KeyExtensions">
            <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IKey" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.KeyExtensions.GetReferencingForeignKeys(Microsoft.EntityFrameworkCore.Metadata.IKey)">
            <summary>
                Gets all foreign keys that target a given primary or alternate key.
            </summary>
            <param name="key"> The key to find the foreign keys for. </param>
            <returns> The foreign keys that reference the given key. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ModelExtensions">
            <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IModel" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ModelExtensions.FindEntityType(Microsoft.EntityFrameworkCore.Metadata.IModel,System.Type)">
            <summary>
                Gets the entity that maps the given entity class. Returns null if no entity type with the given name is found.
            </summary>
            <param name="model"> The model to find the entity type in. </param>
            <param name="type"> The type of the entity class to find the type for. </param>
            <returns> The entity type, or null if none if found. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ModelExtensions.GetChangeTrackingStrategy(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                Gets the default change tracking strategy being used for entities in the model. This strategy indicates how the
                context detects changes to properties for an instance of an entity type.
            </summary>
            <param name="model"> The model to get the default change tracking strategy for. </param>
            <returns> The change tracking strategy. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ModelExtensions.GetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                <para>
                    Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" /> being used for properties of entity types in this model.
                    Null indicates that the default property access mode is being used.
                </para>
                <para>
                    Note that individual entity types can override this access mode, and individual properties of
                    entity types can override the access mode set on the entity type. The value returned here will
                    be used for any property for which no override has been specified.
                </para>
            </summary>
            <param name="model"> The model to get the access mode for. </param>
            <returns> The access mode being used, or null if the default access mode is being used. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.MutableAnnotatableExtensions">
            <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableAnnotatableExtensions.GetOrAddAnnotation(Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable,System.String,System.String)">
            <summary>
                Gets the existing annotation with a given key, or adds a new annotation if one does not exist.
            </summary>
            <param name="annotatable"> The object to find or add the annotation to. </param>
            <param name="annotationName"> The key of the annotation to be found or added. </param>
            <param name="value"> The value to be stored in the annotation if a new one is created. </param>
            <returns> The found or added annotation. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableAnnotatableExtensions.AddAnnotations(Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation})">
            <summary>
                Adds annotations to an object.
            </summary>
            <param name="annotatable"> The object to add the annotations to. </param>
            <param name="annotations"> The annotations to be added. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions">
            <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetDerivedTypes(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType)">
            <summary>
                Gets all types in the model that derive from a given entity type.
            </summary>
            <param name="entityType"> The base type to find types that derive from. </param>
            <returns> The derived types. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.RootType(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType)">
            <summary>
                Gets the root base type for a given entity type.
            </summary>
            <param name="entityType"> The type to find the root of. </param>
            <returns>
                The root base type. If the given entity type is not a derived type, then the same entity type is returned.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.SetPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableProperty)">
            <summary>
                Sets the primary key for this entity.
            </summary>
            <param name="entityType"> The entity type to set the key on. </param>
            <param name="property"> The primary key property. </param>
            <returns> The newly created key. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetOrSetPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableProperty)">
            <summary>
                Gets the existing primary key of an entity, or sets it if one is not defined.
            </summary>
            <param name="entityType"> The entity type to get or set the key on. </param>
            <param name="property"> The property to set as the primary key if one is not already defined. </param>
            <returns> The existing or newly created key. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetOrSetPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IMutableProperty})">
            <summary>
                Gets the existing primary key of an entity, or sets it if one is not defined.
            </summary>
            <param name="entityType"> The entity type to get or set the key on. </param>
            <param name="properties"> The properties to set as the primary key if one is not already defined. </param>
            <returns> The existing or newly created key. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.FindKey(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the primary or alternate key that is defined on the given property. Returns null if no key is defined
                for the given property.
            </summary>
            <param name="entityType"> The entity type to find the key on. </param>
            <param name="property"> The property that the key is defined on. </param>
            <returns> The key, or null if none is defined. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.AddKey(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableProperty)">
            <summary>
                Adds a new alternate key to this entity type.
            </summary>
            <param name="entityType"> The entity type to add the alternate key to. </param>
            <param name="property"> The property to use as an alternate key. </param>
            <returns> The newly created key. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetOrAddKey(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableProperty)">
            <summary>
                Gets the existing alternate key defined on a property, or creates a new one if one is not
                already defined.
            </summary>
            <param name="entityType"> The entity type to get or create the alternate key on. </param>
            <param name="property"> The property that is used as the alternate key. </param>
            <returns> The existing or newly created alternate key. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetOrAddKey(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IMutableProperty})">
            <summary>
                Gets the existing alternate key defined on a set of properties, or creates a new one if one is not
                already defined.
            </summary>
            <param name="entityType"> The entity type to get or create the alternate key on. </param>
            <param name="properties"> The properties that are used as the alternate key. </param>
            <returns> The existing or newly created alternate key. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.FindForeignKeys(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the foreign keys defined on the given property. Only foreign keys that are defined on exactly the specified
                property are returned. Composite foreign keys that include the specified property are not returned.
            </summary>
            <param name="entityType"> The entity type to find the foreign keys on. </param>
            <param name="property"> The property to find the foreign keys on. </param>
            <returns> The foreign keys. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.FindForeignKeys(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                Gets the foreign keys defined on the given properties. Only foreign keys that are defined on exactly the specified
                set of properties are returned.
            </summary>
            <param name="entityType"> The entity type to find the foreign keys on. </param>
            <param name="properties"> The properties to find the foreign keys on. </param>
            <returns> The foreign keys. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.FindForeignKey(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                Gets the foreign key for the given properties that points to a given primary or alternate key. Returns null
                if no foreign key is found.
            </summary>
            <param name="entityType"> The entity type to find the foreign keys on. </param>
            <param name="property"> The property that the foreign key is defined on. </param>
            <param name="principalKey"> The primary or alternate key that is referenced. </param>
            <param name="principalEntityType">
                The entity type that the relationship targets. This may be different from the type that <paramref name="principalKey" />
                is defined on when the relationship targets a derived type in an inheritance hierarchy (since the key is defined on the
                base type of the hierarchy).
            </param>
            <returns> The foreign key, or null if none is defined. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetReferencingForeignKeys(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType)">
            <summary>
                Gets all foreign keys that target a given entity type (i.e. foreign keys where the given entity type
                is the principal).
            </summary>
            <param name="entityType"> The entity type to find the foreign keys for. </param>
            <returns> The foreign keys that reference the given entity type. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.AddForeignKey(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,Microsoft.EntityFrameworkCore.Metadata.IMutableKey,Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType)">
            <summary>
                Adds a new relationship to this entity.
            </summary>
            <param name="entityType"> The entity type to add the foreign key to. </param>
            <param name="property"> The property that the foreign key is defined on. </param>
            <param name="principalKey"> The primary or alternate key that is referenced. </param>
            <param name="principalEntityType">
                The entity type that the relationship targets. This may be different from the type that <paramref name="principalKey" />
                is defined on when the relationship targets a derived type in an inheritance hierarchy (since the key is defined on the
                base type of the hierarchy).
            </param>
            <returns> The newly created foreign key. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetOrAddForeignKey(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,Microsoft.EntityFrameworkCore.Metadata.IMutableKey,Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType)">
            <summary>
                Gets an existing relationship, or creates a new one if one is not already defined.
            </summary>
            <param name="entityType"> The entity type to get or add the foreign key to. </param>
            <param name="property"> The property that the foreign key is defined on. </param>
            <param name="principalKey"> The primary or alternate key that is referenced. </param>
            <param name="principalEntityType">
                The entity type that the relationship targets. This may be different from the type that <paramref name="principalKey" />
                is defined on when the relationship targets a derived type in an inheritance hierarchy (since the key is defined on the
                base type of the hierarchy).
            </param>
            <returns> The existing or newly created foreign key. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetOrAddForeignKey(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IMutableProperty},Microsoft.EntityFrameworkCore.Metadata.IMutableKey,Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType)">
            <summary>
                Gets an existing relationship, or creates a new one if one is not already defined.
            </summary>
            <param name="entityType"> The entity type to get or add the foreign key to. </param>
            <param name="properties"> The properties that the foreign key is defined on. </param>
            <param name="principalKey"> The primary or alternate key that is referenced. </param>
            <param name="principalEntityType">
                The entity type that the relationship targets. This may be different from the type that <paramref name="principalKey" />
                is defined on when the relationship targets a derived type in an inheritance hierarchy (since the key is defined on the
                base type of the hierarchy).
            </param>
            <returns> The existing or newly created foreign key. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.FindNavigation(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Reflection.PropertyInfo)">
            <summary>
                Gets a navigation property on the given entity type. Returns null if no navigation property is found.
            </summary>
            <param name="entityType"> The entity type to find the navigation property on. </param>
            <param name="propertyInfo"> The navigation property on the entity class. </param>
            <returns> The navigation property, or null if none is found. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.FindNavigation(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.String)">
            <summary>
                Gets a navigation property on the given entity type. Returns null if no navigation property is found.
            </summary>
            <param name="entityType"> The entity type to find the navigation property on. </param>
            <param name="name"> The name of the navigation property on the entity class. </param>
            <returns> The navigation property, or null if none is found. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetNavigations(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType)">
            <summary>
                Gets all navigation properties on the given entity type.
            </summary>
            <param name="entityType"> The entity type to get navigation properties for. </param>
            <returns> All navigation properties on the given entity type. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.FindProperty(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Reflection.PropertyInfo)">
            <summary>
                <para>
                    Gets a property on the given entity type. Returns null if no property is found.
                </para>
                <para>
                    This API only finds scalar properties and does not find navigation properties. Use
                    <see cref="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.FindNavigation(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Reflection.PropertyInfo)" /> to find a navigation property.
                </para>
            </summary>
            <param name="entityType"> The entity type to find the property on. </param>
            <param name="propertyInfo"> The property on the entity class. </param>
            <returns> The property, or null if none is found. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.AddProperty(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Reflection.PropertyInfo)">
            <summary>
                Adds a property to this entity.
            </summary>
            <param name="entityType"> The entity type to add the property to. </param>
            <param name="propertyInfo"> The corresponding property in the entity class. </param>
            <returns> The newly created property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetOrAddProperty(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.String,System.Type)">
            <summary>
                Gets the property with the given name, or creates a new one if one is not already defined.
            </summary>
            <param name="entityType"> The entity type to get or add the property to. </param>
            <param name="name"> The name of the property. </param>
            <param name="propertyType"> The type of value the property will hold. </param>
            <returns> The existing or newly created property. </returns>
            <remarks> The returned property might not have the specified type and shadowness. </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetOrAddProperty(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Reflection.PropertyInfo)">
            <summary>
                Gets the property with the given name, or creates a new one if one is not already defined.
            </summary>
            <param name="entityType"> The entity type to get or add the property to. </param>
            <param name="propertyInfo"> The corresponding property in the entity class. </param>
            <returns> The existing or newly created property. </returns>
            <remarks> The returned property might not have the specified type and shadowness. </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.FindIndex(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the index defined on the given property. Returns null if no index is defined.
            </summary>
            <param name="entityType"> The entity type to find the index on. </param>
            <param name="property"> The property to find the index on. </param>
            <returns> The index, or null if none is found. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.AddIndex(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableProperty)">
            <summary>
                Adds an index to this entity.
            </summary>
            <param name="entityType"> The entity type to add the index to. </param>
            <param name="property"> The property to be indexed. </param>
            <returns> The newly created index. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetOrAddIndex(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,Microsoft.EntityFrameworkCore.Metadata.IMutableProperty)">
            <summary>
                Gets the index defined on the given property or creates a new one if one is not already defined.
            </summary>
            <param name="entityType"> The entity type to get or add the index to. </param>
            <param name="property"> The property to be indexed. </param>
            <returns> The existing or newly created index. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetOrAddIndex(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IMutableProperty})">
            <summary>
                Gets the index defined on the given property or creates a new one if one is not already defined.
            </summary>
            <param name="entityType"> The entity type to get or add the index to. </param>
            <param name="properties"> The properties to be indexed. </param>
            <returns> The existing or newly created index. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode})">
            <summary>
                <para>
                    Sets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" /> to use for properties of this entity type.
                </para>
                <para>
                    Note that individual properties can override this access mode. The value set here will
                    be used for any property for which no override has been specified.
                </para>
            </summary>
            <param name="entityType"> The entity type for which to set the access mode. </param>
            <param name="propertyAccessMode"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" />, or null to clear the mode set.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.MutableKeyExtensions">
            <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableKey" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableKeyExtensions.GetReferencingForeignKeys(Microsoft.EntityFrameworkCore.Metadata.IMutableKey)">
            <summary>
                Gets all foreign keys that target a given primary or alternate key.
            </summary>
            <param name="key"> The key to find the foreign keys for. </param>
            <returns> The foreign keys that reference the given key. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.MutableModelExtensions">
            <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableModel" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableModelExtensions.FindEntityType(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.Type)">
            <summary>
                Gets the entity that maps the given entity class. Returns null if no entity type with the given name is found.
            </summary>
            <param name="model"> The model to find the entity type in. </param>
            <param name="type"> The type of the entity class to find the type for. </param>
            <returns> The entity type, or null if none if found. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableModelExtensions.GetOrAddEntityType(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.String)">
            <summary>
                Gets the entity type with the given name or adds a new entity type if none is found.
            </summary>
            <param name="model"> The model to find or add the entity type to. </param>
            <param name="name"> The name of the entity type. </param>
            <returns> The existing or newly created entity type. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableModelExtensions.GetOrAddEntityType(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.Type)">
            <summary>
                Gets the entity type with the given .NET type or adds a new entity type if none is found.
            </summary>
            <param name="model"> The model to find or add the entity type to. </param>
            <param name="type"> The .NET type of the entity type. </param>
            <returns> The existing or newly created entity type. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableModelExtensions.RemoveEntityType(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.Type)">
            <summary>
                Removes an entity type from the model.
            </summary>
            <param name="model"> The model to remove the entity type from. </param>
            <param name="type"> The entity type to be removed. </param>
            <returns> The entity type that was removed. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableModelExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutableModel,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode})">
            <summary>
                <para>
                    Sets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" /> to use for properties of all entity types
                    in this model.
                </para>
                <para>
                    Note that individual entity types can override this access mode, and individual properties of
                    entity types can override the access mode set on the entity type. The value set here will
                    be used for any property for which no override has been specified.
                </para>
            </summary>
            <param name="model"> The model to set the access mode for. </param>
            <param name="propertyAccessMode"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" />, or null to clear the mode set.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.MutableNavigationExtensions">
            <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableNavigationExtensions.FindInverse(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation)">
            <summary>
                Gets the navigation property on the other end of the relationship. Returns null if
                there is no navigation property defined on the other end of the relationship.
            </summary>
            <param name="navigation"> The navigation property to find the inverse of. </param>
            <returns>
                The inverse navigation, or null if none is defined.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutableNavigationExtensions.GetTargetType(Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation)">
            <summary>
                Gets the entity type that a given navigation property will hold an instance of
                (or hold instances of if it is a collection navigation).
            </summary>
            <param name="navigation"> The navigation property to find the target entity type of. </param>
            <returns> The target entity type. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions">
            <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetField(Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase,System.String)">
            <summary>
                <para>
                    Sets the backing field to use for this property.
                </para>
                <para>
                    Backing fields are normally found by convention as described
                    here: http://go.microsoft.com/fwlink/?LinkId=723277.
                    This method is useful for setting backing fields explicitly in cases where the
                    correct field is not found by convention.
                </para>
                <para>
                    By default, the backing field, if one is found or has been specified, is used when
                    new objects are constructed, typically when entities are queried from the database.
                    Properties are used for all other accesses. This can be changed by calling
                    <see cref="M:Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode})" />.
                </para>
            </summary>
            <param name="property"> The property for which the backing field should be set. </param>
            <param name="fieldName"> The name of the field to use. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutablePropertyBaseExtensions.SetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode})">
            <summary>
                Sets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" /> to use for this property.
            </summary>
            <param name="property"> The property for which to set the access mode. </param>
            <param name="propertyAccessMode"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" />, or null to clear the mode set.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.MutablePropertyExtensions">
            <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableProperty" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutablePropertyExtensions.SetValueGeneratorFactory(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator})">
            <summary>
                <para>
                    Sets the factory to use for generating values for this property, or null to clear any previously set factory.
                </para>
                <para>
                    Setting null does not disable value generation for this property, it just clears any generator explicitly
                    configured for this property. The database provider may still have a value generator for the property type.
                </para>
            </summary>
            <param name="property"> The property to set the value generator for. </param>
            <param name="valueGeneratorFactory">
                A factory that will be used to create the value generator, or null to
                clear any previously set factory.
            </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutablePropertyExtensions.SetMaxLength(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.Nullable{System.Int32})">
            <summary>
                Sets the maximum length of data that is allowed in this property. For example, if the property is a <see cref="T:System.String" /> '
                then this is the maximum number of characters.
            </summary>
            <param name="property"> The property to set the maximum length of. </param>
            <param name="maxLength"> The maximum length of data that is allowed in this property. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutablePropertyExtensions.IsUnicode(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty,System.Nullable{System.Boolean})">
            <summary>
                Sets a value indicating whether or not this property can persist unicode characters.
            </summary>
            <param name="property"> The property to set the value for. </param>
            <param name="unicode"> True if the property accepts unicode characters, false if it does not, null to clear the setting. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutablePropertyExtensions.GetContainingForeignKeys(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty)">
            <summary>
                Gets all foreign keys that use this property (including composite foreign keys in which this property
                is included).
            </summary>
            <param name="property"> The property to get foreign keys for. </param>
            <returns>
                The foreign keys that use this property.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutablePropertyExtensions.GetContainingPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty)">
            <summary>
                Gets the primary key that uses this property (including a composite primary key in which this property
                is included).
            </summary>
            <param name="property"> The property to get primary key for. </param>
            <returns>
                The primary that use this property, or null if it is not part of the primary key.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.MutablePropertyExtensions.GetContainingKeys(Microsoft.EntityFrameworkCore.Metadata.IMutableProperty)">
            <summary>
                Gets all primary or alternate keys that use this property (including composite keys in which this property
                is included).
            </summary>
            <param name="property"> The property to get primary and alternate keys for. </param>
            <returns>
                The primary and alternate keys that use this property.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.NavigationExtensions">
            <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.INavigation" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NavigationExtensions.IsDependentToPrincipal(Microsoft.EntityFrameworkCore.Metadata.INavigation)">
            <summary>
                Gets a value indicating whether the given navigation property is the navigation property on the dependent entity
                type that points to the principal entity.
            </summary>
            <param name="navigation"> The navigation property to check. </param>
            <returns>
                True if the given navigation property is the navigation property on the dependent entity
                type that points to the principal entity, otherwise false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NavigationExtensions.IsCollection(Microsoft.EntityFrameworkCore.Metadata.INavigation)">
            <summary>
                Gets a value indicating whether the given navigation property is a collection property.
            </summary>
            <param name="navigation"> The navigation property to check. </param>
            <returns>
                True if this is a collection property, false if it is a reference property.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NavigationExtensions.FindInverse(Microsoft.EntityFrameworkCore.Metadata.INavigation)">
            <summary>
                Gets the navigation property on the other end of the relationship. Returns null if
                there is no navigation property defined on the other end of the relationship.
            </summary>
            <param name="navigation"> The navigation property to find the inverse of. </param>
            <returns>
                The inverse navigation, or null if none is defined.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.NavigationExtensions.GetTargetType(Microsoft.EntityFrameworkCore.Metadata.INavigation)">
            <summary>
                Gets the entity type that a given navigation property will hold an instance of
                (or hold instances of if it is a collection navigation).
            </summary>
            <param name="navigation"> The navigation property to find the target entity type of. </param>
            <returns> The target entity type. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ObservableCollectionExtensions">
            <summary>
                Extension methods for <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ObservableCollectionExtensions.ToBindingList``1(System.Collections.ObjectModel.ObservableCollection{``0})">
            <summary>
                Returns an <see cref="T:System.ComponentModel.BindingList`1" /> implementation that stays in sync with the given
                <see cref="T:System.Collections.ObjectModel.ObservableCollection`1" />.
            </summary>
            <typeparam name="T"> The element type. </typeparam>
            <param name="source"> The collection that the binding list will stay in sync with. </param>
            <returns> The binding list. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.PropertyBaseExtensions">
            <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.PropertyBaseExtensions.GetFieldName(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                Gets the name of the backing field for this property, or null if the backing field
                is not known.
            </summary>
            <param name="propertyBase"> The property for which the backing field will be returned. </param>
            <returns> The name of the backing field, or null. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.PropertyBaseExtensions.GetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                <para>
                    Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" /> being used for this property.
                    Null indicates that the default property access mode is being used.
                </para>
            </summary>
            <param name="propertyBase"> The property for which to get the access mode. </param>
            <returns> The access mode being used, or null if the default access mode is being used. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.PropertyExtensions">
            <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.PropertyExtensions.GetValueGeneratorFactory(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the factory that has been set to generate values for this property, if any.
            </summary>
            <param name="property"> The property to get the value generator factory for. </param>
            <returns> The factory, or null if no factory has been set. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.PropertyExtensions.GetMaxLength(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the maximum length of data that is allowed in this property. For example, if the property is a <see cref="T:System.String" /> '
                then this is the maximum number of characters.
            </summary>
            <param name="property"> The property to get the maximum length of. </param>
            <returns> The maximum length, or null if none if defined. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.PropertyExtensions.IsUnicode(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets a value indicating whether or not the property can persist unicode characters.
            </summary>
            <param name="property"> The property to get the unicode setting for. </param>
            <returns> The unicode setting, or null if none if defined. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.PropertyExtensions.IsForeignKey(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets a value indicating whether this property is used as a foreign key (or part of a composite foreign key).
            </summary>
            <param name="property"> The property to check. </param>
            <returns>
                True if the property is used as a foreign key, otherwise false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.PropertyExtensions.IsIndex(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets a value indicating whether this property is used as an index (or part of a composite index).
            </summary>
            <param name="property"> The property to check. </param>
            <returns>
                True if the property is used as an index, otherwise false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.PropertyExtensions.IsPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets a value indicating whether this property is used as the primary key (or part of a composite primary key).
            </summary>
            <param name="property"> The property to check. </param>
            <returns>
                True if the property is used as the primary key, otherwise false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.PropertyExtensions.IsKey(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets a value indicating whether this property is used as part of a primary or alternate key
                (or part of a composite primary or alternate key).
            </summary>
            <param name="property"> The property to check. </param>
            <returns>
                True if the property is part of a key, otherwise false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.PropertyExtensions.GetContainingForeignKeys(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets all foreign keys that use this property (including composite foreign keys in which this property
                is included).
            </summary>
            <param name="property"> The property to get foreign keys for. </param>
            <returns>
                The foreign keys that use this property.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.PropertyExtensions.GetContainingIndexes(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets all indexes that use this property (including composite indexes in which this property
                is included).
            </summary>
            <param name="property"> The property to get indexes for. </param>
            <returns>
                The indexes that use this property.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.PropertyExtensions.GetContainingPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the primary key that uses this property (including a composite primary key in which this property
                is included).
            </summary>
            <param name="property"> The property to get primary key for. </param>
            <returns>
                The primary that use this property, or null if it is not part of the primary key.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.PropertyExtensions.GetContainingKeys(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets all primary or alternate keys that use this property (including composite keys in which this property
                is included).
            </summary>
            <param name="property"> The property to get primary and alternate keys for. </param>
            <returns>
                The primary and alternate keys that use this property.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.TypeBaseExtensions">
            <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ITypeBase" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.TypeBaseExtensions.GetPropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.ITypeBase)">
            <summary>
                <para>
                    Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" /> being used for properties of this type.
                    Null indicates that the default property access mode is being used.
                </para>
                <para>
                    Note that individual properties can override this access mode. The value returned here will
                    be used for any property for which no override has been specified.
                </para>
            </summary>
            <param name="typeBase"> The type for which to get the access mode. </param>
            <returns> The access mode being used, or null if the default access mode is being used. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.ExpressionExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ExpressionExtensions.GetPropertyAccess(System.Linq.Expressions.LambdaExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ExpressionExtensions.GetPropertyAccessList(System.Linq.Expressions.LambdaExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ExpressionExtensions.MatchPropertyAccessList(System.Linq.Expressions.LambdaExpression,System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Reflection.PropertyInfo})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ExpressionExtensions.MatchSimplePropertyAccess(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ExpressionExtensions.GetComplexPropertyAccess(System.Linq.Expressions.LambdaExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ExpressionExtensions.RemoveConvert(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ExpressionExtensions.GetRootExpression``1(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ExpressionExtensions.IsLogicalOperation(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ExpressionExtensions.IsComparisonOperation(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.AsyncLock">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.AsyncLock.#ctor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.AsyncLock.LockAsync(System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.AsyncLock.Lock">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.AsyncLock.Releaser">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.AsyncLock.Releaser.Dispose">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.#ctor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSection">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.EnterCriticalSectionAsync(System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ConcurrencyDetector.Dispose">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.#ctor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.#ctor(Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.IsSensitiveDataLoggingEnabled">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.SensitiveDataLoggingWarned">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.Model">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.LoggerFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.MemoryCache">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.InternalServiceProvider">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.WarningsConfiguration">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.QueryTrackingBehavior">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.ReplaceService(System.Type,System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.ReplacedServices">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreOptionsExtension.ApplyServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.CurrentDbContext">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CurrentDbContext.#ctor(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CurrentDbContext.Context">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.DatabaseProviderSelector">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DatabaseProviderSelector.#ctor(System.IServiceProvider,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DatabaseProviderSelector.SelectServices">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.DbContextServices">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DbContextServices.Initialize(System.IServiceProvider,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DbContextServices.CurrentContext">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DbContextServices.Model">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DbContextServices.LoggerFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DbContextServices.MemoryCache">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DbContextServices.ContextOptions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DbContextServices.DatabaseProviderServices">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DbContextServices.InternalServiceProvider">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.DbSetFinder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DbSetFinder.FindSets(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.DbSetFinderExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DbSetFinderExtensions.CreateClrTypeDbSetMapping(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.DbSetInitializer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DbSetInitializer.#ctor(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.Internal.IDbSetSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DbSetInitializer.InitializeSets(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DbSetInitializer.CreateSet``1(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.DbSetProperty">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DbSetProperty.#ctor(System.String,System.Type,Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DbSetProperty.Name">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DbSetProperty.ClrType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.DbSetProperty.Setter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.DbSetSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.DbSetSource.Create(Microsoft.EntityFrameworkCore.DbContext,System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.#ctor(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Find(System.Object[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Microsoft#EntityFrameworkCore#Internal#IEntityFinder#Find(System.Object[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.FindAsync(System.Object[],System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Microsoft#EntityFrameworkCore#Internal#IEntityFinder#FindAsync(System.Object[],System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Load(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.EntityFinder`1.Microsoft#EntityFrameworkCore#Internal#IEntityFinder#Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.EntityFinderSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.EntityFinderSource.Create(Microsoft.EntityFrameworkCore.DbContext,System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.OrderByOrdinal``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,System.String})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Distinct``1(System.Collections.Generic.IEnumerable{``0},System.Func{``0,``0,System.Boolean})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.Join(System.Collections.Generic.IEnumerable{System.Object},System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StructuralSequenceEqual``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.EnumerableExtensions.StartsWith``1(System.Collections.Generic.IEnumerable{``0},System.Collections.Generic.IEnumerable{``0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.Graph`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.Graph`1.Vertices">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.Graph`1.GetOutgoingNeighbours(`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.Graph`1.GetIncomingNeighbours(`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.Graph`1.GetUnreachableVertices(System.Collections.Generic.IReadOnlyList{`0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector.EnterCriticalSection">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector.EnterCriticalSectionAsync(System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext.Context">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.IDatabaseProviderSelector">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IDatabaseProviderSelector.SelectServices">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.IDbContextServices">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.Initialize(System.IServiceProvider,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions,Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.CurrentContext">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.Model">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.LoggerFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.MemoryCache">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.ContextOptions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.DatabaseProviderServices">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.IDbContextServices.InternalServiceProvider">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.IDbSetFinder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IDbSetFinder.FindSets(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.InitializeSets(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IDbSetInitializer.CreateSet``1(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.IDbSetSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IDbSetSource.Create(Microsoft.EntityFrameworkCore.DbContext,System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.IEntityFinder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Find(System.Object[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.FindAsync(System.Object[],System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Load(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.LoadAsync(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValues(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder.GetDatabaseValuesAsync(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IEntityFinderSource.Create(Microsoft.EntityFrameworkCore.DbContext,System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.Find(System.Object[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.FindAsync(System.Object[],System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IEntityFinder`1.Query(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.IModelValidator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IModelValidator.Validate(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.#ctor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.#ctor(Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.Length">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.Append(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.AppendLine">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.AppendLine(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.AppendLines(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.Clear">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.IncrementIndent">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.DecrementIndent">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.Indent">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder.ToString">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.InterceptingLogger`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.InterceptingLogger`1.#ctor(Microsoft.EntityFrameworkCore.Internal.IDbContextServices,System.IServiceProvider,Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.InterceptingLogger`1.Log``1(Microsoft.Extensions.Logging.LogLevel,Microsoft.Extensions.Logging.EventId,``0,System.Exception,System.Func{``0,System.Exception,System.String})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.InterceptingLogger`1.IsEnabled(Microsoft.Extensions.Logging.LogLevel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.InterceptingLogger`1.BeginScope``1(``0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.#ctor(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.Local">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.Find(System.Object[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.FindAsync(System.Object[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.FindAsync(System.Object[],System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.Add(`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddAsync(`0,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.Attach(`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.Remove(`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.Update(`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddRange(`0[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddRangeAsync(`0[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AttachRange(`0[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.RemoveRange(`0[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.UpdateRange(`0[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AddRangeAsync(System.Collections.Generic.IEnumerable{`0},System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.AttachRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.RemoveRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.InternalDbSet`1.UpdateRange(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.IServiceInjectionSite">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.IServiceInjectionSite.InjectServices(System.IServiceProvider)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.LazyRef`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.LazyRef`1.#ctor(System.Func{`0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.LazyRef`1.#ctor(`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.LazyRef`1.Value">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.LazyRef`1.HasValue">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.LazyRef`1.Reset(System.Func{`0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.LoggingModelValidator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.LoggingModelValidator.#ctor(Microsoft.Extensions.Logging.ILogger{Microsoft.EntityFrameworkCore.Internal.LoggingModelValidator})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.LoggingModelValidator.Logger">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.LoggingModelValidator.ShowWarning(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.ModelValidator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ModelValidator.Validate(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ModelValidator.EnsureNoShadowEntities(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ModelValidator.EnsureNoShadowKeys(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ModelValidator.EnsureNonNullPrimaryKeys(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ModelValidator.EnsureClrInheritance(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ModelValidator.EnsureChangeTrackingStrategy(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ModelValidator.EnsureFieldMapping(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ModelValidator.ShowError(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ModelValidator.ShowWarning(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.Multigraph`2">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.Multigraph`2.ToString(`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.Multigraph`2.Edges">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.Multigraph`2.GetEdges(`0,`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.Multigraph`2.AddVertex(`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.Multigraph`2.AddVertices(System.Collections.Generic.IEnumerable{`0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.Multigraph`2.AddEdge(`0,`0,`1)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.Multigraph`2.AddEdges(`0,`0,System.Collections.Generic.IEnumerable{`1})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.Multigraph`2.TopologicalSort">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.Multigraph`2.TopologicalSort(System.Func{`0,`0,System.Collections.Generic.IEnumerable{`1},System.Boolean})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.Multigraph`2.TopologicalSort(System.Func{System.Collections.Generic.IEnumerable{System.Tuple{`0,`0,System.Collections.Generic.IEnumerable{`1}}},System.String})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.Multigraph`2.TopologicalSort(System.Func{`0,`0,System.Collections.Generic.IEnumerable{`1},System.Boolean},System.Func{System.Collections.Generic.IEnumerable{System.Tuple{`0,`0,System.Collections.Generic.IEnumerable{`1}}},System.String})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.Multigraph`2.BatchingTopologicalSort">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.Multigraph`2.BatchingTopologicalSort(System.Func{System.Collections.Generic.IEnumerable{System.Tuple{`0,`0,System.Collections.Generic.IEnumerable{`1}}},System.String})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.Multigraph`2.Vertices">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.Multigraph`2.GetOutgoingNeighbours(`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.Multigraph`2.GetIncomingNeighbours(`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.NonCapturingLazyInitializer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.NonCapturingLazyInitializer.EnsureInitialized``2(``1@,``0,System.Func{``0,``1})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.NonCapturingLazyInitializer.EnsureInitialized``1(``0@,``0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.ProductInfo">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ProductInfo.GetVersion">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.ReferenceEnumerableEqualityComparer`2">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ReferenceEnumerableEqualityComparer`2.Equals(`0,`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ReferenceEnumerableEqualityComparer`2.GetHashCode(`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.ReferenceEqualityComparer.Instance">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.ServiceProviderCache">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.ServiceProviderCache.Instance">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ServiceProviderCache.GetOrAdd(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.ServiceProviderExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.ServiceProviderExtensions.InjectAdditionalServices``1(System.IServiceProvider,``0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.TypeExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.TypeExtensions.IsDefaultValue(System.Type,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.TypeExtensions.ShortDisplayName(System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.TypeExtensions.DisplayName(System.Type,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.TypeExtensions.GetFieldInfo(System.Type,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.WarningsConfiguration">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.WarningsConfiguration.DefaultBehavior">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.WarningsConfiguration.AddExplicit(System.Collections.Generic.IEnumerable{System.Object},Microsoft.EntityFrameworkCore.WarningBehavior)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.WarningsConfiguration.GetBehavior(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.WarningsConfiguration.TryAddExplicit(System.Object,Microsoft.EntityFrameworkCore.WarningBehavior)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Internal.CoreStrings">
            <summary>
            	This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ArgumentIsEmpty(System.Object)">
            <summary>
            The string argument '{argumentName}' cannot be empty.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CircularDependency(System.Object)">
            <summary>
            Unable to save changes because a circular dependency was detected in the data to be saved: '{cycle}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidEnumValue(System.Object,System.Object)">
            <summary>
            The value provided for argument '{argumentName}' must be a valid value of enum type '{enumType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidPropertiesExpression(System.Object)">
            <summary>
            The properties expression '{expression}' is not valid. The expression should represent a property access: 't =&gt; t.MyProperty'. When specifying multiple properties use an anonymous type: 't =&gt; new {{ t.MyProperty1, t.MyProperty2 }}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidPropertyExpression(System.Object)">
            <summary>
            The expression '{expression}' is not a valid property expression. The expression should represent a property access: 't =&gt; t.MyProperty'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IdentityConflict(System.Object)">
            <summary>
            The instance of entity type '{entityType}' cannot be tracked because another instance of this type with the same key is already being tracked. When adding new entities, for most key types a unique temporary key value will be created if no key is set (i.e. if the key property is assigned the default value for its type). If you are explicitly setting key values for new entities, ensure they do not collide with existing entities or temporary values generated for other new entities. When attaching existing entities, ensure that only one entity instance with a given key value is attached to the context.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.WrongStateManager(System.Object)">
            <summary>
            Cannot start tracking InternalEntityEntry for entity type '{entityType}' because it was created by a different StateManager instance.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.MultipleEntries(System.Object)">
            <summary>
            Cannot start tracking InternalEntityEntry for entity type '{entityType}' because another InternalEntityEntry is already tracking the same entity.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyNotFound(System.Object,System.Object)">
            <summary>
            The property '{property}' on entity type '{entityType}' could not be found. Ensure that the property exists and has been included in the model.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyIsNavigation(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The property '{property}' on entity type '{entityType}' is being accessed using the '{PropertyMethod}' method, but is defined in the model as a navigation property. Use either the '{ReferenceMethod}' or '{CollectionMethod}' method to access navigation properties.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationIsProperty(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The property '{property}' on entity type '{entityType}' is being accessed using the '{ReferenceMethod}' or '{CollectionMethod}' method, but is defined in the model as a non-navigation property. Use the '{PropertyMethod}' method to access non-navigation properties.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ReferenceIsCollection(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The property '{property}' on entity type '{entityType}' is being accessed using the '{ReferenceMethod}' method, but is defined in the model as a collection navigation property. Use the '{CollectionMethod}' method to access collection navigation properties.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CollectionIsReference(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The property '{property}' on entity type '{entityType}' is being accessed using the '{CollectionMethod}' method, but is defined in the model as a non-collection, reference navigation property. Use the '{ReferenceMethod}' method to access reference navigation properties.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ReferenceMustBeLoaded(System.Object,System.Object)">
            <summary>
            Navigation property '{navigation}' on entity type '{entityType}' cannot have 'IsLoaded' set to false because the referenced entity is non-null and therefore is loaded.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CollectionArgumentIsEmpty(System.Object)">
            <summary>
            The collection argument '{argumentName}' must contain at least one element.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityRequiresKey(System.Object)">
            <summary>
            The entity type '{entityType}' requires a primary key to be defined.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.KeyPropertiesWrongEntity(System.Object,System.Object)">
            <summary>
            The specified key properties {key} are not declared on the entity type '{entityType}'. Ensure key properties are declared on the target entity type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ForeignKeyPropertiesWrongEntity(System.Object,System.Object)">
            <summary>
            The specified foreign key properties {foreignKey} are not declared on the entity type '{entityType}'. Ensure foreign key properties are declared on the target entity type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IndexPropertiesWrongEntity(System.Object,System.Object)">
            <summary>
            The specified index properties {index} are not declared on the entity type '{entityType}'. Ensure index properties are declared on the target entity type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IQueryableNotAsync(System.Object)">
            <summary>
            The source IQueryable doesn't implement IAsyncEnumerable&lt;{genericParameter}&gt;. Only sources that implement IAsyncEnumerable can be used for Entity Framework asynchronous operations.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IQueryableProviderNotAsync">
            <summary>
            The provider for the source IQueryable doesn't implement IAsyncQueryProvider. Only providers that implement IEntityQueryProvider can be used for Entity Framework asynchronous operations.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ChangeTrackingInterfaceMissing(System.Object,System.Object,System.Object)">
            <summary>
            The entity type '{entityType}' is configured to use the '{changeTrackingStrategy}' change tracking strategy but does not implement the required '{notificationInterface}' interface.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NonNotifyingCollection(System.Object,System.Object,System.Object)">
            <summary>
            The collection type being used for navigation property '{navigation}' on entity type '{entityType}' does not implement 'INotifyCollectionChanged'. Any entity type configured to use the '{changeTrackingStrategy}' change tracking strategy must use collections that implement 'INotifyCollectionChanged'. Consider using 'ObservableCollection&lt;T&gt;' for this.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ResetNotSupported">
            <summary>
            'ObservableCollection&lt;T&gt;.Clear()' is not supported because it uses the 'INotifyCollectionChanged' 'Reset' operation, which does not supply the items removed. Either use multiple calls to 'Remove' or use a notifying collection that supports 'Clear', such as 'Microsoft.EntityFrameworkCore.ChangeTracking.ObservableHashSet&lt;T&gt;'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.OriginalValueNotTracked(System.Object,System.Object)">
            <summary>
            The original value for property '{property}' of entity type '{entityType}' cannot be accessed because it is not being tracked. Original values are not recorded for most properties of entities when the 'ChangingAndChangedNotifications' strategy is used. To access all original values use a different change tracking strategy such as 'ChangingAndChangedNotificationsWithOriginalValues'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ValueCannotBeNull(System.Object,System.Object,System.Object)">
            <summary>
            The value for property '{property}' of entity type '{entityType}' cannot be set to null because its type is '{propertyType}' which is not a nullable type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidType(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The value for property '{property}' of entity type '{entityType}' cannot be set to a value of type '{valueType}' because its type is '{propertyType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyDoesNotBelong(System.Object,System.Object,System.Object)">
            <summary>
            The property '{property}' belongs to entity type '{entityType}' but is being used with an instance of entity type '{expectedType}'.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ObservableCollectionReentrancy">
            <summary>
            Cannot change ObservableHashSet during a CollectionChanged event.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.MissingBackingField(System.Object,System.Object,System.Object)">
            <summary>
            The specified field '{field}' could not be found for property '{property}' on entity type '{entityType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.BadBackingFieldType(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The specified field '{field}' of type '{fieldType}' cannot be used for the property '{entityType}.{property}' of type '{propertyType}'. Only backing fields of types that are assignable from the property type can be used.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoBackingField(System.Object,System.Object,System.Object)">
            <summary>
            No field was found backing property '{property}' of entity type '{entity}'. Either configure a backing field or use a different '{pam}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoFieldOrSetter(System.Object,System.Object)">
            <summary>
            No backing field could be found for property '{property}' of entity type '{entity}' and the property does not have a setter.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoFieldOrGetter(System.Object,System.Object)">
            <summary>
            No backing field could be found for property '{property}' of entity type '{entity}' and the property does not have a getter.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ReadonlyField(System.Object,System.Object)">
            <summary>
            Field '{field}' of entity type '{entity}' is readonly and so cannot be set.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoProperty(System.Object,System.Object,System.Object)">
            <summary>
            No property was associated with field '{field}' of entity type '{entity}'. Either configure a property or use a different '{pam}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoSetter(System.Object,System.Object,System.Object)">
            <summary>
            The property '{property}' of entity type '{entity}' does not have a setter. Either make the property writable or use a different '{pam}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoGetter(System.Object,System.Object,System.Object)">
            <summary>
            The property '{property}' of entity type '{entity}' does not have a getter. Either make the property readable or use a different '{pam}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoClrType(System.Object)">
            <summary>
            The CLR entity materializer cannot be used for entity type '{entityType}' because it is a shadow state entity type.  Materialization to a CLR type is only possible for entity types that have a corresponding CLR type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.MultipleProvidersConfigured(System.Object)">
            <summary>
            The database providers {storeNames}are configured. A context can only be configured to use a single database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoProviderConfigured">
            <summary>
            No database provider has been configured for this DbContext. A provider can be configured by overriding the DbContext.OnConfiguring method or by using AddDbContext on the application service provider. If AddDbContext is used, then also ensure that your DbContext type accepts a DbContextOptions&lt;TContext&gt; object in its constructor and passes it to the base constructor for DbContext.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoEfServices">
            <summary>
            Entity Framework services have not been added to the internal service provider. Either remove the call to UseInternalServiceProvider so that EF will manage its own internal services, or use the method from your database provider to add the required services to the service provider (e.g. AddEntityFrameworkSqlServer).
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidReplaceService(System.Object,System.Object)">
            <summary>
            A call was made to {replaceService}, but Entity Framework is not building its own internal service provider. Either allow EF to build the service provider by removing the call to {useInternalServiceProvider}, or build replacement services into the service provider before passing it to {useInternalServiceProvider}.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.MultipleProvidersAvailable(System.Object)">
            <summary>
            The database providers {storeNames}are available. A context can only be configured to use a single database provider. Configure a database provider by overriding OnConfiguring in your DbContext class or in the AddDbContext method when setting up services.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoValueGenerator(System.Object,System.Object,System.Object)">
            <summary>
            The '{property}' on entity type '{entityType}' does not have a value set and no value generator is available for properties of type '{propertyType}'. Either set a value for the property before adding the entity or configure a value generator for properties of type '{propertyType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.BadValueGeneratorType(System.Object,System.Object)">
            <summary>
            The type '{givenType}' cannot be used a a value generator because it does not inherit from '{expectedType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CannotCreateValueGenerator(System.Object)">
            <summary>
            Cannot create instance of value generator type '{generatorType}'. Ensure that the type is instantiable and has a parameterless constructor, or use the overload of HasValueGenerator that accepts a delegate.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.TempValuePersists(System.Object,System.Object,System.Object)">
            <summary>
            The property '{property}' on entity type '{entityType}' has a temporary value while attempting to change the entity's state to '{state}'. Either set a permanent value explicitly or ensure that the database is configured to generate values for this property.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogExceptionDuringQueryIteration(System.Object,System.Object)">
            <summary>
            An exception occurred in the database while iterating the results of a query.{newline}{error}
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogExceptionDuringSaveChanges(System.Object,System.Object)">
            <summary>
            An exception occurred in the database while saving changes.{newline}{error}
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyMethodInvoked">
            <summary>
            The EF.Property&lt;T&gt; method may only be used within LINQ queries.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateProperty(System.Object,System.Object,System.Object)">
            <summary>
            The property '{property}' cannot be added to the entity type '{entityType}' because a property with the same name already exists on entity type '{duplicateEntityType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyWrongClrType(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The property '{property}' cannot be added to type '{entityType}' because the type of the corresponding CLR property or field '{clrType}' does not match the specified type '{propertyType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ClrPropertyOnShadowEntity(System.Object,System.Object)">
            <summary>
            The property '{property}' cannot exist on type '{entityType}' because the type is marked as shadow state while the property is not. Shadow state types can only contain shadow state properties.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyInUseKey(System.Object,System.Object,System.Object)">
            <summary>
            The property '{property}' cannot be removed from entity type '{entityType}' because it is being used in the key {key}. All containing keys must be removed or redefined before the property can be removed.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.KeyInUse(System.Object,System.Object,System.Object)">
            <summary>
            Cannot remove key {key} from entity type '{entityType}' because it is referenced by a foreign key in entity type '{dependentType}'. All foreign keys must be removed or redefined before the referenced key can be removed.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateNavigation(System.Object,System.Object,System.Object)">
            <summary>
            The navigation property '{navigation}' cannot be added to the entity type '{entityType}' because a navigation property with the same name already exists on entity type '{duplicateEntityType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoClrNavigation(System.Object,System.Object)">
            <summary>
            The navigation property '{navigation}' cannot be added to the entity type '{entityType}' because there is no corresponding CLR property on the underlying type and navigations properties cannot be added to shadow state.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationSingleWrongClrType(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The navigation property '{navigation}' cannot be added to the entity type '{entityType}' because its CLR type '{clrType}' does not match the expected CLR type '{targetType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationCollectionWrongClrType(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The collection navigation property '{navigation}' cannot be added to the entity type '{entityType}' because its CLR type '{clrType}' does not implement 'IEnumerable&lt;{targetType}&gt;'. Collection navigation properties must implement IEnumerable&lt;&gt; of the related entity.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ForeignKeyCountMismatch(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The number of properties specified for the foreign key {foreignKey} on entity type '{dependentType}' does not match the number of properties in the principal key {principalKey} on entity type '{principalType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ForeignKeyTypeMismatch(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The types of the properties specified for the foreign key {foreignKey} on entity type '{dependentType}' do not match the types of the properties in the principal key {principalKey} on entity type '{principalType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationBadType(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The type of navigation property '{navigation}' on the entity type '{entityType}' is '{foundType}' which does not implement ICollection&lt;{targetType}&gt;. Collection navigation properties must implement ICollection&lt;&gt; of the target type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationArray(System.Object,System.Object,System.Object)">
            <summary>
            The type of navigation property '{navigation}' on the entity type '{entityType}' is '{foundType}' which is an array type.. Collection navigation properties cannot be arrays.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationNoSetter(System.Object,System.Object)">
            <summary>
            The navigation property '{navigation}' on the entity type '{entityType}' does not have a setter and no writable backing field was found or specified. Read-only collection navigation properties must be initialized before use.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationCannotCreateType(System.Object,System.Object,System.Object)">
            <summary>
            The type of navigation property '{navigation}' on the entity type '{entityType}' is '{foundType}' for which it was not possible to create a concrete instance. Either initialize the property before use, add a public parameterless constructor to the type, or use a type which can be assigned a HashSet&lt;&gt; or List&lt;&gt;.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.KeyReadOnly(System.Object,System.Object)">
            <summary>
            The property '{property}' on entity type '{entityType}' is part of a key and so cannot be modified or marked as modified.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyReadOnlyAfterSave(System.Object,System.Object)">
            <summary>
            The property '{property}' on entity type '{entityType}' is defined to be read-only after it has been saved, but its value has been modified or marked as modified.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyReadOnlyBeforeSave(System.Object,System.Object)">
            <summary>
            The property '{property}' on entity type '{entityType}' is defined to be read-only before it is saved, but its value has been set to something other than a temporary or default value.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.KeyPropertyMustBeReadOnly(System.Object,System.Object)">
            <summary>
            The property '{property}' on entity type '{entityType}' must be marked as read-only after it has been saved because it is part of a key. Key properties are always read-only once an entity has been saved for the first time.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.RelationshipConceptualNull(System.Object,System.Object)">
            <summary>
            The association between entity types '{firstType}' and '{secondType}' has been severed but the foreign key for this relationship cannot be set to null. If the dependent entity should be deleted, then setup the relationship to use cascade deletes.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyConceptualNull(System.Object,System.Object)">
            <summary>
            The property '{property}' on entity type '{entityType}' is marked as null, but this cannot be saved because the property is marked as required.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateForeignKey(System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The foreign key {foreignKey} cannot be added to the entity type '{entityType}' because a foreign key on the same properties already exists on entity type '{duplicateEntityType}' and also targets the key {key} on '{principalType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateIndex(System.Object,System.Object,System.Object)">
            <summary>
            The index {index} cannot be added to the entity type '{entityType}' because an index on the same properties already exists on entity type '{duplicateEntityType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateKey(System.Object,System.Object,System.Object)">
            <summary>
            The key {key} cannot be added to the entity type '{entityType}' because a key on the same properties already exists on entity type '{duplicateEntityType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationToShadowEntity(System.Object,System.Object,System.Object)">
            <summary>
            The navigation property '{navigation}' cannot be added to the entity type '{entityType}' because the target entity type '{targetType}' is defined in shadow state and navigations properties cannot point to shadow state entities.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityTypeNotInRelationship(System.Object,System.Object,System.Object)">
            <summary>
            The specified entity type '{entityType}' is invalid. It should be either the dependent entity type '{dependentType}' or the principal entity type '{principalType}' or an entity type derived from one of them.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateEntityType(System.Object)">
            <summary>
            The entity type '{entityType}' cannot be added to the model because an entity with the same name already exists.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateAnnotation(System.Object)">
            <summary>
            The annotation '{annotation}' cannot be added because an annotation with the same name already exists.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.AnnotationNotFound(System.Object)">
            <summary>
            The annotation '{annotation}' was not found. Ensure that the annotation has been added.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IncludeNotImplemented">
            <summary>
            The Include operator is not implemented by the current database provider.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IncludeNonBindableExpression(System.Object)">
            <summary>
            The expression '{expression}' passed to the Include operator could not be bound.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IncludeBadNavigation(System.Object,System.Object)">
            <summary>
            The property '{property}' is not a navigation property of entity type '{entityType}'. The 'Include(string)' method can only be used with a '.' separated list of navigation property names.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogCompilingQueryModel(System.Object,System.Object)">
            <summary>
            Compiling query model: {newline}'{queryModel}'
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogOptimizedQueryModel(System.Object,System.Object)">
            <summary>
            Optimized query model: {newline}'{queryModel}'
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogIncludingNavigation(System.Object)">
            <summary>
            Including navigation: '{navigation}'
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CannotBeNullable(System.Object,System.Object,System.Object)">
            <summary>
            The property '{property}' on entity type '{entityType}' cannot be marked as nullable/optional because the type of the property is '{propertyType}' which is not a nullable type. Any property can be marked as non-nullable/required, but only properties of nullable types and which are not part of primary key can be marked as nullable/optional.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.RecursiveOnModelCreating">
            <summary>
            An attempt was made to use the model while it was being created. A DbContext instance cannot be used inside OnModelCreating in any way that makes use of the model that is being created.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.RecursiveOnConfiguring">
            <summary>
            An attempt was made to use the context while it is being configured. A DbContext instance cannot be used inside OnConfiguring since it is still being configured at this point.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityTypeInUseByForeignKey(System.Object,System.Object,System.Object)">
            <summary>
            The entity type '{entityType}' cannot be removed because it is being referenced by foreign key {foreignKey} on '{referencingEntityType}'. All referencing foreign keys must be removed or redefined before the entity type can be removed.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ArgumentPropertyNull(System.Object,System.Object)">
            <summary>
            The property '{property}' of the argument '{argument}' cannot be null.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.RelationshipCannotBeInverted">
            <summary>
            The principal and dependent ends of the relationship cannot be flipped once foreign key or principal key properties have been specified.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidEntityType(System.Object,System.Object)">
            <summary>
            The entity type '{type}' provided for the argument '{argumentName}' must be a reference type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ReferencedShadowKey(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The relationship from '{referencingEntityTypeOrNavigation}' to '{referencedEntityTypeOrNavigation}' with foreign key properties {foreignKeyPropertiesWithTypes} cannot target the primary key {primaryKeyPropertiesWithTypes} because it is not compatible. Configure a principal key or a set of compatible foreign key properties for this relationship.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ShadowKey(System.Object,System.Object,System.Object)">
            <summary>
            The key {key} on entity type '{entityType}' contains properties in shadow state - {shadowProperties}.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ExpressionParameterizationException">
            <summary>
            An exception was thrown while attempting to evaluate a LINQ query parameter expression. To show additional information call EnableSensitiveDataLogging() when overriding DbContext.OnConfiguring.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidValueGeneratorFactoryProperty(System.Object,System.Object,System.Object)">
            <summary>
            The '{factory}' cannot create a value generator for property '{property}' on entity type '{entityType}'. Only integer properties are supported.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DerivedEntityTypeKey(System.Object,System.Object)">
            <summary>
            A key cannot be configured on '{derivedType}' because it is a derived type. The key must be configured on the root type '{rootType}'. If you did not intend for '{rootType}' to be included in the model, ensure that it is not included in a DbSet property on your context, referenced in a configuration call to ModelBuilder, or referenced from a navigation property on a type that is included in the model.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CircularInheritance(System.Object,System.Object)">
            <summary>
            The entity type '{entityType}' cannot inherit from '{baseEntityType}' because '{baseEntityType}' is a descendent of '{entityType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DerivedEntityCannotHaveKeys(System.Object)">
            <summary>
            Unable to set a base type for entity type '{entityType}' because it has one or more keys defined.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.GraphDoesNotContainVertex(System.Object)">
            <summary>
            The edge cannot be added because the graph does not contain vertex '{vertex}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CannotMaterializeAbstractType(System.Object)">
            <summary>
            Unable to create an instance of type entity type '{entityType}' because it is abstract. Either make it non-abstract or consider mapping at least one derived type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.FindNotCompositeKey(System.Object,System.Object)">
            <summary>
            Entity type '{entityType}' is defined with a single key property, but {valuesCount} values were passed to the 'DbSet.Find' method.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.FindValueCountMismatch(System.Object,System.Object,System.Object)">
            <summary>
            Entity type '{entityType}' is defined with a {propertiesCount}-part composite key, but {valuesCount} values were passed to the 'DbSet.Find' method.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.FindValueTypeMismatch(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The key value at position {index} of the call to 'DbSet&lt;{entityType}&gt;.Find' was of type '{valueType}', which does not match the property type of '{propertyType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ForeignKeyReferencedEntityKeyMismatch(System.Object,System.Object)">
            <summary>
            The provided principal entity key '{principalKey}' is not a key on the entity type '{principalEntityType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.WrongGenericPropertyType(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Property '{property}' on entity type '{entityType}' is of type '{actualType}' but the generic type provided is of type '{genericType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NonGenericOptions(System.Object)">
            <summary>
            The DbContextOptions passed to the {contextType} constructor must be a DbContextOptions&lt;{contextType}&gt;. When registering multiple DbContext types make sure that the constructor for each context type has a DbContextOptions&lt;TContext&gt; parameter rather than a non-generic DbContextOptions parameter.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.OptionsExtensionNotFound(System.Object)">
            <summary>
            Options extension of type '{optionsExtension}' not found.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicatePropertiesOnBase(System.Object,System.Object,System.Object)">
            <summary>
            The type '{entityType}' cannot have base type '{baseType}' because both types include the properties: {properties}.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CannotBeNullablePK(System.Object,System.Object)">
            <summary>
            The property '{property}' on entity type '{entityType}' cannot be marked as nullable/optional because the property is a part of a key. Any property can be marked as non-nullable/required, but only properties of nullable types and which are not part of a key can be marked as nullable/optional.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ForeignKeyCannotBeOptional(System.Object,System.Object)">
            <summary>
            The foreign key {foreignKey} on entity type '{entityType}' cannot be marked as optional because it does not contain any property of a nullable type. Any foreign key can be marked as required, but only foreign keys with at least one property of a nullable type and which is not part of primary key can be marked as optional.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ShadowEntity(System.Object)">
            <summary>
            Entity type '{entityType}' is in shadow-state. A valid model requires all entity types to have corresponding CLR type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CompositePKWithDataAnnotation(System.Object)">
            <summary>
            Entity type '{entityType}' has composite primary key defined with data annotations. To set composite primary key, use fluent API.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DuplicateNavigationsOnBase(System.Object,System.Object,System.Object)">
            <summary>
            The type '{entityType}' cannot have base type '{baseType}' because both types include the navigations: {navigations}.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityTypeModelMismatch(System.Object,System.Object)">
            <summary>
            The entity types '{firstEntityType}' and '{secondEntityType}' do not belong to the same model.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.HiLoBadBlockSize">
            <summary>
            The block size used for Hi-Lo value generation must be positive. When the Hi-Lo generator is backed by a SQL sequence this means that the sequence increment must be positive.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.IntraHierarchicalAmbiguousTargetEntityType(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The entity type related to '{entityType}' cannot be determined because the specified foreign key {foreignKey} references entity type '{principalEntityType}' that it is in the same hierarchy as the entity type that it is declared on '{dependentEntityType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NonClrBaseType(System.Object,System.Object)">
            <summary>
            The entity type '{entityType}' cannot inherit from '{baseEntityType}' because '{baseEntityType}' is a shadow state entity type while '{entityType}' is not.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NonShadowBaseType(System.Object,System.Object)">
            <summary>
            The entity type '{entityType}' cannot inherit from '{baseEntityType}' because '{entityType}' is a shadow state entity type while '{baseEntityType}' is not.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NotAssignableClrBaseType(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The entity type '{entityType}' cannot inherit from '{baseEntityType}' because '{clrType}' is not a descendent of '{baseClrType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyWrongEntityClrType(System.Object,System.Object,System.Object)">
            <summary>
            CLR property '{property}' cannot be added to entity type '{entityType}' because it is declared on the CLR type '{clrType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidNavigationWithInverseProperty(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The InversePropertyAttribute on property '{property}' on type '{entityType}' is not valid. The property '{referencedProperty}' is not a valid navigation property on the related type '{referencedEntityType}'. Ensure that the property exists and is a valid reference or collection navigation property.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.SelfReferencingNavigationWithInverseProperty(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            A relationship cannot be established from property '{property}' on type '{entityType}' to property '{referencedProperty}' on type '{referencedEntityType}'. Check the values in the InversePropertyAttribute to ensure relationship definitions are unique and reference from one navigation property to its corresponding inverse navigation property.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DataBindingWithIListSource">
            <summary>
            Data binding directly to a store query is not supported. Instead populate a DbSet with data, for example by calling Load on the DbSet, and then bind to local data to avoid sending a query to the database each time the databound control iterates the data. For WPF bind to DbSet.Local. For WinForms bind to DbSet.Local.ToBindingList(). For ASP.NET WebForms bind to DbSet.ToList() or use Model Binding.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.KeyAttributeOnDerivedEntity(System.Object,System.Object)">
            <summary>
            The derived type '{derivedType}' cannot have KeyAttribute on property '{property}' since primary key can only be declared on the root type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InversePropertyMismatch(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            InversePropertyAttributes on navigation '{navigation}' in entity type '{entityType}' and on navigation '{referencedNavigation}' in entity type '{referencedEntityType}' are not pointing to each other.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CompositeFkOnProperty(System.Object,System.Object)">
            <summary>
            There are multiple properties pointing to navigation '{navigation}' in entity type '{entityType}'. To define composite foreign key using data annotations, use ForeignKeyAttribute on navigation.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.FkAttributeOnPropertyNavigationMismatch(System.Object,System.Object,System.Object)">
            <summary>
            The ForeignKeyAttributes on property '{property}' and navigation '{navigation}' in entity type '{entityType}' do not point at each other. The value of ForeignKeyAttribute on property should be navigation name and the value of ForeignKeyAttribute on navigation should be the foreign key property name.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidPropertyListOnNavigation(System.Object,System.Object)">
            <summary>
            The property list specified using ForeignKeyAttribute on navigation '{navigation}' in entity type '{entityType}' is incorrect. The attribute value should be comma-separated list of property names.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidRelationshipUsingDataAnnotations(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Invalid relationship has been specified using InverseProperty and ForeignKey. The navigation '{navigation}' in entity type '{entityType}' and the navigation '{referencedNavigation}' in entity type '{referencedEntityType}' are related by InversePropertyAttribute but the ForeignKeyAttribute specified for both navigations have different values.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConflictingNavigation(System.Object,System.Object,System.Object)">
            <summary>
            The property '{property}' cannot be added to the entity type '{entityType}' because a navigation property with the same name already exists on entity type '{duplicateEntityType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConflictingProperty(System.Object,System.Object,System.Object)">
            <summary>
            The navigation property '{navigation}' cannot be added to the entity type '{entityType}' because a property with the same name already exists on entity type '{duplicateEntityType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityTypeNotInRelationshipStrict(System.Object,System.Object,System.Object)">
            <summary>
            The specified entity type '{entityType}' is invalid. It should be either the dependent entity type '{dependentType}' or the principal entity type '{principalType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityTypeInUseByDerived(System.Object,System.Object)">
            <summary>
            The entity type '{entityType}' cannot be removed because '{derivedEntityType}' is derived from it. All derived entity types must be removed or redefined before the entity type can be removed.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationNotAdded(System.Object,System.Object,System.Object)">
            <summary>
            Unable to determine the relationship represented by navigation property '{entityType}.{navigation}' of type '{propertyType}'. Either manually configure the relationship, or ignore this property from the model.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyNotAdded(System.Object,System.Object,System.Object)">
            <summary>
            The property '{entityType}.{property}' could not be mapped, because it is of type '{propertyType}' which is not a supported primitive type or a valid entity type. Either explicitly map this property, or ignore it.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyNotMapped(System.Object,System.Object,System.Object)">
            <summary>
            The property '{entityType}.{property}' is of type '{propertyType}' which is not supported by current database provider. Either change the property CLR type or manually configure the database type for it.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InterfacePropertyNotAdded(System.Object,System.Object,System.Object)">
            <summary>
            The property '{entityType}.{navigation}' is of an interface type ('{propertyType}'). If it is a navigation property manually configure the relationship for this property by casting it to a mapped entity type, otherwise ignore the property from the model.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NavigationForWrongForeignKey(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The navigation property '{navigation}' on entity type '{entityType}' cannot be associated with foreign key {targetFk} because it was created for foreign key {actualFk}.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityTypeNotFound(System.Object)">
            <summary>
            The entity type '{entityType}' was not found. Ensure that the entity type has been added to the model.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.CustomMetadata(System.Object,System.Object,System.Object)">
            <summary>
            The extension method ‘{method}’ is being used with a custom implementation of ‘{interfaceType}’. Use of custom implementations of the Entity Framework metadata interfaces is not supported. Consider deriving from ‘{concreteType}’ instead. Please contact the Entity Framework team if you have a compelling case for a custom implementation of the metadata interfaces so that we can consider ways to achieve this.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidMemberInitBinding">
            <summary>
            Unhandled operation: MemberInitExpression binding is not a MemberAssignment
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidKeyValue(System.Object)">
            <summary>
            Unable to create or track an entity of type '{entityType}' because it has a null primary or alternate key value.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.SensitiveDataLoggingEnabled">
            <summary>
            Sensitive data logging is enabled. Log entries and exception messages may include sensitive application data, this mode should only be enabled during development.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ExpressionParameterizationExceptionSensitive(System.Object)">
            <summary>
            An exception was thrown while attempting to evaluate the LINQ query parameter expression '{expression}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.MultipleNavigationsSameFk(System.Object,System.Object)">
            <summary>
            There are multiple navigations in entity type '{entityType}' which are pointing to same set of properties - '{propertyList}' using ForeignKeyAttribute.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InconsistentInheritance(System.Object,System.Object)">
            <summary>
            The entity type '{entityType}' should derive from '{baseEntityType}' to reflect the hierarchy of the corresponding CLR types.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DependentEntityTypeNotInRelationship(System.Object,System.Object,System.Object)">
            <summary>
            You are configuring a relationship between '{dependentEntityType}' and '{principalEntityType}' but have specified a foreign key on '{entityType}'. The foreign key must be defined on a type that is part of the relationship.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PrincipalEntityTypeNotInRelationship(System.Object,System.Object,System.Object)">
            <summary>
            You are configuring a relationship between '{dependentEntityType}' and '{principalEntityType}' but have specified a foreign key targeting '{entityType}'. The foreign key must be targeting a type that is part of the relationship.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ForeignKeyPropertyInKey(System.Object,System.Object)">
            <summary>
            The property '{property}' cannot be part of a foreign key on '{entityType}' because it is contained in a key defined on a base entity type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.KeyPropertyInForeignKey(System.Object,System.Object)">
            <summary>
            The property '{property}' cannot be part of a key on '{entityType}' because it is contained in a foreign key defined on a derived entity type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NullableKey(System.Object,System.Object)">
            <summary>
            A key on entity type '{entityType}' cannot contain the property '{property}' because it is nullable/optional. All properties on which a key is declared must be marked as non-nullable/required.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConcurrentMethodInvocation">
            <summary>
            A second operation started on this context before a previous operation completed. Any instance members are not guaranteed to be thread safe.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.EntityTypesNotInRelationship(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The specified entity types '{invalidDependentType}' and '{invalidPrincipalType}' are invalid. They should be '{dependentType}' and '{principalType}' or entity types in the same hierarchy.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidSetType(System.Object)">
            <summary>
            Cannot create a DbSet for '{typeName}' because this type is not included in the model for the context.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.AmbiguousOneToOneRelationship(System.Object,System.Object)">
            <summary>
            The child/dependent side could not be determined for the one-to-one relationship that was detected between '{dependentToPrincipalNavigationSpecification}' and '{principalToDependentNavigationSpecification}'. To identify the child/dependent side of the relationship, configure the foreign key property. See http://go.microsoft.com/fwlink/?LinkId=724062 for more details.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InvalidComplexPropertyExpression(System.Object)">
            <summary>
            The property expression '{propertyAccessExpression}' is not valid. The expression should represent a property access: 't =&gt; t.MyProperty'. For more information on including related data, see http://go.microsoft.com/fwlink/?LinkID=746393.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.AbstractLeafEntityType(System.Object)">
            <summary>
            The corresponding CLR type for entity type '{entityType}' is not instantiable and there is no derived entity type in the model that corresponds to a concrete CLR type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoPropertyType(System.Object,System.Object)">
            <summary>
            The property '{property}' cannot be added to the type '{entityType}' because there was no property type specified and there is no corresponding CLR property or field. To add a shadow state property the property type must be specified.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.TempValue(System.Object,System.Object)">
            <summary>
            The property '{property}' on entity type '{entityType}' has a temporary value. Either set a permanent value explicitly or ensure that the database is configured to generate values for this property.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.DatabaseGeneratedNull(System.Object,System.Object)">
            <summary>
            The database generated a null value for non-nullable property '{property}' of entity type '{entityType}'. Ensure value generation configuration in the database matches the configuration in the model.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.MoreThanOneElement">
            <summary>
            Sequence contains more than one element
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoElements">
            <summary>
            Sequence contains no elements
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoParameterlessConstructor(System.Object)">
            <summary>
            A parameterless constructor was not found on entity type '{entityType}'. In order to create an instance of '{entityType}' EF requires that a parameterless constructor be declared.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.LogIgnoredInclude(System.Object)">
            <summary>
            The Include operation for navigation: '{navigation}' was ignored because the target navigation is not reachable in the final query results.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ConflictingRelationshipNavigation(System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object,System.Object)">
            <summary>
            Cannot create a relationship between '{newPrincipalEntityType}.{newPrincipalNavigation}' and '{newDependentEntityType}.{newDependentNavigation}', because there already is a relationship between '{existingPrincipalEntityType}.{existingPrincipalNavigation}' and '{existingDependentEntityType}.{existingDependentNavigation}'. Navigation properties can only participate in a single relationship.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.WarningAsErrorTemplate(System.Object,System.Object)">
            <summary>
            Warning as error exception for warning '{eventId}': {message} To suppress this Exception use the DbContextOptionsBuilder.ConfigureWarnings API. ConfigureWarnings can be used when overriding the DbContext.OnConfiguring method or using AddDbContext on the application service provider.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.WarningLogTemplate(System.Object,System.Object)">
            <summary>
            {message} To configure this warning use the DbContextOptionsBuilder.ConfigureWarnings API (event id '{eventId}'). ConfigureWarnings can be used when overriding the DbContext.OnConfiguring method or using AddDbContext on the application service provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ContextDisposed">
            <summary>
            Cannot access a disposed object. A common cause of this error is disposing a context that was resolved from dependency injection and then later trying to use the same context instance elsewhere in your application. This may occur if you are calling Dispose() on the context, or wrapping the context in a using statement. If you are using dependency injection, you should let the dependency injection container take care of disposing context instances.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.NoProviderConfiguredFailedToResolveService(System.Object)">
            <summary>
            Unable to resolve service for type '{service}'. This is often because no database provider has been configured for this DbContext. A provider can be configured by overriding the DbContext.OnConfiguring method or by using AddDbContext on the application service provider. If AddDbContext is used, then also ensure that your DbContext type accepts a DbContextOptions&lt;TContext&gt; object in its constructor and passes it to the base constructor for DbContext.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ErrorMaterializingProperty(System.Object,System.Object)">
            <summary>
            An exception occured while reading a database value for property '{entityType}.{property}'. See the inner exception for more information.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ErrorMaterializingPropertyInvalidCast(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            An exception occured while reading a database value for property '{entityType}.{property}'. The expected type was '{expectedType}' but the actual value was of type '{actualType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ErrorMaterializingPropertyNullReference(System.Object,System.Object,System.Object)">
            <summary>
            An exception occured while reading a database value for property '{entityType}.{property}'. The expected type was '{expectedType}' but the actual value was null.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ErrorMaterializingValue">
            <summary>
            An exception occured while reading a database value. See the inner exception for more information.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ErrorMaterializingValueInvalidCast(System.Object,System.Object)">
            <summary>
            An exception occured while reading a database value. The expected type was '{expectedType}' but the actual value was of type '{actualType}'.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ErrorMaterializingValueNullReference(System.Object)">
            <summary>
            An exception occured while reading a database value. The expected type was '{expectedType}' but the actual value was null.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.InheritedPropertyCannotBeIgnored(System.Object,System.Object,System.Object)">
            <summary>
            The property '{property}' cannot be ignored on entity type '{entityType}', because it's declared on the base entity type '{baseEntityType}'. To exclude this property from your model, use NotMappedAttribute or Ignore method on the base type.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.RetryLimitExceeded(System.Object,System.Object)">
            <summary>
            Maximum number of retries ({retryLimit}) exceeded while executing database operations with '{strategy}'. See inner exception for the most recent failure.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.ExecutionStrategyExistingTransaction(System.Object,System.Object)">
            <summary>
            The configured execution strategy '{strategy}' does not support user initiated transactions. Use the execution strategy returned by '{getExecutionStrategyMethod}' to execute all the operations in the transaction as a retriable unit.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyCalledOnNavigation(System.Object,System.Object)">
            <summary>
            Cannot call Property for the property '{property}' on entity type '{entityType}' because it is configured as a navigation property. Property can only be used to configure scalar properties.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyInUseForeignKey(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The property '{property}' cannot be removed from entity type '{entityType}' because it is being used in the foreign key {foreignKey} on '{foreignKeyType}'. All containing foreign keys must be removed or redefined before the property can be removed.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Internal.CoreStrings.PropertyInUseIndex(System.Object,System.Object,System.Object,System.Object)">
            <summary>
            The property '{property}' cannot be removed from entity type '{entityType}' because it is being used in the index {index} on '{indexType}'. All containing indexes must be removed or redefined before the property can be removed.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Extensions.Internal.MethodInfoExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Extensions.Internal.MethodInfoExtensions.MethodIsClosedFormOf(System.Reflection.MethodInfo,System.Reflection.MethodInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Extensions.Internal.QueryableExtensions.AsAsyncEnumerable``1(System.Linq.IQueryable{``0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions">
            <summary>
                <para>
                    Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1" />.
                </para>
                <para>
                    These methods are typically used by database providers (and other extensions). They are generally
                    not used in application code.
                </para>
                <para>
                    <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1" /> is used to hide properties that are not intended to be used in
                    application code but can be used in extension methods written by database providers etc.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetService``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{System.IServiceProvider})">
            <summary>
                <para>
                    Resolves a service from the <see cref="T:System.IServiceProvider" /> exposed from a type that implements
                    <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1" />.
                </para>
                <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1" /> is used to hide properties that are not intended to be used in
                    application code but can be used in extension methods written by database providers etc.
                </para>
            </summary>
            <typeparam name="TService"> The type of service to be resolved. </typeparam>
            <param name="accessor"> The object exposing the service provider. </param>
            <returns> The requested service. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.AccessorExtensions.GetInfrastructure``1(Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure{``0})">
            <summary>
                <para>
                    Gets the value from a property that is being hidden using <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1" />.
                </para>
                <para>
                    This method is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
                <para>
                    <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1" /> is used to hide properties that are not intended to be used in
                    application code but can be used in extension methods written by database providers etc.
                </para>
            </summary>
            <typeparam name="T"> The type of the property being hidden by <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1" />. </typeparam>
            <param name="accessor"> The object that exposes the property. </param>
            <returns> The object assigned to the property. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.Annotatable">
            <summary>
                <para>
                    Base class for types that support reading and writing annotations.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.Annotatable.GetAnnotations">
            <summary>
                Gets all annotations on the current object.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.Annotatable.AddAnnotation(System.String,System.Object)">
            <summary>
                Adds an annotation to this object. Throws if an annotation with the specified name already exists.
            </summary>
            <param name="name"> The key of the annotation to be added. </param>
            <param name="value"> The value to be stored in the annotation. </param>
            <returns> The newly added annotation. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.Annotatable.AddAnnotation(System.String,Microsoft.EntityFrameworkCore.Infrastructure.Annotation)">
            <summary>
                Adds an annotation to this object. Throws if an annotation with the specified name already exists.
            </summary>
            <param name="name"> The key of the annotation to be added. </param>
            <param name="annotation"> The annotation to be added. </param>
            <returns> The added annotation. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.Annotatable.SetAnnotation(System.String,Microsoft.EntityFrameworkCore.Infrastructure.Annotation)">
            <summary>
                Sets the annotation stored under the given key. Overwrites the existing annotation if an
                annotation with the specified name already exists.
            </summary>
            <param name="name"> The key of the annotation to be added. </param>
            <param name="annotation"> The annotation to be set. </param>
            <returns> The annotation that was set. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.Annotatable.OnAnnotationSet(System.String,Microsoft.EntityFrameworkCore.Infrastructure.Annotation,Microsoft.EntityFrameworkCore.Infrastructure.Annotation)">
            <summary>
                Runs the corresponding conventions when an annotation was set or removed.
            </summary>
            <param name="name"> The key of the set annotation. </param>
            <param name="annotation"> The annotation set. </param>
            <param name="oldAnnotation"> The old annotation. </param>
            <returns> The annotation that was set. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.Annotatable.GetOrAddAnnotation(System.String,System.Object)">
            <summary>
                Adds an annotation to this object or returns the existing annotation if one with the specified name
                already exists.
            </summary>
            <param name="name"> The key of the annotation to be added. </param>
            <param name="value"> The value to be stored in the annotation. </param>
            <returns>
                The existing annotation if an annotation with the specified name already exists. Otherwise, the newly
                added annotation.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.Annotatable.FindAnnotation(System.String)">
            <summary>
                Gets the annotation with the given name, returning null if it does not exist.
            </summary>
            <param name="name"> The key of the annotation to find. </param>
            <returns>
                The existing annotation if an annotation with the specified name already exists. Otherwise, null.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.Annotatable.RemoveAnnotation(System.String)">
            <summary>
                Removes the given annotation from this object.
            </summary>
            <param name="name"> The annotation to remove. </param>
            <returns> The annotation that was removed. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.Annotatable.Item(System.String)">
            <summary>
                Gets the value annotation with the given name, returning null if it does not exist.
            </summary>
            <param name="name"> The key of the annotation to find. </param>
            <returns>
                The value of the existing annotation if an annotation with the specified name already exists.
                Otherwise, null.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.Annotatable.CreateAnnotation(System.String,System.Object)">
            <summary>
                Creates a new annotation.
            </summary>
            <param name="name"> The key of the annotation. </param>
            <param name="value"> The value to be stored in the annotation. </param>
            <returns> The newly created annotation. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.Annotatable.Microsoft#EntityFrameworkCore#Infrastructure#IAnnotatable#GetAnnotations">
            <summary>
                Gets all annotations on the current object.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.Annotatable.Microsoft#EntityFrameworkCore#Infrastructure#IAnnotatable#FindAnnotation(System.String)">
            <summary>
                Gets the annotation with the given name, returning null if it does not exist.
            </summary>
            <param name="name"> The key of the annotation to find. </param>
            <returns>
                The existing annotation if an annotation with the specified name already exists. Otherwise, null.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableExtensions">
            <summary>
                Extension methods for <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.AnnotatableExtensions.GetAnnotation(Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable,System.String)">
            <summary>
                Gets the annotation with the given name, throwing if it does not exist.
            </summary>
            <param name="annotatable"> The object to find the annotation on. </param>
            <param name="annotationName"> The key of the annotation to find. </param>
            <returns> The annotation with the specified name. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.Annotation">
            <summary>
                <para>
                    An arbitrary piece of metadata that can be stored on an object that implements <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable" />.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.Annotation.#ctor(System.String,System.Object)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.Annotation" /> class.
            </summary>
            <param name="name"> The key of this annotation. </param>
            <param name="value"> The value assigned to this annotation. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.Annotation.Name">
            <summary>
                Gets the key of this annotation.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.Annotation.Value">
            <summary>
                Gets the value assigned to this annotation.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.CoreEventId">
            <summary>
                Values that are used as the eventId when logging messages from the core Entity Framework components.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.CoreEventId.DatabaseError">
            <summary>
                An error occurred while accessing the database.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.CoreEventId.CompilingQueryModel">
            <summary>
                A LINQ query is being compiled.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.CoreEventId.OptimizedQueryModel">
            <summary>
                An object model representing a LINQ query was optimized.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.CoreEventId.IncludingNavigation">
            <summary>
                A navigation property that was included in a LINQ query is being processed.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.CoreEventId.QueryPlan">
            <summary>
                An execution expression was calculated by compiling a LINQ query.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.CoreEventId.IncludeIgnoredWarning">
            <summary>
                A query specified an Include operation that was ignored because the included navigation was not reachable in the final query result.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.CoreEventId.SensitiveDataLoggingEnabledWarning">
            <summary>
                A warning that sensitive data logging is enabled.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Infrastructure.CoreEventId.ModelValidationWarning">
            <summary>
                A warning during model validation.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade">
            <summary>
                Provides access to database related information and operations for a context.
                Instances of this class are typically obtained from <see cref="P:Microsoft.EntityFrameworkCore.DbContext.Database" /> and it is not designed
                to be directly constructed in your application code.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.#ctor(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade" /> class. Instances of this class are typically
                obtained from <see cref="P:Microsoft.EntityFrameworkCore.DbContext.Database" /> and it is not designed to be directly constructed
                in your application code.
            </summary>
            <param name="context"> The context this database API belongs to .</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureCreated">
            <summary>
                <para>
                    Ensures that the database for the context exists. If it exists, no action is taken. If it does not
                    exist then the database and all its schema are created. If the database exists, then no effort is made
                    to ensure it is compatible with the model for this context.
                </para>
                <para>
                    Note that this API does not use migrations to create the database. In addition, the database that is
                    created cannot be later updated using migrations. If you are targeting a relational database and using migrations,
                    you can use the DbContext.Database.Migrate() method to ensure the database is created and all migrations
                    are applied.
                </para>
            </summary>
            <returns> True if the database is created, false if it already existed. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureCreatedAsync(System.Threading.CancellationToken)">
            <summary>
                <para>
                    Asynchronously ensures that the database for the context exists. If it exists, no action is taken. If it does not
                    exist then the database and all its schema are created. If the database exists, then no effort is made
                    to ensure it is compatible with the model for this context.
                </para>
                <para>
                    Note that this API does not use migrations to create the database. In addition, the database that is
                    created cannot be later updated using migrations. If you are targeting a relational database and using migrations,
                    you can use the DbContext.Database.Migrate() method to ensure the database is created and all migrations
                    are applied.
                </para>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous save operation. The task result contains true if the database is created,
                false if it already existed.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeleted">
            <summary>
                <para>
                    Ensures that the database for the context does not exist. If it does not exist, no action is taken. If it does
                    exist then the database is deleted.
                </para>
                <para>
                    Warning: The entire database is deleted an no effort is made to remove just the database objects that are used by
                    the model for this context.
                </para>
            </summary>
            <returns> True if the database is deleted, false if it did not exist. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.EnsureDeletedAsync(System.Threading.CancellationToken)">
            <summary>
                <para>
                    Asynchronously ensures that the database for the context does not exist. If it does not exist, no action is taken. If it does
                    exist then the database is deleted.
                </para>
                <para>
                    Warning: The entire database is deleted an no effort is made to remove just the database objects that are used by
                    the model for this context.
                </para>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous save operation. The task result contains true if the database is deleted,
                false if it did not exist.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.BeginTransaction">
            <summary>
                Starts a new transaction.
            </summary>
            <returns>
                A <see cref="T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction" /> that represents the started transaction.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.BeginTransactionAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously starts a new transaction.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous transaction initialization. The task result contains a <see cref="T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction" />
                that represents the started transaction.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.CommitTransaction">
            <summary>
                Applies the outstanding operations in the current transaction to the database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.RollbackTransaction">
            <summary>
                Discards the outstanding operations in the current transaction.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.CreateExecutionStrategy">
            <summary>
                Creates an instance of the configured <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" />.
            </summary>
            <returns>An <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" /> instance.</returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.CurrentTransaction">
            <summary>
                <para>
                    Gets the current <see cref="T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction" /> being used by the context, or null
                    if no transaction is in use.
                </para>
                <para>
                    This property will be null unless one of the 'BeginTransaction' or 'UseTransaction' methods has
                    been called, some of which are available as extension methods installed by EF providers.
                    No attempt is made to obtain a transaction from the current DbConnection or similar.
                </para>
                <para>
                    For relational databases, the underlying DbTransaction can be obtained using the
                    'Microsoft.EntityFrameworkCore.Storage.GetDbTransaction'extension method
                    on the returned <see cref="T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction" />.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.AutoTransactionsEnabled">
            <summary>
                <para>
                    Gets or sets a value indicating whether or not a transaction will be created
                    automatically by <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> if none of the
                    'BeginTransaction' or 'UseTransaction' methods have been called.
                </para>
                <para>
                    Setting this value to false will also disable the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" />
                    for <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" />
                </para>
                <para>
                    The default value is true, meaning that SaveChanges will always use a transaction
                    when saving changes.
                </para>
                <para>
                    Setting this value to false should only be done with caution since the database
                    could be left in a corrupted state if SaveChanges fails.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{System#IServiceProvider}#Instance">
            <summary>
                <para>
                    Gets the scoped <see cref="T:System.IServiceProvider" /> being used to resolve services.
                </para>
                <para>
                    This property is intended for use by extension methods that need to make use of services
                    not directly exposed in the public API surface.
                </para>
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.DbContextAttribute">
            <summary>
                Identifies the <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> that a class belongs to. For example, this attribute is used
                to identify which context a migration applies to.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.DbContextAttribute.#ctor(System.Type)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DbContextAttribute" /> class.
            </summary>
            <param name="contextType"> The associated context. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.DbContextAttribute.ContextType">
            <summary>
                Gets the associated context.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.DbContextFactoryOptions">
            <summary>
                Provides information about the environment an application is running in.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.DbContextFactoryOptions.ApplicationBasePath">
            <summary>
                Gets or sets the directory containing the application.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.DbContextFactoryOptions.ContentRootPath">
            <summary>
                Gets or sets the directory containing the application content files.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.DbContextFactoryOptions.EnvironmentName">
            <summary>
                Gets or sets the name of the environment.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.DesignTimeProviderServicesAttribute">
            <summary>
                <para>
                    Identifies where to find the design time services for a given database provider. This attribute should
                    be present in the primary assembly of the database provider.
                </para>
                <para>
                    This attribute is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.DesignTimeProviderServicesAttribute.#ctor(System.String,System.String,System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.DesignTimeProviderServicesAttribute" /> class.
            </summary>
            <param name="typeName">
                The name of the type that can be used to add the database providers design time services to a <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceCollection" />.
                This type should contain a method with the following signature
                <code>public IServiceCollection ConfigureDesignTimeServices(IServiceCollection serviceCollection)</code>.
            </param>
            <param name="assemblyName">
                The name of the assembly that contains the design time services.
            </param>
            <param name="packageName">
                The NuGet package name that contains the design time services.
            </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.DesignTimeProviderServicesAttribute.TypeName">
            <summary>
                Gets the name of the type that can be used to add the database providers design time services to a <see cref="T:Microsoft.Extensions.DependencyInjection.ServiceCollection" />.
                This type should contain a method with the following signature
                <code>public IServiceCollection ConfigureDesignTimeServices(IServiceCollection serviceCollection)</code>.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.DesignTimeProviderServicesAttribute.AssemblyName">
            <summary>
                Gets the name of the assembly that contains the design time services.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.DesignTimeProviderServicesAttribute.PackageName">
            <summary>
                Gets the NuGet package name that contains the design time services.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServiceCollectionExtensions">
            <summary>
                Extension methods for setting up Entity Framework related services in an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServiceCollectionExtensions.AddEntityFramework(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Adds the services required by the core of Entity Framework to an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
                You use this method when using dependency injection in your application, such as with ASP.NET.
                For more information on setting up dependency injection, see http://go.microsoft.com/fwlink/?LinkId=526890.
            </summary>
            <remarks>
                <para>
                    You only need to use this functionality when you want Entity Framework to resolve the services it uses
                    from an external <see cref="T:System.IServiceProvider" />. If you are not using an external
                    <see cref="T:System.IServiceProvider" /> Entity Framework will take care of creating the services it requires.
                </para>
                <para>
                    The database you are using will also define extension methods that can be called on the returned
                    <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to register the services required by the database.
                    For example, when using Microsoft.EntityFrameworkCore.SqlServer you would call
                    <c>collection.AddEntityFrameworkSqlServer()</c>.
                </para>
                <para>
                    For derived contexts to be registered in the <see cref="T:System.IServiceProvider" /> and resolve their services
                    from the <see cref="T:System.IServiceProvider" /> you must chain a call to the
                    <see
                        cref="M:Microsoft.Extensions.DependencyInjection.EntityFrameworkServiceCollectionExtensions.AddDbContext``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.EntityFrameworkCore.DbContextOptionsBuilder},Microsoft.Extensions.DependencyInjection.ServiceLifetime)" />
                    method on the returned <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
                </para>
            </remarks>
            <example>
                <code>
                    public void ConfigureServices(IServiceCollection services) 
                    {
                        var connectionString = "connection string to database";
            
                        services.AddDbContext&lt;MyContext&gt;(options => options.UseSqlServer(connectionString)); 
                    }
                </code>
            </example>
            <param name="serviceCollection"> The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add services to. </param>
            <returns>
                A builder that allows further Entity Framework specific setup of the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder">
            <summary>
                Provides Entity Framework specific APIs for configuring services in an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
                These APIs are usually accessed by calling
                <see cref="M:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServiceCollectionExtensions.AddEntityFramework(Microsoft.Extensions.DependencyInjection.IServiceCollection)" />
                and then chaining API calls on the returned <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.#ctor(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder" /> class.
            </summary>
            <param name="serviceCollection"> The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> being configured. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.EntityFrameworkServicesBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#Extensions#DependencyInjection#IServiceCollection}#Instance">
            <summary>
                <para>
                    Gets the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> being configured.
                </para>
                <para>
                    This property is intended for use by extension methods that need to make use of services
                    not directly exposed in the public API surface.
                </para>
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1">
            <summary>
                <para>
                    This interface is explicitly implemented by type to hide properties that are not intended to be used in application code
                    but can be used in extension methods written by database providers etc.
                </para>
                <para>
                    This interface is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
            <typeparam name="T"> The type of the property being hidden. </typeparam>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.IInfrastructure`1.Instance">
            <summary>
                Gets the value of the property being hidden.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable">
            <summary>
                <para>
                    A class that exposes annotations. Annotations allow for arbitrary metadata to be stored on an object.
                </para>
                <para>
                    This interface is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable.Item(System.String)">
            <summary>
                Gets the value annotation with the given name, returning null if it does not exist.
            </summary>
            <param name="name"> The key of the annotation to find. </param>
            <returns>
                The value of the existing annotation if an annotation with the specified name already exists. Otherwise, null.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable.FindAnnotation(System.String)">
            <summary>
                Gets the annotation with the given name, returning null if it does not exist.
            </summary>
            <param name="name"> The key of the annotation to find. </param>
            <returns>
                The existing annotation if an annotation with the specified name already exists. Otherwise, null.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable.GetAnnotations">
            <summary>
                Gets all annotations on the current object.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation">
            <summary>
                <para>
                    An arbitrary piece of metadata that can be stored on an object that implements <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable" />.
                </para>
                <para>
                    This interface is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation.Name">
            <summary>
                Gets the key of this annotation.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.IAnnotation.Value">
            <summary>
                Gets the value assigned to this annotation.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextFactory`1">
            <summary>
                A factory for creating derived <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances. Implement this interface to enable
                design-time services for context types that do not have a public default constructor. At design-time,
                derived <see cref="T:Microsoft.EntityFrameworkCore.DbContext" /> instances can be created in order to enable specific design-time
                experiences such as Migrations. Design-time services will automatically discover implementations of
                this interface that are in the same assembly as the derived context.
            </summary>
            <typeparam name="TContext">The type of the context.</typeparam>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextFactory`1.Create(Microsoft.EntityFrameworkCore.Infrastructure.DbContextFactoryOptions)">
            <summary>
                Creates a new instance of a derived context.
            </summary>
            <param name="options"> Information about the environment an application is running in. </param>
            <returns> An instance of <typeparamref name="TContext" />. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions">
            <summary>
                The options to be used by a <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />. You normally override
                <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> or use a <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" />
                to create instances of classes that implement this interface, they are not designed to be directly created
                in your application code.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions.Extensions">
            <summary>
                Gets the extensions that store the configured options.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions.FindExtension``1">
            <summary>
                Gets the extension of the specified type. Returns null if no extension of the specified type is configured.
            </summary>
            <typeparam name="TExtension"> The type of the extension to get. </typeparam>
            <returns> The extension, or null if none was found. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsBuilderInfrastructure">
            <summary>
                <para>
                    Explicitly implemented by <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder" /> to hide methods that are used by database provider
                    extension methods but not intended to be called by application developers.
                </para>
                <para>
                    This interface is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsBuilderInfrastructure.AddOrUpdateExtension``1(``0)">
            <summary>
                <para>
                    Adds the given extension to the options. If an existing extension of the same type already exists, it will be replaced.
                </para>
                <para>
                    This property is intended for use by extension methods to configure the context. It is not intended to be used in
                    application code.
                </para>
            </summary>
            <typeparam name="TExtension"> The type of extension to be added. </typeparam>
            <param name="extension"> The extension to be added. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension">
            <summary>
                <para>
                    Interface for extensions that are stored in <see cref="P:Microsoft.EntityFrameworkCore.DbContextOptions.Extensions" />.
                </para>
                <para>
                    This interface is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptionsExtension.ApplyServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Adds the services required to make the selected options work. This is used when there is no external <see cref="T:System.IServiceProvider" />
                and EF is maintaining its own service provider internally. This allows database providers (and other extensions) to register their
                required services when EF is creating an service provider.
            </summary>
            <param name="services"> The collection to add services to. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.IDesignTimeServices">
            <summary>
                Enables configuring design-time services. Tools will automatically discover implementations of this
                interface that are in the startup assembly.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.IDesignTimeServices.ConfigureDesignTimeServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
                Configures design-time services. Use this method to override the default design-time services with your
                own implementations.
            </summary>
            <param name="serviceCollection"> The design-time service collection. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.IModelCacheKeyFactory">
            <summary>
                <para>
                    Creates keys that uniquely identifies the model for a given context. This is used to store and lookup
                    a cached model for a given context.
                </para>
                <para>
                    This interface is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.IModelCacheKeyFactory.Create(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                Gets the model cache key for a given context.
            </summary>
            <param name="context">
                The context to get the model cache key for.
            </param>
            <returns> The created key. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.IModelCustomizer">
            <summary>
                <para>
                    Performs additional configuration of the model in addition to what is discovered by convention.
                </para>
                <para>
                    This interface is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.IModelCustomizer.Customize(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                <para>
                    Builds the model for a given context.
                </para>
                <para>
                    If any instance data from <paramref name="dbContext" /> is
                    used when building the model, then the implementation of <see cref="M:Microsoft.EntityFrameworkCore.Infrastructure.IModelCacheKeyFactory.Create(Microsoft.EntityFrameworkCore.DbContext)" />
                    also needs to be updated to ensure the model is cached correctly.
                </para>
            </summary>
            <param name="modelBuilder">
                The builder being used to construct the model.
            </param>
            <param name="dbContext">
                The context instance that the model is being created for.
            </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.IModelSource">
            <summary>
                <para>
                    Produces an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IModel" /> based on a context. This is typically implemented by database providers to ensure that any
                    conventions
                    and validation specific to their database are used.
                </para>
                <para>
                    This interface is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.IModelSource.GetModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)">
            <summary>
                Gets the model to be used.
            </summary>
            <param name="context"> The context the model is being produced for. </param>
            <param name="conventionSetBuilder"> The convention set to use when creating the model. </param>
            <param name="validator"> The validator to verify the model can be successfully used with the context. </param>
            <returns> The model to be used. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger">
            <summary>
                An <see cref="T:Microsoft.Extensions.Logging.ILogger" /> for which logging of sensitive data can be enabled or disabled.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger.LogSensitiveData">
            <summary>
                Gets a value indicating whether sensitive data should be logged.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger`1">
            <summary>
                An <see cref="T:Microsoft.Extensions.Logging.ILogger`1" /> for which logging of sensitive data can be enabled or disabled.
            </summary>
            <typeparam name="T"> The type who's name is used for the logger category name. </typeparam>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey">
            <summary>
                <para>
                    A key that uniquely identifies the model for a given context. This is used to store and lookup
                    a cached model for a given context. This default implementation uses the context type as they key, thus
                    assuming that all contexts of a given type have the same model.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey.#ctor(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey" /> class.
            </summary>
            <param name="context">
                The context instance that this key is for.
            </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey.Equals(Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey)">
            <summary>
                Determines if this key is equivalent to a given key (i.e. if they are for the same context type).
            </summary>
            <param name="other">
                The key to compare this key to.
            </param>
            <returns>
                True if the key is for the same context type, otherwise false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey.Equals(System.Object)">
            <summary>
                Determines if this key is equivalent to a given object (i.e. if they are keys for the same context type).
            </summary>
            <param name="obj">
                The object to compare this key to.
            </param>
            <returns>
                True if the object is a <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey" /> and is for the same context type, otherwise false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKey.GetHashCode">
            <summary>
                Gets the hash code for the key.
            </summary>
            <returns>
                The hash code for the key.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKeyFactory">
            <summary>
                <para>
                    Creates keys that uniquely identifies the model for a given context. This is used to store and lookup
                    a cached model for a given context. This default implementation uses the context type as they key, thus
                    assuming that all contexts of a given type have the same model.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.ModelCacheKeyFactory.Create(Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                Gets the model cache key for a given context.
            </summary>
            <param name="context">
                The context to get the model cache key for.
            </param>
            <returns> The created key. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.ModelCustomizer">
            <summary>
                <para>
                    Builds the model for a given context. This default implementation builds the model by calling
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> on the context.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.ModelCustomizer.Customize(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                Performs additional configuration of the model in addition to what is discovered by convention. This default implementation
                builds the model for a given context by calling <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" />
                on the context.
            </summary>
            <param name="modelBuilder">
                The builder being used to construct the model.
            </param>
            <param name="dbContext">
                The context instance that the model is being created for.
            </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource">
            <summary>
                <para>
                    A base implementation of <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IModelSource" /> that produces a model based on the <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> properties
                    exposed on the context. The model is cached to avoid recreating it every time it is requested.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.SetFinder">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Internal.IDbSetFinder" /> that will locate the <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> properties
                on the derived context.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CoreConventionSetBuilder">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder" /> that will build the conventions to be used
                to build the model.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.ModelCustomizer">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IModelCustomizer" /> that will perform additional configuration of the model
                in addition to what is discovered by convention.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.ModelCacheKeyFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IModelCacheKeyFactory" /> that will create keys used to store and lookup models
                the model cache.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.#ctor(Microsoft.EntityFrameworkCore.Internal.IDbSetFinder,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder,Microsoft.EntityFrameworkCore.Infrastructure.IModelCustomizer,Microsoft.EntityFrameworkCore.Infrastructure.IModelCacheKeyFactory)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.GetModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)">
            <summary>
                Returns the model from the cache, or creates a model if it is not present in the cache.
            </summary>
            <param name="context"> The context the model is being produced for. </param>
            <param name="conventionSetBuilder"> The convention set to use when creating the model. </param>
            <param name="validator"> The validator to verify the model can be successfully used with the context. </param>
            <returns> The model to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateModel(Microsoft.EntityFrameworkCore.DbContext,Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder,Microsoft.EntityFrameworkCore.Internal.IModelValidator)">
            <summary>
                Creates the model. This method is called when the model was not found in the cache.
            </summary>
            <param name="context"> The context the model is being produced for. </param>
            <param name="conventionSetBuilder"> The convention set to use when creating the model. </param>
            <param name="validator"> The validator to verify the model can be successfully used with the context. </param>
            <returns> The model to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CreateConventionSet(Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder)">
            <summary>
                Creates the convention set to be used for the model. Uses the <see cref="P:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.CoreConventionSetBuilder" />
                if <paramref name="conventionSetBuilder" /> is null.
            </summary>
            <param name="conventionSetBuilder"> The convention set builder to be used. </param>
            <returns> The convention set to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.ModelSource.FindSets(Microsoft.EntityFrameworkCore.ModelBuilder,Microsoft.EntityFrameworkCore.DbContext)">
            <summary>
                Adds the entity types found in <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> properties on the context to the model.
            </summary>
            <param name="modelBuilder"> The <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> being used to build the model. </param>
            <param name="context"> The context to find <see cref="T:Microsoft.EntityFrameworkCore.DbSet`1" /> properties on. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1">
            <summary>
                <para>
                    A wrapping logger for which logging of sensitive data can be enabled or disabled.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
            <typeparam name="T"> The type who's name is used for the logger category name. </typeparam>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1.#ctor(Microsoft.Extensions.Logging.ILogger{`0},Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1" /> class.
            </summary>
            <param name="logger">
                The underlying logger to which logging information should be written.
            </param>
            <param name="contextOptions">
                The options for the context that this logger is being used with.
            </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.SensitiveDataLogger`1.LogSensitiveData">
            <summary>
                Gets a value indicating whether sensitive information should be written to the underlying logger.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Infrastructure.WarningsConfigurationBuilder">
            <summary>
                <para>
                    Configures the runtime behavior of warnings generated by Entity Framework. You can set a default behavior and behaviors for
                    each warning type.
                </para>
                <para>
                    This class is used within the <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.ConfigureWarnings(System.Action{Microsoft.EntityFrameworkCore.Infrastructure.WarningsConfigurationBuilder})" />
                    API and it is not designed to be directly constructed in your application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.WarningsConfigurationBuilder.#ctor(Microsoft.EntityFrameworkCore.Internal.WarningsConfiguration)">
            <summary>
                <para>
                    Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.WarningsConfigurationBuilder" /> class.
                </para>
                <para>
                    This class is used within the <see cref="M:Microsoft.EntityFrameworkCore.DbContextOptionsBuilder.ConfigureWarnings(System.Action{Microsoft.EntityFrameworkCore.Infrastructure.WarningsConfigurationBuilder})" />
                    API and it is not designed to be directly constructed in your application code.
                </para>
            </summary>
            <param name="warningsConfiguration"> The internal object used to store configuration. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Infrastructure.WarningsConfigurationBuilder.Configuration">
            <summary>
                Gets the internal object used to store configuration.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.WarningsConfigurationBuilder.Default(Microsoft.EntityFrameworkCore.WarningBehavior)">
            <summary>
                Sets the default behavior when a warning is generated.
            </summary>
            <param name="warningBehavior"> The desired behavior. </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.WarningsConfigurationBuilder.Throw(Microsoft.EntityFrameworkCore.Infrastructure.CoreEventId[])">
            <summary>
                Causes an exception to be thrown when the specified core warnings are generated. Database providers (and other extensions)
                may provide extension method overloads of this method to configure this behavior for warnings they generate.
            </summary>
            <param name="coreEventIds">
                The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.CoreEventId" />(s) for the warnings.
            </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.WarningsConfigurationBuilder.Log(Microsoft.EntityFrameworkCore.Infrastructure.CoreEventId[])">
            <summary>
                Causes a warning to be logged when the specified core warnings are generated. Database providers (and other extensions)
                may provide extension method overloads of this method to configure this behavior for warnings they generate.
            </summary>
            <param name="coreEventIds">
                The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.CoreEventId" />(s) for the warnings.
            </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Infrastructure.WarningsConfigurationBuilder.Ignore(Microsoft.EntityFrameworkCore.Infrastructure.CoreEventId[])">
            <summary>
                Causes nothing to happen when the specified core warnings are generated. Database providers (and other extensions)
                may provide extension method overloads of this method to configure this behavior for warnings they generate.
            </summary>
            <param name="coreEventIds">
                The <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.CoreEventId" />(s) for the warnings.
            </param>
            <returns> The same builder instance so that multiple calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy">
            <summary>
                Indicates how the context detects changes to properties for an instance of the entity type.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.Snapshot">
            <summary>
                Original values are recorded when an entity is queried from the database. Changes are detected by scanning the
                current property values and comparing them to the recorded values. This scanning takes place when
                <see cref="M:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker.DetectChanges" /> is called, or when another API call (such as <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" />)
                triggers the change detection process.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.ChangedNotifications">
            <summary>
                To use this strategy, the entity class must implement <see cref="T:System.ComponentModel.INotifyPropertyChanged" />.
                Original values are recorded when an entity is queried from the database. Properties are marked as modified when the
                entity raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.ChangingAndChangedNotifications">
            <summary>
                <para>
                    To use this strategy, the entity class must implement <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> and
                    <see cref="T:System.ComponentModel.INotifyPropertyChanging" />.
                    Original values are recorded when the entity raises the <see cref="E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging" /> event. Properties
                    are
                    marked as modified when the entity raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.
                </para>
                <para>
                    Original values are only recorded when they are required to save changes to the entity. For example, properties that are configured
                    as
                    concurrency tokens.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy.ChangingAndChangedNotificationsWithOriginalValues">
            <summary>
                <para>
                    To use this strategy, the entity class must implement <see cref="T:System.ComponentModel.INotifyPropertyChanged" /> and
                    <see cref="T:System.ComponentModel.INotifyPropertyChanging" />.
                    Original values are recorded when the entity raises the <see cref="E:System.ComponentModel.INotifyPropertyChanging.PropertyChanging" />. Properties are
                    marked as modified when the entity raises the <see cref="E:System.ComponentModel.INotifyPropertyChanged.PropertyChanged" /> event.
                </para>
                <para>
                    Original values are only recorded for all properties, regardless of whether they are required to save changes to the entity.
                </para>
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior">
            <summary>
                Indicates how a delete operation is applied to dependent entities in a relationship when the principal is deleted
                or the relationship is severed.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.Restrict">
            <summary>
                The delete operation is not applied to dependent entities. The dependent entities remain unchanged.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.SetNull">
            <summary>
                The foreign key properties in dependent entities are set to null. This cascading behavior is only applied
                to entities that are being tracked by the context. A corresponding cascade behavior should be setup in the
                database to ensure data that is not being tracked by the context has the same action applied. If you use
                EF to create the database, this cascade behavior will be setup for you.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior.Cascade">
            <summary>
                Dependent entities are also deleted. This cascading behavior is only applied
                to entities that are being tracked by the context. A corresponding cascade behavior should be setup in the
                database to ensure data that is not being tracked by the context has the same action applied. If you use
                EF to create the database, this cascade behavior will be setup for you.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.IEntityType">
            <summary>
                Represents an entity type in an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IModel" />.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IEntityType.BaseType">
            <summary>
                Gets the base type of the entity. Returns null if this is not a derived type in an inheritance hierarchy.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IEntityType.FindPrimaryKey">
            <summary>
                <para>
                    Gets primary key for this entity. Returns null if no primary key is defined.
                </para>
                <para>
                    To be a valid model, each entity type must have a primary key defined. Therefore, the primary key may be
                    null while the model is being created, but will be present by the time the model is used with a <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.
                </para>
            </summary>
            <returns> The primary key, or null if none is defined. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IEntityType.FindKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                Gets the primary or alternate key that is defined on the given properties. Returns null if no key is defined
                for the given properties.
            </summary>
            <param name="properties"> The properties that make up the key. </param>
            <returns> The key, or null if none is defined. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IEntityType.GetKeys">
            <summary>
                Gets the primary and alternate keys for this entity.
            </summary>
            <returns> The primary and alternate keys. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IEntityType.FindForeignKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                Gets the foreign key for the given properties that points to a given primary or alternate key. Returns null
                if no foreign key is found.
            </summary>
            <param name="properties"> The properties that the foreign key is defined on. </param>
            <param name="principalKey"> The primary or alternate key that is referenced. </param>
            <param name="principalEntityType">
                The entity type that the relationship targets. This may be different from the type that <paramref name="principalKey" />
                is defined on when the relationship targets a derived type in an inheritance hierarchy (since the key is defined on the
                base type of the hierarchy).
            </param>
            <returns> The foreign key, or null if none is defined. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IEntityType.GetForeignKeys">
            <summary>
                Gets the foreign keys defined on this entity.
            </summary>
            <returns> The foreign keys defined on this entity. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IEntityType.FindIndex(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                Gets the index defined on the given properties. Returns null if no index is defined.
            </summary>
            <param name="properties"> The properties to find the index on. </param>
            <returns> The index, or null if none is found. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IEntityType.GetIndexes">
            <summary>
                Gets the indexes defined on this entity.
            </summary>
            <returns> The indexes defined on this entity. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IEntityType.FindProperty(System.String)">
            <summary>
                <para>
                    Gets the property with a given name. Returns null if no property with the given name is defined.
                </para>
                <para>
                    This API only finds scalar properties and does not find navigation properties. Use
                    <see cref="M:Microsoft.EntityFrameworkCore.EntityTypeExtensions.FindNavigation(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.String)" /> to find a navigation property.
                </para>
            </summary>
            <param name="name"> The name of the property. </param>
            <returns> The property, or null if none is found. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IEntityType.GetProperties">
            <summary>
                <para>
                    Gets the properties defined on this entity.
                </para>
                <para>
                    This API only returns scalar properties and does not return navigation properties. Use
                    <see cref="M:Microsoft.EntityFrameworkCore.EntityTypeExtensions.GetNavigations(Microsoft.EntityFrameworkCore.Metadata.IEntityType)" /> to get navigation properties.
                </para>
            </summary>
            <returns> The properties defined on this entity. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IEntityType.Model">
            <summary>
                Gets the model that this type belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IEntityType.Name">
            <summary>
                Gets the name of this type.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IEntityType.ClrType">
            <summary>
                <para>
                    Gets the CLR class that is used to represent instances of this type. Returns null if the type does not have a
                    corresponding CLR class (known as a shadow type).
                </para>
                <para>
                    Shadow types are not currently supported in a model that is used at runtime with a <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.
                    Therefore, shadow types will only exist in migration model snapshots, etc.
                </para>
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.IForeignKey">
            <summary>
                Represents a relationship where a foreign key property(s) in a dependent entity type
                reference a corresponding primary or alternate key in a principal entity type.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IForeignKey.DeclaringEntityType">
            <summary>
                Gets the dependent entity type. This may be different from the type that <see cref="P:Microsoft.EntityFrameworkCore.Metadata.IForeignKey.Properties" />
                are defined on when the relationship is defined a derived type in an inheritance hierarchy (since the properties
                may be defined on a base type).
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IForeignKey.Properties">
            <summary>
                Gets the foreign key properties in the dependent entity.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IForeignKey.PrincipalEntityType">
            <summary>
                Gets the principal entity type that this relationship targets. This may be different from the type that
                <see cref="P:Microsoft.EntityFrameworkCore.Metadata.IForeignKey.PrincipalKey" /> is defined on when the relationship targets a derived type in an inheritance
                hierarchy (since the key is defined on the base type of the hierarchy).
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IForeignKey.PrincipalKey">
            <summary>
                Gets the primary or alternate key that the relationship targets.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IForeignKey.DependentToPrincipal">
            <summary>
                Gets the navigation property on the dependent entity type that points to the principal entity.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IForeignKey.PrincipalToDependent">
            <summary>
                Gets the navigation property on the principal entity type that points to the dependent entity.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IForeignKey.IsUnique">
            <summary>
                Gets a value indicating whether the values assigned to the foreign key properties are unique.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IForeignKey.IsRequired">
            <summary>
                Gets a value indicating if this relationship is required. If true, the dependent entity must always be
                assigned to a valid principal entity.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IForeignKey.DeleteBehavior">
            <summary>
                Gets a value indicating how a delete operation is applied to dependent entities in the relationship when the
                principal is deleted or the relationship is severed.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.IIndex">
            <summary>
                Represents an index on a set of properties.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IIndex.Properties">
            <summary>
                Gets the properties that this index is defined on.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IIndex.IsUnique">
            <summary>
                Gets a value indicating whether the values assigned to the indexed properties are unique.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IIndex.DeclaringEntityType">
            <summary>
                Gets the entity type the index is defined on. This may be different from the type that <see cref="P:Microsoft.EntityFrameworkCore.Metadata.IIndex.Properties" />
                are defined on when the index is defined a derived type in an inheritance hierarchy (since the properties
                may be defined on a base type).
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.IKey">
            <summary>
                Represents a primary or alternate key on an entity.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IKey.Properties">
            <summary>
                Gets the properties that make up the key.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IKey.DeclaringEntityType">
            <summary>
                Gets the entity type the key is defined on. This may be different from the type that <see cref="P:Microsoft.EntityFrameworkCore.Metadata.IKey.Properties" />
                are defined on when the key is defined a derived type in an inheritance hierarchy (since the properties
                may be defined on a base type).
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.IModel">
            <summary>
                Metadata about the shape of entities, the relationships between them, and how they map to the database. A model is typically
                created by overriding the <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> method on a derived context, or
                using <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IModel.GetEntityTypes">
            <summary>
                Gets all entity types defined in the model.
            </summary>
            <returns> All entity types defined in the model. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IModel.FindEntityType(System.String)">
            <summary>
                Gets the entity type with the given name. Returns null if no entity type with the given name is found.
            </summary>
            <param name="name"> The name of the entity type to find. </param>
            <returns> The entity type, or null if none are found. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable">
            <summary>
                <para>
                    A class that exposes annotations that can be modified. Annotations allow for arbitrary metadata to be
                    stored on an object.
                </para>
                <para>
                    This interface is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable.Item(System.String)">
            <summary>
                Gets or sets the value of the annotation with the given name.
            </summary>
            <param name="name"> The key of the annotation. </param>
            <returns>
                The value of the existing annotation if an annotation with the specified name already exists. Otherwise, null.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable.GetAnnotations">
            <summary>
                Gets all annotations on the current object.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable.AddAnnotation(System.String,System.Object)">
            <summary>
                Adds an annotation to this object. Throws if an annotation with the specified name already exists.
            </summary>
            <param name="name"> The key of the annotation to be added. </param>
            <param name="value"> The value to be stored in the annotation. </param>
            <returns> The newly added annotation. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable.FindAnnotation(System.String)">
            <summary>
                Gets the annotation with the given name, returning null if it does not exist.
            </summary>
            <param name="name"> The key of the annotation to find. </param>
            <returns>
                The existing annotation if an annotation with the specified name already exists. Otherwise, null.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableAnnotatable.RemoveAnnotation(System.String)">
            <summary>
                Removes the given annotation from this object.
            </summary>
            <param name="name"> The annotation to remove. </param>
            <returns> The annotation that was removed. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType">
            <summary>
                <para>
                    Represents an entity in an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableModel" />.
                </para>
                <para>
                    This interface is used during model creation and allows the metadata to be modified.
                    Once the model is built, <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IEntityType" /> represents a ready-only view of the same metadata.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.Model">
            <summary>
                Gets the model this entity belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.BaseType">
            <summary>
                Gets or sets the base type of the entity. Returns null if this is not a derived type in an inheritance hierarchy.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.SetPrimaryKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IMutableProperty})">
            <summary>
                Sets the primary key for this entity.
            </summary>
            <param name="properties"> The properties that make up the primary key. </param>
            <returns> The newly created key. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.FindPrimaryKey">
            <summary>
                <para>
                    Gets primary key for this entity. Returns null if no primary key is defined.
                </para>
                <para>
                    To be a valid model, each entity type must have a primary key defined. Therefore, the primary key may be
                    null while the model is being created, but will be present by the time the model is used with a <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.
                </para>
            </summary>
            <returns> The primary key, or null if none is defined. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.AddKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IMutableProperty})">
            <summary>
                Adds a new alternate key to this entity type.
            </summary>
            <param name="properties"> The properties that make up the alternate key. </param>
            <returns> The newly created key. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.FindKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                Gets the primary or alternate key that is defined on the given properties. Returns null if no key is defined
                for the given properties.
            </summary>
            <param name="properties"> The properties that make up the key. </param>
            <returns> The key, or null if none is defined. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.GetKeys">
            <summary>
                Gets the primary and alternate keys for this entity.
            </summary>
            <returns> The primary and alternate keys. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.RemoveKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                Removes a primary or alternate key from this entity.
            </summary>
            <param name="properties"> The properties that make up the key. </param>
            <returns> The key that was removed. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.AddForeignKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IMutableProperty},Microsoft.EntityFrameworkCore.Metadata.IMutableKey,Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType)">
            <summary>
                Adds a new relationship to this entity.
            </summary>
            <param name="properties"> The properties that the foreign key is defined on. </param>
            <param name="principalKey"> The primary or alternate key that is referenced. </param>
            <param name="principalEntityType">
                The entity type that the relationship targets. This may be different from the type that <paramref name="principalKey" />
                is defined on when the relationship targets a derived type in an inheritance hierarchy (since the key is defined on the
                base type of the hierarchy).
            </param>
            <returns> The newly created foreign key. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.FindForeignKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                Gets the foreign key for the given properties that points to a given primary or alternate key. Returns null
                if no foreign key is found.
            </summary>
            <param name="properties"> The properties that the foreign key is defined on. </param>
            <param name="principalKey"> The primary or alternate key that is referenced. </param>
            <param name="principalEntityType">
                The entity type that the relationship targets. This may be different from the type that <paramref name="principalKey" />
                is defined on when the relationship targets a derived type in an inheritance hierarchy (since the key is defined on the
                base type of the hierarchy).
            </param>
            <returns> The foreign key, or null if none is defined. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.GetForeignKeys">
            <summary>
                Gets the foreign keys defined on this entity.
            </summary>
            <returns> The foreign keys defined on this entity. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.RemoveForeignKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                Removes a relationship from this entity.
            </summary>
            <param name="properties"> The properties that the foreign key is defined on. </param>
            <param name="principalKey"> The primary or alternate key that is referenced. </param>
            <param name="principalEntityType">
                The entity type that the relationship targets. This may be different from the type that <paramref name="principalKey" />
                is defined on when the relationship targets a derived type in an inheritance hierarchy (since the key is defined on the
                base type of the hierarchy).
            </param>
            <returns> The foreign key that was removed. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.AddIndex(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IMutableProperty})">
            <summary>
                Adds an index to this entity.
            </summary>
            <param name="properties"> The properties that are to be indexed. </param>
            <returns> The newly created index. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.FindIndex(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                Gets the index defined on the given properties. Returns null if no index is defined.
            </summary>
            <param name="properties"> The properties to find the index on. </param>
            <returns> The index, or null if none is found. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.GetIndexes">
            <summary>
                Gets the indexes defined on this entity.
            </summary>
            <returns> The indexes defined on this entity. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.RemoveIndex(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                Removes an index from this entity.
            </summary>
            <param name="properties"> The properties that make up the index. </param>
            <returns> The index that was removed. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.AddProperty(System.String,System.Type)">
            <summary>
                Adds a property to this entity.
            </summary>
            <param name="name"> The name of the property to add. </param>
            <param name="propertyType"> The type of value the property will hold. </param>
            <returns> The newly created property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.FindProperty(System.String)">
            <summary>
                <para>
                    Gets the property with a given name. Returns null if no property with the given name is defined.
                </para>
                <para>
                    This API only finds scalar properties and does not find navigation properties. Use
                    <see cref="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.FindNavigation(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType,System.String)" /> to find
                    a navigation property.
                </para>
            </summary>
            <param name="name"> The name of the property. </param>
            <returns> The property, or null if none is found. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.GetProperties">
            <summary>
                <para>
                    Gets the properties defined on this entity.
                </para>
                <para>
                    This API only returns scalar properties and does not return navigation properties. Use
                    <see cref="M:Microsoft.EntityFrameworkCore.MutableEntityTypeExtensions.GetNavigations(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType)" /> to get navigation
                    properties.
                </para>
            </summary>
            <returns> The properties defined on this entity. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType.RemoveProperty(System.String)">
            <summary>
                Removes a property from this entity.
            </summary>
            <param name="name"> The name of the property to remove. </param>
            <returns> The property that was removed. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey">
            <summary>
                <para>
                    Represents a relationship where a foreign key property(s) in a dependent entity type
                    reference a corresponding primary or alternate key in a principal entity type.
                </para>
                <para>
                    This interface is used during model creation and allows the metadata to be modified.
                    Once the model is built, <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IForeignKey" /> represents a ready-only view of the same metadata.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey.Properties">
            <summary>
                Gets the foreign key properties in the dependent entity.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey.PrincipalKey">
            <summary>
                Gets the primary or alternate key that the relationship targets.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey.DeclaringEntityType">
            <summary>
                Gets the dependent entity type. This may be different from the type that <see cref="P:Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey.Properties" />
                are defined on when the relationship is defined a derived type in an inheritance hierarchy (since the properties
                may be defined on a base type).
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey.PrincipalEntityType">
            <summary>
                Gets the principal entity type that this relationship targets. This may be different from the type that
                <see cref="P:Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey.PrincipalKey" /> is defined on when the relationship targets a derived type in an inheritance
                hierarchy (since the key is defined on the base type of the hierarchy).
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey.DependentToPrincipal">
            <summary>
                Gets the navigation property on the dependent entity type that points to the principal entity.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey.PrincipalToDependent">
            <summary>
                Gets the navigation property on the principal entity type that points to the dependent entity.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey.HasDependentToPrincipal(System.String)">
            <summary>
                Sets the navigation property on the dependent entity type that points to the principal entity.
            </summary>
            <param name="name">
                The name of the navigation property on the dependent type. Passing null will result in there being
                no navigation property defined.
            </param>
            <returns> The newly created navigation property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey.HasDependentToPrincipal(System.Reflection.PropertyInfo)">
            <summary>
                Sets the navigation property on the dependent entity type that points to the principal entity.
            </summary>
            <param name="property">
                The navigation property on the dependent type. Passing null will result in there being
                no navigation property defined.
            </param>
            <returns> The newly created navigation property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey.HasPrincipalToDependent(System.String)">
            <summary>
                Sets the navigation property on the principal entity type that points to the dependent entity.
            </summary>
            <param name="name">
                The name of the navigation property on the principal type. Passing null will result in there being
                no navigation property defined.
            </param>
            <returns> The newly created navigation property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey.HasPrincipalToDependent(System.Reflection.PropertyInfo)">
            <summary>
                Sets the navigation property on the principal entity type that points to the dependent entity.
            </summary>
            <param name="property">
                The name of the navigation property on the principal type. Passing null will result in there being
                no navigation property defined.
            </param>
            <returns> The newly created navigation property. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey.IsUnique">
            <summary>
                Gets or sets a value indicating whether the values assigned to the foreign key properties are unique.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey.IsRequired">
            <summary>
                Gets or sets a value indicating if this relationship is required. If true, the dependent entity must always be
                assigned to a valid principal entity.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableForeignKey.DeleteBehavior">
            <summary>
                Gets or sets a value indicating how a delete operation is applied to dependent entities in the relationship when the
                principal is deleted or the relationship is severed.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.IMutableIndex">
            <summary>
                <para>
                    Represents an index on a set of properties.
                </para>
                <para>
                    This interface is used during model creation and allows the metadata to be modified.
                    Once the model is built, <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IIndex" /> represents a ready-only view of the same metadata.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableIndex.IsUnique">
            <summary>
                Gets or sets a value indicating whether the values assigned to the indexed properties are unique.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableIndex.Properties">
            <summary>
                Gets the properties that this index is defined on.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableIndex.DeclaringEntityType">
            <summary>
                Gets the entity type the index is defined on. This may be different from the type that <see cref="P:Microsoft.EntityFrameworkCore.Metadata.IMutableIndex.Properties" />
                are defined on when the index is defined a derived type in an inheritance hierarchy (since the properties
                may be defined on a base type).
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.IMutableKey">
            <summary>
                <para>
                    Represents a primary or alternate key on an entity.
                </para>
                <para>
                    This interface is used during model creation and allows the metadata to be modified.
                    Once the model is built, <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IKey" /> represents a ready-only view of the same metadata.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableKey.Properties">
            <summary>
                Gets the properties that make up the key.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableKey.DeclaringEntityType">
            <summary>
                Gets the entity type the key is defined on. This may be different from the type that <see cref="P:Microsoft.EntityFrameworkCore.Metadata.IMutableKey.Properties" />
                are defined on when the key is defined a derived type in an inheritance hierarchy (since the properties
                may be defined on a base type).
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.IMutableModel">
            <summary>
                <para>
                    Metadata about the shape of entities, the relationships between them, and how they map to the database. A model is typically
                    created by overriding the <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> method on a derived context, or
                    using <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" />.
                </para>
                <para>
                    This interface is used during model creation and allows the metadata to be modified.
                    Once the model is built, <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IModel" /> represents a ready-only view of the same metadata.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableModel.AddEntityType(System.String)">
            <summary>
                <para>
                    Adds a shadow state entity type to the model.
                </para>
                <para>
                    Shadow entities are not currently supported in a model that is used at runtime with a <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.
                    Therefore, shadow state entity types will only exist in migration model snapshots, etc.
                </para>
            </summary>
            <param name="name"> The name of the entity to be added. </param>
            <returns> The new entity type. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableModel.AddEntityType(System.Type)">
            <summary>
                Adds an entity type to the model.
            </summary>
            <param name="clrType"> The CLR class that is used to represent instances of this entity type. </param>
            <returns> The new entity type. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableModel.FindEntityType(System.String)">
            <summary>
                Gets the entity with the given name. Returns null if no entity type with the given name is found.
            </summary>
            <param name="name"> The name of the entity type to find. </param>
            <returns> The entity type, or null if none are found. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableModel.RemoveEntityType(System.String)">
            <summary>
                Removes an entity type from the model.
            </summary>
            <param name="name"> The name of the entity type to be removed. </param>
            <returns> The entity type that was removed. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.IMutableModel.GetEntityTypes">
            <summary>
                Gets all entity types defined in the model.
            </summary>
            <returns> All entity types defined in the model. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation">
            <summary>
                <para>
                    Represents a navigation property which can be used to navigate a relationship.
                </para>
                <para>
                    This interface is used during model creation and allows the metadata to be modified.
                    Once the model is built, <see cref="T:Microsoft.EntityFrameworkCore.Metadata.INavigation" /> represents a ready-only view of the same metadata.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation.DeclaringEntityType">
            <summary>
                Gets the type that this property belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableNavigation.ForeignKey">
            <summary>
                Gets the foreign key that defines the relationship this navigation property will navigate.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.IMutableProperty">
            <summary>
                <para>
                    Represents a scalar property of an entity.
                </para>
                <para>
                    This interface is used during model creation and allows the metadata to be modified.
                    Once the model is built, <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IProperty" /> represents a ready-only view of the same metadata.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableProperty.DeclaringEntityType">
            <summary>
                Gets the type that this property belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableProperty.IsNullable">
            <summary>
                Gets or sets a value indicating whether this property can contain null.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableProperty.ValueGenerated">
            <summary>
                Gets or sets a value indicating when a value for this property will be generated by the database. Even when the
                property is set to be generated by the database, EF may still attempt to save a specific value (rather than
                having one generated by the database) when the entity is added and a value is assigned, or the property is
                marked as modified for an existing entity. See <see cref="P:Microsoft.EntityFrameworkCore.Metadata.IMutableProperty.IsStoreGeneratedAlways" /> for more information.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableProperty.IsReadOnlyBeforeSave">
            <summary>
                Gets or sets a value indicating whether or not this property can be modified before the entity is
                saved to the database. If true, an exception will be thrown if a value is assigned to
                this property when it is in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableProperty.IsReadOnlyAfterSave">
            <summary>
                Gets or sets a value indicating whether or not this property can be modified after the entity is
                saved to the database. If true, an exception will be thrown if a new value is assigned to
                this property after the entity exists in the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableProperty.RequiresValueGenerator">
            <summary>
                Gets or sets a value indicating whether this property requires a <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" /> to generate
                values when new entities are added to the context.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableProperty.IsConcurrencyToken">
            <summary>
                Gets or sets a value indicating whether this property is used as a concurrency token. When a property is configured
                as a concurrency token the value in the database will be checked when an instance of this entity type
                is updated or deleted during <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> to ensure it has not changed since
                the instance was retrieved from the database. If it has changed, an exception will be thrown and the
                changes will not be applied to the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableProperty.IsStoreGeneratedAlways">
            <summary>
                Gets or sets a value indicating whether or not the database will always generate a value for this property.
                If set to true, a value will always be read back from the database whenever the entity is saved
                regardless of the state of the property. If set to false, whenever a value is assigned to the property
                (or marked as modified) EF will attempt to save that value to the database rather than letting the
                database generate one.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase">
            <summary>
                <para>
                    Base type for navigation and scalar properties.
                </para>
                <para>
                    This interface is used during model creation and allows the metadata to be modified.
                    Once the model is built, <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase" /> represents a ready-only view of the same metadata.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutablePropertyBase.DeclaringType">
            <summary>
                Gets the type that this property belongs to.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.IMutableTypeBase">
            <summary>
                <para>
                    Represents a type in an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableModel" />.
                </para>
                <para>
                    This interface is used during model creation and allows the metadata to be modified.
                    Once the model is built, <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ITypeBase" /> represents a ready-only view of the same metadata.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IMutableTypeBase.Model">
            <summary>
                Gets the model that this type belongs to.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.INavigation">
            <summary>
                Represents a navigation property which can be used to navigate a relationship.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.INavigation.DeclaringEntityType">
            <summary>
                Gets the entity type that this property belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.INavigation.ForeignKey">
            <summary>
                Gets the foreign key that defines the relationship this navigation property will navigate.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.IProperty">
            <summary>
                Represents a scalar property of an entity.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IProperty.DeclaringEntityType">
            <summary>
                Gets the entity type that this property belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IProperty.IsNullable">
            <summary>
                Gets a value indicating whether this property can contain null.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IProperty.IsReadOnlyBeforeSave">
            <summary>
                Gets a value indicating whether or not this property can be modified before the entity is
                saved to the database. If true, an exception will be thrown if a value is assigned to
                this property when it is in the <see cref="F:Microsoft.EntityFrameworkCore.EntityState.Added" /> state.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IProperty.IsReadOnlyAfterSave">
            <summary>
                Gets a value indicating whether or not this property can be modified after the entity is
                saved to the database. If true, an exception will be thrown if a new value is assigned to
                this property after the entity exists in the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IProperty.IsStoreGeneratedAlways">
            <summary>
                Gets a value indicating whether or not the database will always generate a value for this property.
                If set to true, a value will always be read back from the database whenever the entity is saved
                regardless of the state of the property. If set to false, whenever a value is assigned to the property
                (or marked as modified) EF will attempt to save that value to the database rather than letting the
                database generate one.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IProperty.ValueGenerated">
            <summary>
                Gets a value indicating when a value for this property will be generated by the database. Even when the
                property is set to be generated by the database, EF may still attempt to save a specific value (rather than
                having one generated by the database) when the entity is added and a value is assigned, or the property is
                marked as modified for an existing entity. See <see cref="P:Microsoft.EntityFrameworkCore.Metadata.IProperty.IsStoreGeneratedAlways" /> for more information.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IProperty.RequiresValueGenerator">
            <summary>
                Gets a value indicating whether this property requires a <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" /> to generate
                values when new entities are added to the context.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IProperty.IsConcurrencyToken">
            <summary>
                Gets a value indicating whether this property is used as a concurrency token. When a property is configured
                as a concurrency token the value in the database will be checked when an instance of this entity type
                is updated or deleted during <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> to ensure it has not changed since
                the instance was retrieved from the database. If it has changed, an exception will be thrown and the
                changes will not be applied to the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IProperty.ClrType">
            <summary>
                Gets the type of value that this property holds.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IProperty.IsShadowProperty">
            <summary>
                Gets a value indicating whether this is a shadow property. A shadow property is one that does not have a
                corresponding property in the entity class. The current value for the property is stored in
                the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> rather than being stored in instances of the entity class.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase">
            <summary>
                Base type for navigation and scalar properties.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.DeclaringEntityType">
            <summary>
                Gets the entity type that this property belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.Name">
            <summary>
                Gets the name of the property.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.DeclaringType">
            <summary>
                Gets the type that this property belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.ClrType">
            <summary>
                Gets the type of value that this property holds.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.PropertyInfo">
            <summary>
                Gets the <see cref="P:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.PropertyInfo" /> for the underlying CLR property that this
                object represents. This may be null for shadow properties or properties mapped directly to fields.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.FieldInfo">
            <summary>
                Gets the <see cref="P:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.FieldInfo" /> for the underlying CLR field that this
                object represents. This may be null for shadow properties or if the backing field for the
                property is not known.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.IPropertyBase.IsShadowProperty">
            <summary>
                Gets a value indicating whether this is a shadow property. A shadow property is one that does not have a
                corresponding property in the entity class. The current value for the property is stored in
                the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> rather than being stored in instances of the entity class.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.ITypeBase">
            <summary>
                Represents a type in an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IModel" />.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.ITypeBase.Model">
            <summary>
                Gets the model that this type belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.ITypeBase.Name">
            <summary>
                Gets the name of this type.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.ITypeBase.ClrType">
            <summary>
                <para>
                    Gets the CLR class that is used to represent instances of this type. Returns null if the type does not have a
                    corresponding CLR class (known as a shadow type).
                </para>
                <para>
                    Shadow types are not currently supported in a model that is used at runtime with a <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.
                    Therefore, shadow types will only exist in migration model snapshots, etc.
                </para>
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode">
            <summary>
                <para>
                    Pass a value from this enum to <see cref="M:Microsoft.EntityFrameworkCore.ModelBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)" />,
                    <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)" />, or
                    <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)" /> to change whether the property
                    or backing field will be used when reading and writing to a property or field.
                </para>
                <para>
                    If no access mode is set, then the backing field for a property will be used if possible
                    when constructing new instances of the entity. The property getter or setter will be used,
                    if possible, for all other accesses of the property. Note that when it is not possible
                    to use the field because it could not be found by convention and was not specified using
                    <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.HasField(System.String)" />, then the property will be used instead. Likewise,
                    when it is not possible to use the property getter or setter, for example when the
                    property is read-only, then the field will be used instead.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode.Field">
            <summary>
                <para>
                    Enforces that all accesses to the property must go through the field.
                </para>
                <para>
                    An exception will be thrown if this mode is set and it is not possible to read
                    from or write to the field.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode.FieldDuringConstruction">
            <summary>
                <para>
                    Enforces that all accesses to the property must go through the field when
                    new instances are being constructed. New instances are typically constructed when
                    entities are queried from the database.
                    An exception will be thrown if this mode is set and it is not possible to
                    write to the field.
                </para>
                <para>
                    All other uses of the property will go through the property getters and setters,
                    unless this is not possible because, for example, the property is read-only, in which
                    case these accesses will also use the field.
                </para>
                <para>
                    This access mode is similar to the default mode used if none has been set except
                    that it will throw an exception if it is not possible to write to the field for
                    entity construction. The default access mode will fall back to using the property
                    instead.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode.Property">
            <summary>
                <para>
                    Enforces that all accesses to the property must go through the property
                    getters and setters, even when new objects are being constructed.
                </para>
                <para>
                    An exception will be thrown if this mode is set and it is not possible to read
                    from or write to the property, for example because it is read-only.
                </para>
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.SimpleModelFactory">
            <summary>
                <para>
                    Creates instances of <see cref="T:Microsoft.EntityFrameworkCore.Metadata.IMutableModel" /> that have no conventions. This is useful when
                    Exhaustively configuring a model based on some existing metadata.
                </para>
                <para>
                    This is typically not used in application code since building a model by overriding
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnModelCreating(Microsoft.EntityFrameworkCore.ModelBuilder)" /> or using <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" />
                    directly is much easier.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.SimpleModelFactory.Create">
            <summary>
                Creates an empty model with no conventions. All aspects of the model must be exhaustively configured.
            </summary>
            <returns> The newly created model. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated">
            <summary>
                Indicates when a value for a property will be generated by the database. Even when a
                property is set to be generated by the database, EF may still attempt to save a specific value (rather than
                having one generated by the database) when an entity is added and a value is assigned, or the property is
                marked as modified for an existing entity.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.Never">
            <summary>
                A value is never generated by the database.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAdd">
            <summary>
                A value is generated by the database when an entity is added. The most common scenario for this
                is generated primary key values.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.ValueGenerated.OnAddOrUpdate">
            <summary>
                A value is generated every time an entity is saved. This is typically used for scenarios such as row
                versions, timestamps, etc.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder">
            <summary>
                <para>
                    Provides a simple API for configuring a relationship where configuration began on
                    an end of the relationship with a collection that contains instances of another entity type.
                </para>
                <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> API
                    and it is not designed to be directly constructed in your application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.CollectionName">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.CollectionProperty">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.RelatedEntityType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.DeclaringEntityType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalRelationshipBuilder}#Instance">
            <summary>
                <para>
                    Gets the internal builder being used to configure the relationship.
                </para>
                <para>
                    This property is intended for use by extension methods that need to make use of services
                    not directly exposed in the public API surface.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.WithOne(System.String)">
            <summary>
                Configures this as a one-to-many relationship.
            </summary>
            <param name="navigationName">
                The name of the reference navigation property on the other end of this relationship.
                If null, there is no navigation property on the other end of the relationship.
            </param>
            <returns> An object to further configure the relationship. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.WithOneBuilder(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.WithOneBuilder(System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder`2">
            <summary>
                <para>
                    Provides a simple API for configuring a relationship where configuration began on
                    an end of the relationship with a collection that contains instances of another entity type.
                </para>
                <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> API
                    and it is not designed to be directly constructed in your application code.
                </para>
            </summary>
            <typeparam name="TEntity"> The entity type to be configured. </typeparam>
            <typeparam name="TRelatedEntity"> The entity type that this relationship targets. </typeparam>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder`2.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder`2.WithOne(System.Linq.Expressions.Expression{System.Func{`1,`0}})">
            <summary>
                Configures this as a one-to-many relationship.
            </summary>
            <param name="navigationExpression">
                A lambda expression representing the reference navigation property on the other end of this
                relationship (<c>post => post.Blog</c>). If no property is specified, the relationship will be
                configured without a navigation property on the other end of the relationship.
            </param>
            <returns> An object to further configure the relationship. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder`2.WithOne(System.String)">
            <summary>
                Configures this as a one-to-many relationship.
            </summary>
            <param name="navigationName">
                The name of the reference navigation property on the other end of this relationship.
                If null, there is no navigation property on the other end of the relationship.
            </param>
            <returns> An object to further configure the relationship. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder">
            <summary>
                <para>
                    Provides a simple API for configuring an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />.
                </para>
                <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> API
                    and it is not designed to be directly constructed in your application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.New(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalEntityTypeBuilder}#Instance">
            <summary>
                Gets the internal builder being used to configure the entity type.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Metadata">
            <summary>
                The entity type being configured.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance">
            <summary>
                The model that the entity type belongs to.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasAnnotation(System.String,System.Object)">
            <summary>
                Adds or updates an annotation on the entity type. If an annotation with the key specified in
                <paramref name="annotation" /> already exists it's value will be updated.
            </summary>
            <param name="annotation"> The key of the annotation to be added or updated. </param>
            <param name="value"> The value to be stored in the annotation. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasBaseType(System.String)">
            <summary>
                Sets the base type of this entity in an inheritance hierarchy.
            </summary>
            <param name="name"> The name of the base type. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasBaseType(System.Type)">
            <summary>
                Sets the base type of this entity in an inheritance hierarchy.
            </summary>
            <param name="entityType"> The base type. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasKey(System.String[])">
            <summary>
                Sets the properties that make up the primary key for this entity type.
            </summary>
            <param name="propertyNames"> The names of the properties that make up the primary key. </param>
            <returns> An object that can be used to configure the primary key. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasAlternateKey(System.String[])">
            <summary>
                Creates a new unique constraint for this entity type if one does not already exist over the specified
                properties.
            </summary>
            <param name="propertyNames"> The names of the properties that make up the unique constraint. </param>
            <returns> An object that can be used to configure the unique constraint. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property``1(System.String)">
            <summary>
                <para>
                    Returns an object that can be used to configure a property of the entity type.
                    If no property with the given name exists, then a new property will be added.
                </para>
                <para>
                    When adding a new property, if a property with the same name exists in the entity class
                    then it will be added to the model. If no property exists in the entity class, then
                    a new shadow state property will be added. A shadow state property is one that does not have a
                    corresponding property in the entity class. The current value for the property is stored in
                    the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> rather than being stored in instances of the entity class.
                </para>
            </summary>
            <typeparam name="TProperty"> The type of the property to be configured. </typeparam>
            <param name="propertyName"> The name of the property to be configured. </param>
            <returns> An object that can be used to configure the property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property(System.Type,System.String)">
            <summary>
                <para>
                    Returns an object that can be used to configure a property of the entity type.
                    If no property with the given name exists, then a new property will be added.
                </para>
                <para>
                    When adding a new property, if a property with the same name exists in the entity class
                    then it will be added to the model. If no property exists in the entity class, then
                    a new shadow state property will be added. A shadow state property is one that does not have a
                    corresponding property in the entity class. The current value for the property is stored in
                    the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> rather than being stored in instances of the entity class.
                </para>
            </summary>
            <param name="propertyType"> The type of the property to be configured. </param>
            <param name="propertyName"> The name of the property to be configured. </param>
            <returns> An object that can be used to configure the property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Property(System.String)">
            <summary>
                <para>
                    Returns an object that can be used to configure a property of the entity type.
                    If no property with the given name exists, then a new property will be added.
                </para>
                <para>
                    When adding a new property with this overload the property name must match the
                    name of a CLR property or field on the entity type. This overload cannot be used to
                    add a new shadow state property.
                </para>
            </summary>
            <param name="propertyName"> The name of the property to be configured. </param>
            <returns> An object that can be used to configure the property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.Ignore(System.String)">
            <summary>
                Excludes the given property from the entity type. This method is typically used to remove properties
                from the entity type that were added by convention.
            </summary>
            <param name="propertyName"> The name of then property to be removed from the entity type. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasIndex(System.String[])">
            <summary>
                Configures an index on the specified properties. If there is an existing index on the given
                set of properties, then the existing index will be returned for configuration.
            </summary>
            <param name="propertyNames"> The names of the properties that make up the index. </param>
            <returns> An object that can be used to configure the index. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.Type,System.String)">
            <summary>
                <para>
                    Configures a relationship where this entity type has a reference that points
                    to a single instance of the other type in the relationship.
                </para>
                <para>
                    After calling this method, you should chain a call to
                    <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)" />
                    or <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithOne(System.String)" /> to fully configure
                    the relationship. Calling just this method without the chained call will not
                    produce a valid relationship.
                </para>
            </summary>
            <param name="relatedType"> The entity type that this relationship targets. </param>
            <param name="navigationName">
                The name of the reference navigation property on this entity type that represents the relationship. If
                no property is specified, the relationship will be configured without a navigation property on this
                end.
            </param>
            <returns> An object that can be used to configure the relationship. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOne(System.String,System.String)">
            <summary>
                <para>
                    Configures a relationship where this entity type has a reference that points
                    to a single instance of the other type in the relationship.
                </para>
                <para>
                    After calling this method, you should chain a call to
                    <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)" />
                    or <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithOne(System.String)" /> to fully configure
                    the relationship. Calling just this method without the chained call will not
                    produce a valid relationship.
                </para>
            </summary>
            <param name="relatedTypeName"> The name of the entity type that this relationship targets. </param>
            <param name="navigationName">
                The name of the reference navigation property on this entity type that represents the relationship. If
                no property is specified, the relationship will be configured without a navigation property on this
                end.
            </param>
            <returns> An object that can be used to configure the relationship. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasMany(System.Type,System.String)">
            <summary>
                <para>
                    Configures a relationship where this entity type has a collection that contains
                    instances of the other type in the relationship.
                </para>
                <para>
                    After calling this method, you should chain a call to
                    <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.WithOne(System.String)" />
                    to fully configure the relationship. Calling just this method without the chained call will not
                    produce a valid relationship.
                </para>
            </summary>
            <param name="relatedType"> The entity type that this relationship targets. </param>
            <param name="navigationName">
                The name of the collection navigation property on this entity type that represents the relationship. If
                no property is specified, the relationship will be configured without a navigation property on this
                end.
            </param>
            <returns> An object that can be used to configure the relationship. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasMany(System.String,System.String)">
            <summary>
                <para>
                    Configures a relationship where this entity type has a collection that contains
                    instances of the other type in the relationship.
                </para>
                <para>
                    After calling this method, you should chain a call to
                    <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder.WithOne(System.String)" />
                    to fully configure the relationship. Calling just this method without the chained call will not
                    produce a valid relationship.
                </para>
            </summary>
            <param name="relatedTypeName"> The name of the entity type that this relationship targets. </param>
            <param name="navigationName">
                The name of the collection navigation property on this entity type that represents the relationship. If
                no property is specified, the relationship will be configured without a navigation property on this
                end.
            </param>
            <returns> An object that can be used to configure the relationship. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOneBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasOneBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasManyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasManyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.HasChangeTrackingStrategy(Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy)">
            <summary>
                Configures the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy" /> to be used for this entity type.
                This strategy indicates how the context detects changes to properties for an instance of the entity type.
            </summary>
            <param name="changeTrackingStrategy"> The change tracking strategy to be used. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)">
            <summary>
                <para>
                    Sets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" /> to use for all properties of this entity type.
                </para>
                <para>
                    By default, the backing field, if one is found by convention or has been specified, is used when
                    new objects are constructed, typically when entities are queried from the database.
                    Properties are used for all other accesses.  Calling this method witll change that behavior
                    for all properties of this entity type as described in the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" /> enum.
                </para>
                <para>
                    Calling this method overrrides for all properties of this entity type any access mode that was
                    set on the model.
                </para>
            </summary>
            <param name="propertyAccessMode"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" /> to use for properties of this entity type. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1">
            <summary>
                <para>
                    Provides a simple API for configuring an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType" />.
                </para>
                <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> API
                    and it is not designed to be directly constructed in your application code.
                </para>
            </summary>
            <typeparam name="TEntity"> The entity type being configured. </typeparam>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.New(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)">
            <summary>
                Creates a new builder based on the provided internal builder. This overridden implementation creates
                <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1" /> instances so that logic inherited from the base class will
                use those instead of <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder" />.
            </summary>
            <param name="builder"> The internal builder to create the new builder from. </param>
            <returns> The newly created builder. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasAnnotation(System.String,System.Object)">
            <summary>
                Adds or updates an annotation on the entity type. If an annotation with the key specified in
                <paramref name="annotation" /> already exists it's value will be updated.
            </summary>
            <param name="annotation"> The key of the annotation to be added or updated. </param>
            <param name="value"> The value to be stored in the annotation. </param>
            <returns> The same typeBuilder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasBaseType(System.String)">
            <summary>
                Sets the base type of this entity in an inheritance hierarchy.
            </summary>
            <param name="name"> The name of the base type. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasBaseType(System.Type)">
            <summary>
                Sets the base type of this entity in an inheritance hierarchy.
            </summary>
            <param name="entityType"> The base type. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasBaseType``1">
            <summary>
                Sets the base type of this entity in an inheritance hierarchy.
            </summary>
            <typeparam name="TBaseType"> The base type. </typeparam>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
                Sets the properties that make up the primary key for this entity type.
            </summary>
            <param name="keyExpression">
                <para>
                    A lambda expression representing the primary key property(s) (<c>blog => blog.Url</c>).
                </para>
                <para>
                    If the primary key is made up of multiple properties then specify an anonymous type including the
                    properties (<c>post => new { post.Title, post.BlogId }</c>).
                </para>
            </param>
            <returns> An object that can be used to configure the primary key. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasAlternateKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
                Creates a new unique constraint for this entity type if one does not already exist over the specified
                properties.
            </summary>
            <param name="keyExpression">
                <para>
                    A lambda expression representing the unique constraint property(s) (<c>blog => blog.Url</c>).
                </para>
                <para>
                    If the unique constraint is made up of multiple properties then specify an anonymous type including
                    the properties (<c>post => new { post.Title, post.BlogId }</c>).
                </para>
            </param>
            <returns> An object that can be used to configure the unique constraint. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Property``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
                Returns an object that can be used to configure a property of the entity type.
                If the specified property is not already part of the model, it will be added.
            </summary>
            <param name="propertyExpression">
                A lambda expression representing the property to be configured (
                <c>blog => blog.Url</c>).
            </param>
            <returns> An object that can be used to configure the property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Ignore(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
                Excludes the given property from the entity type. This method is typically used to remove properties
                from the entity type that were added by convention.
            </summary>
            <param name="propertyExpression">
                A lambda expression representing the property to be ignored
                (<c>blog => blog.Url</c>).
            </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.Ignore(System.String)">
            <summary>
                Excludes the given property from the entity type. This method is typically used to remove properties
                from the entity type that were added by convention.
            </summary>
            <param name="propertyName"> The name of then property to be removed from the entity type. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasIndex(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
                Configures an index on the specified properties. If there is an existing index on the given
                set of properties, then the existing index will be returned for configuration.
            </summary>
            <param name="indexExpression">
                <para>
                    A lambda expression representing the property(s) to be included in the index
                    (<c>blog => blog.Url</c>).
                </para>
                <para>
                    If the index is made up of multiple properties then specify an anonymous type including the
                    properties (<c>post => new { post.Title, post.BlogId }</c>).
                </para>
            </param>
            <returns> An object that can be used to configure the index. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasOne``1(System.Linq.Expressions.Expression{System.Func{`0,``0}})">
            <summary>
                <para>
                    Configures a relationship where this entity type has a reference that points
                    to a single instance of the other type in the relationship.
                </para>
                <para>
                    After calling this method, you should chain a call to
                    <see
                        cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2.WithMany(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{`0}}})" />
                    or
                    <see
                        cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2.WithOne(System.Linq.Expressions.Expression{System.Func{`1,`0}})" />
                    to fully configure the relationship. Calling just this method without the chained call will not
                    produce a valid relationship.
                </para>
            </summary>
            <typeparam name="TRelatedEntity"> The entity type that this relationship targets. </typeparam>
            <param name="navigationExpression">
                A lambda expression representing the reference navigation property on this entity type that represents
                the relationship (<c>post => post.Blog</c>). If no property is specified, the relationship will be
                configured without a navigation property on this end.
            </param>
            <returns> An object that can be used to configure the relationship. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasMany``1(System.Linq.Expressions.Expression{System.Func{`0,System.Collections.Generic.IEnumerable{``0}}})">
            <summary>
                <para>
                    Configures a relationship where this entity type has a collection that contains
                    instances of the other type in the relationship.
                </para>
                <para>
                    After calling this method, you should chain a call to
                    <see
                        cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.CollectionNavigationBuilder`2.WithOne(System.Linq.Expressions.Expression{System.Func{`1,`0}})" />
                    to fully configure the relationship. Calling just this method without the chained call will not
                    produce a valid relationship.
                </para>
            </summary>
            <typeparam name="TRelatedEntity"> The entity type that this relationship targets. </typeparam>
            <param name="navigationExpression">
                A lambda expression representing the collection navigation property on this entity type that represents
                the relationship (<c>blog => blog.Posts</c>). If no property is specified, the relationship will be
                configured without a navigation property on this end.
            </param>
            <returns> An object that can be used to configure the relationship. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.HasChangeTrackingStrategy(Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy)">
            <summary>
                Configures the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy" /> to be used for this entity type.
                This strategy indicates how the context detects changes to properties for an instance of the entity type.
            </summary>
            <param name="changeTrackingStrategy"> The change tracking strategy to be used. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.EntityTypeBuilder`1.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)">
            <summary>
                <para>
                    Sets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" /> to use for all properties of this entity type.
                </para>
                <para>
                    By default, the backing field, if one is found by convention or has been specified, is used when
                    new objects are constructed, typically when entities are queried from the database.
                    Properties are used for all other accesses.  Calling this method witll change that behavior
                    for all properties of this entity type as described in the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" /> enum.
                </para>
                <para>
                    Calling this method overrrides for all properties of this entity type any access mode that was
                    set on the model.
                </para>
            </summary>
            <param name="propertyAccessMode"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" /> to use for properties of this entity type. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder">
            <summary>
                <para>
                    Provides a simple API for configuring an <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Internal.Index" />.
                </para>
                <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> API
                    and it is not designed to be directly constructed in your application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalIndexBuilder}#Instance">
            <summary>
                The internal builder being used to configure the index.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Metadata">
            <summary>
                The index being configured.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance">
            <summary>
                The model that the index belongs to.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.HasAnnotation(System.String,System.Object)">
            <summary>
                Adds or updates an annotation on the index. If an annotation with the key specified in
                <paramref name="annotation" />
                already exists it's value will be updated.
            </summary>
            <param name="annotation"> The key of the annotation to be added or updated. </param>
            <param name="value"> The value to be stored in the annotation. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.IndexBuilder.IsUnique(System.Boolean)">
            <summary>
                Configures whether this index is unique (i.e. the value(s) for each instance must be unique).
            </summary>
            <param name="unique"> A value indicating whether this index is unique. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder">
            <summary>
                <para>
                    Provides a simple API for configuring a <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Internal.Key" />.
                </para>
                <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> API
                    and it is not designed to be directly constructed in your application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalKeyBuilder}#Instance">
            <summary>
                The internal builder being used to configure the key.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder.Metadata">
            <summary>
                The key being configured.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance">
            <summary>
                The model that the key belongs to.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.KeyBuilder.HasAnnotation(System.String,System.Object)">
            <summary>
                Adds or updates an annotation on the key. If an annotation with the key specified in
                <paramref name="annotation" />
                already exists it's value will be updated.
            </summary>
            <param name="annotation"> The key of the annotation to be added or updated. </param>
            <param name="value"> The value to be stored in the annotation. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder">
            <summary>
                <para>
                    Provides a simple API for configuring a <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Internal.Property" />.
                </para>
                <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> API
                    and it is not designed to be directly constructed in your application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalPropertyBuilder}#Instance">
            <summary>
                The internal builder being used to configure the property.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.Metadata">
            <summary>
                The property being configured.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance">
            <summary>
                The model that the property belongs to.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.HasAnnotation(System.String,System.Object)">
            <summary>
                Adds or updates an annotation on the property. If an annotation with the key specified in
                <paramref name="annotation" /> already exists it's value will be updated.
            </summary>
            <param name="annotation"> The key of the annotation to be added or updated. </param>
            <param name="value"> The value to be stored in the annotation. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.IsRequired(System.Boolean)">
            <summary>
                Configures whether this property must have a value assigned or whether null is a valid value.
                A property can only be configured as non-required if it is based on a CLR type that can be
                assigned null.
            </summary>
            <param name="required"> A value indicating whether the property is required. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.HasMaxLength(System.Int32)">
            <summary>
                Configures the maximum length of data that can be stored in this property.
                Maximum length can only be set on array properties (including <see cref="T:System.String" /> properties).
            </summary>
            <param name="maxLength"> The maximum length of data allowed in the property. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.IsUnicode(System.Boolean)">
            <summary>
                Configures the property as capable of persisting unicode characters or not.
                Can only be set on <see cref="T:System.String" /> properties.
            </summary>
            <param name="unicode"> A value indicating whether the property can contain unicode characters or not. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.IsRowVersion">
            <summary>
                <para>
                    Configures the property as <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.ValueGeneratedOnAddOrUpdate" /> and
                    <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.IsConcurrencyToken(System.Boolean)" />.
                </para>
                <para>
                    Database providers can choose to interpret this in different way, but it is commonly used
                    to indicate some form of automatic row-versioning as used for optimistic concurrency detection.
                </para>
            </summary>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.HasValueGenerator``1">
            <summary>
                <para>
                    Configures the <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" /> that will generate values for this property.
                </para>
                <para>
                    Values are generated when the entity is added to the context using, for example,
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)" />. Values are generated only when the property is assigned
                    the CLR default value (null for string, 0 for int, Guid.Empty for Guid, etc.).
                </para>
                <para>
                    A single instance of this type will be created and used to generate values for this property in all
                    instances of the entity type. The type must be instantiable and have a parameterless constructor.
                </para>
                <para>
                    This method is intended for use with custom value generation. Value generation for common cases is
                    usually handled automatically by the database provider.
                </para>
            </summary>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.HasValueGenerator(System.Type)">
            <summary>
                <para>
                    Configures the <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" /> that will generate values for this property.
                </para>
                <para>
                    Values are generated when the entity is added to the context using, for example,
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)" />. Values are generated only when the property is assigned
                    the CLR default value (null for string, 0 for int, Guid.Empty for Guid, etc.).
                </para>
                <para>
                    A single instance of this type will be created and used to generate values for this property in all
                    instances of the entity type. The type must be instantiable and have a parameterless constructor.
                </para>
                <para>
                    This method is intended for use with custom value generation. Value generation for common cases is
                    usually handled automatically by the database provider.
                </para>
                <para>
                    Setting null does not disable value generation for this property, it just clears any generator explicitly
                    configured for this property. The database provider may still have a value generator for the property type.
                </para>
            </summary>
            <param name="valueGeneratorType"> A type that inherits from <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" /> </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.HasValueGenerator(System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator})">
            <summary>
                <para>
                    Configures a factory for creating a <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" /> to use to generate values
                    for this property.
                </para>
                <para>
                    Values are generated when the entity is added to the context using, for example,
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)" />. Values are generated only when the property is assigned
                    the CLR default value (null for string, 0 for int, Guid.Empty for Guid, etc.).
                </para>
                <para>
                    This factory will be invoked once to create a single instance of the value generator, and
                    this will be used to generate values for this property in all instances of the entity type.
                </para>
                <para>
                    This method is intended for use with custom value generation. Value generation for common cases is
                    usually handled automatically by the database provider.
                </para>
            </summary>
            <param name="factory"> A delegate that will be used to create value generator instances. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.IsConcurrencyToken(System.Boolean)">
            <summary>
                Configures whether this property should be used as a concurrency token. When a property is configured
                as a concurrency token the value in the database will be checked when an instance of this entity type
                is updated or deleted during <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> to ensure it has not changed since
                the instance was retrieved from the database. If it has changed, an exception will be thrown and the
                changes will not be applied to the database.
            </summary>
            <param name="concurrencyToken"> A value indicating whether this property is a concurrency token. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.ValueGeneratedNever">
            <summary>
                Configures a property to never have a value generated when an instance of this
                entity type is saved.
            </summary>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
            <remarks>
                Note that temporary values may still be generated for use internally before a
                new entity is saved.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.ValueGeneratedOnAdd">
            <summary>
                Configures a property to have a value generated only when saving a new entity, unless a non-null,
                non-temporary value has been set, in which case the set value will be saved instead. The value
                may be generated by a client-side value generator or may be generated by the database as part
                of saving the entity.
            </summary>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.ValueGeneratedOnAddOrUpdate">
            <summary>
                Configures a property to have a value generated only when saving a new or existing entity, unless
                a non-null, non-temporary value has been set for a new entity, or the existing property value has
                been modified for an existing entity, in which case the set value will be saved instead.
            </summary>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.HasField(System.String)">
            <summary>
                <para>
                    Sets the backing field to use for this property.
                </para>
                <para>
                    Backing fields are normally found by convention as described
                    here: http://go.microsoft.com/fwlink/?LinkId=723277.
                    This method is useful for setting backing fields explicitly in cases where the
                    correct field is not found by convention.
                </para>
                <para>
                    By default, the backing field, if one is found or has been specified, is used when
                    new objects are constructed, typically when entities are queried from the database.
                    Properties are used for all other accesses. This can be changed by calling
                    <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)" />.
                </para>
            </summary>
            <param name="fieldName"> The field name. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)">
            <summary>
                <para>
                    Sets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" /> to use for this property.
                </para>
                <para>
                    By default, the backing field, if one is found by convention or has been specified, is used when
                    new objects are constructed, typically when entities are queried from the database.
                    Properties are used for all other accesses.  Calling this method witll change that behavior
                    for this property as described in the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" /> enum.
                </para>
                <para>
                    Calling this method overrrides for this property any access mode that was set on the
                    entity type or model.
                </para>
            </summary>
            <param name="propertyAccessMode"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" /> to use for this property. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1">
            <summary>
                <para>
                    Provides a simple API for configuring a <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Internal.Property" />.
                </para>
                <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> API
                    and it is not designed to be directly constructed in your application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1.HasAnnotation(System.String,System.Object)">
            <summary>
                Adds or updates an annotation on the property. If an annotation with the key specified in
                <paramref name="annotation" /> already exists it's value will be updated.
            </summary>
            <param name="annotation"> The key of the annotation to be added or updated. </param>
            <param name="value"> The value to be stored in the annotation. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1.IsRequired(System.Boolean)">
            <summary>
                Configures whether this property must have a value assigned or whether null is a valid value.
                A property can only be configured as non-required if it is based on a CLR type that can be
                assigned null.
            </summary>
            <param name="required"> A value indicating whether the property is required. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1.HasMaxLength(System.Int32)">
            <summary>
                Configures the maximum length of data that can be stored in this property.
                Maximum length can only be set on array properties (including <see cref="T:System.String" /> properties).
            </summary>
            <param name="maxLength"> The maximum length of data allowed in the property. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1.IsUnicode(System.Boolean)">
            <summary>
                Configures the property as capable of persisting unicode characters or not.
                Can only be set on <see cref="T:System.String" /> properties.
            </summary>
            <param name="unicode"> A value indicating whether the property can contain unicode characters or not. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1.IsRowVersion">
            <summary>
                <para>
                    Configures the property as <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1.ValueGeneratedOnAddOrUpdate" /> and
                    <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1.IsConcurrencyToken(System.Boolean)" />.
                </para>
                <para>
                    Database providers can choose to interpret this in different way, but it is commonly used
                    to indicate some form of automatic row-versioning as used for optimistic concurrency detection.
                </para>
            </summary>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1.HasValueGenerator``1">
            <summary>
                <para>
                    Configures the <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" /> that will generate values for this property.
                </para>
                <para>
                    Values are generated when the entity is added to the context using, for example,
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)" />. Values are generated only when the property is assigned
                    the CLR default value (null for string, 0 for int, Guid.Empty for Guid, etc.).
                </para>
                <para>
                    A single instance of this type will be created and used to generate values for this property in all
                    instances of the entity type. The type must be instantiable and have a parameterless constructor.
                </para>
                <para>
                    This method is intended for use with custom value generation. Value generation for common cases is
                    usually handled automatically by the database provider.
                </para>
            </summary>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1.HasValueGenerator(System.Type)">
            <summary>
                <para>
                    Configures the <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" /> that will generate values for this property.
                </para>
                <para>
                    Values are generated when the entity is added to the context using, for example,
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)" />. Values are generated only when the property is assigned
                    the CLR default value (null for string, 0 for int, Guid.Empty for Guid, etc.).
                </para>
                <para>
                    A single instance of this type will be created and used to generate values for this property in all
                    instances of the entity type. The type must be instantiable and have a parameterless constructor.
                </para>
                <para>
                    This method is intended for use with custom value generation. Value generation for common cases is
                    usually handled automatically by the database provider.
                </para>
                <para>
                    Setting null does not disable value generation for this property, it just clears any generator explicitly
                    configured for this property. The database provider may still have a value generator for the property type.
                </para>
            </summary>
            <param name="valueGeneratorType"> A type that inherits from <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" /> </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1.HasValueGenerator(System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator})">
            <summary>
                <para>
                    Configures a factory for creating a <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" /> to use to generate values
                    for this property.
                </para>
                <para>
                    Values are generated when the entity is added to the context using, for example,
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.Add``1(``0)" />. Values are generated only when the property is assigned
                    the CLR default value (null for string, 0 for int, Guid.Empty for Guid, etc.).
                </para>
                <para>
                    This factory will be invoked once to create a single instance of the value generator, and
                    this will be used to generate values for this property in all instances of the entity type.
                </para>
                <para>
                    This method is intended for use with custom value generation. Value generation for common cases is
                    usually handled automatically by the database provider.
                </para>
            </summary>
            <param name="factory"> A delegate that will be used to create value generator instances. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1.IsConcurrencyToken(System.Boolean)">
            <summary>
                Configures whether this property should be used as a concurrency token. When a property is configured
                as a concurrency token the value in the database will be checked when an instance of this entity type
                is updated or deleted during <see cref="M:Microsoft.EntityFrameworkCore.DbContext.SaveChanges" /> to ensure it has not changed since
                the instance was retrieved from the database. If it has changed, an exception will be thrown and the
                changes will not be applied to the database.
            </summary>
            <param name="concurrencyToken"> A value indicating whether this property is a concurrency token. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1.ValueGeneratedNever">
            <summary>
                Configures a property to never have a value generated when an instance of this
                entity type is saved.
            </summary>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
            <remarks>
                Note that temporary values may still be generated for use internally before a
                new entity is saved.
            </remarks>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1.ValueGeneratedOnAdd">
            <summary>
                Configures a property to have a value generated only when saving a new entity, unless a non-null,
                non-temporary value has been set, in which case the set value will be saved instead. The value
                may be generated by a client-side value generator or may be generated by the database as part
                of saving the entity.
            </summary>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1.ValueGeneratedOnAddOrUpdate">
            <summary>
                Configures a property to have a value generated only when saving a new or existing entity, unless
                a non-null, non-temporary value has been set for a new entity, or the existing property value has
                been modified for an existing entity, in which case the set value will be saved instead.
            </summary>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1.HasField(System.String)">
            <summary>
                <para>
                    Sets the backing field to use for this property.
                </para>
                <para>
                    Backing fields are normally found by convention as described
                    here: http://go.microsoft.com/fwlink/?LinkId=723277.
                    This method is useful for setting backing fields explicitly in cases where the
                    correct field is not found by convention.
                </para>
                <para>
                    By default, the backing field, if one is found or has been specified, is used when
                    new objects are constructed, typically when entities are queried from the database.
                    Properties are used for all other accesses. This can be changed by calling
                    <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)" />.
                </para>
            </summary>
            <param name="fieldName"> The field name. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.PropertyBuilder`1.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode)">
            <summary>
                <para>
                    Sets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" /> to use for this property.
                </para>
                <para>
                    By default, the backing field, if one is found by convention or has been specified, is used when
                    new objects are constructed, typically when entities are queried from the database.
                    Properties are used for all other accesses.  Calling this method witll change that behavior
                    for this property as described in the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" /> enum.
                </para>
                <para>
                    Calling this method overrrides for this property any access mode that was set on the
                    entity type or model.
                </para>
            </summary>
            <param name="propertyAccessMode"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode" /> to use for this property. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder">
            <summary>
                <para>
                    Provides a simple API for configuring a one-to-many relationship.
                </para>
                <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> API
                    and it is not designed to be directly constructed in your application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Builder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Metadata">
            <summary>
                The foreign key that represents this relationship.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance">
            <summary>
                The model that this relationship belongs to.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalRelationshipBuilder}#Instance">
            <summary>
                Gets the internal builder being used to configure this relationship.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasAnnotation(System.String,System.Object)">
            <summary>
                Adds or updates an annotation on the relationship. If an annotation with the key specified in
                <paramref name="annotation" />
                already exists it's value will be updated.
            </summary>
            <param name="annotation"> The key of the annotation to be added or updated. </param>
            <param name="value"> The value to be stored in the annotation. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKey(System.String[])">
            <summary>
                <para>
                    Configures the property(s) to use as the foreign key for this relationship.
                </para>
                <para>
                    If the specified property name(s) do not exist on the entity type then a new shadow state
                    property(s) will be added to serve as the foreign key. A shadow state property is one that does not
                    have a corresponding property in the entity class. The current value for the  property is stored in
                    the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> rather than being stored in instances
                    of the entity class.
                </para>
                <para>
                    If <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKey(System.String[])" /> is not specified, then an attempt will be made to match
                    the data type and order of foreign key properties against the primary key of the principal
                    entity type. If they do not match, new shadow state properties that form a unique index will be
                    added to the principal entity type to serve as the reference key.
                </para>
            </summary>
            <param name="foreignKeyPropertyNames">
                The name(s) of the foreign key property(s).
            </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKeyBuilder(System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasForeignKeyBuilder(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKey(System.String[])">
            <summary>
                Configures the unique property(s) that this relationship targets. Typically you would only call this
                method if you want to use a property(s) other than the primary key as the principal property(s). If
                the specified property(s) is not already a unique constraint (or the primary key) then a new unique
                constraint will be introduced.
            </summary>
            <param name="keyPropertyNames"> The name(s) of the reference key property(s). </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKeyBuilder(System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.HasPrincipalKeyBuilder(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.IsRequired(System.Boolean)">
            <summary>
                Configures whether this is a required relationship (i.e. whether the foreign key property(s) can
                be assigned null).
            </summary>
            <param name="required"> A value indicating whether this is a required relationship. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder.OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)">
            <summary>
                Configures how a delete operation is applied to dependent entities in the relationship when the
                principal is deleted or the relationship is severed.
            </summary>
            <param name="deleteBehavior"> The action to perform. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder`2">
            <summary>
                <para>
                    Provides a simple API for configuring a one-to-many relationship.
                </para>
                <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> API
                    and it is not designed to be directly constructed in your application code.
                </para>
            </summary>
            <typeparam name="TPrincipalEntity"> The principal entity type in this relationship. </typeparam>
            <typeparam name="TDependentEntity"> The dependent entity type in this relationship. </typeparam>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder`2.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder`2.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder`2.HasForeignKey(System.Linq.Expressions.Expression{System.Func{`1,System.Object}})">
            <summary>
                <para>
                    Configures the property(s) to use as the foreign key for this relationship.
                </para>
                <para>
                    If <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" /> is not specified, then
                    an attempt will be made to match the data type and order of foreign key properties against the
                    primary key of the principal entity type. If they do not match, new shadow state properties that
                    form a unique index will be added to the principal entity type to serve as the reference key.
                    A shadow state property is one that does not have a corresponding property in the entity class. The
                    current value for the property is stored in the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> rather than being
                    stored in instances of the entity class.
                </para>
            </summary>
            <param name="foreignKeyExpression">
                <para>
                    A lambda expression representing the foreign key property(s) (<c>post => post.BlogId</c>).
                </para>
                <para>
                    If the foreign key is made up of multiple properties then specify an anonymous type including the
                    properties (<c>comment => new { comment.BlogId, comment.PostTitle }</c>). The order specified should match the order of
                    corresponding keys in <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" />.
                </para>
            </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})">
            <summary>
                Configures the unique property(s) that this relationship targets. Typically you would only call this
                method if you want to use a property(s) other than the primary key as the principal property(s). If
                the specified property(s) is not already a unique constraint (or the primary key) then a new unique
                constraint will be introduced.
            </summary>
            <param name="keyExpression">
                <para>
                    A lambda expression representing the reference key property(s) (<c>blog => blog.BlogId</c>).
                </para>
                <para>
                    If the principal key is made up of multiple properties then specify an anonymous type including
                    the properties (<c>post => new { post.BlogId, post.PostTitle }</c>).
                </para>
            </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder`2.HasAnnotation(System.String,System.Object)">
            <summary>
                Adds or updates an annotation on the relationship. If an annotation with the key specified in
                <paramref name="annotation" /> already exists it's value will be updated.
            </summary>
            <param name="annotation"> The key of the annotation to be added or updated. </param>
            <param name="value"> The value to be stored in the annotation. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder`2.HasForeignKey(System.String[])">
            <summary>
                <para>
                    Configures the property(s) to use as the foreign key for this relationship.
                </para>
                <para>
                    If the specified property name(s) do not exist on the entity type then a new shadow state
                    property(s) will be added to serve as the foreign key. A shadow state property is one
                    that does not have a corresponding property in the entity class. The current value for the
                    property is stored in the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> rather than being stored in instances
                    of the entity class.
                </para>
                <para>
                    If <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.Linq.Expressions.Expression{System.Func{`0,System.Object}})" /> is not specified, then an attempt will be made to
                    match
                    the data type and order of foreign key properties against the primary key of the principal
                    entity type. If they do not match, new shadow state properties that form a unique index will be
                    added to the principal entity type to serve as the reference key.
                </para>
            </summary>
            <param name="foreignKeyPropertyNames">
                The name(s) of the foreign key property(s).
            </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder`2.HasPrincipalKey(System.String[])">
            <summary>
                Configures the unique property(s) that this relationship targets. Typically you would only call this
                method if you want to use a property(s) other than the primary key as the principal property(s). If
                the specified property(s) is not already a unique constraint (or the primary key) then a new unique
                constraint will be introduced.
            </summary>
            <param name="keyPropertyNames"> The name(s) of the reference key property(s). </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder`2.IsRequired(System.Boolean)">
            <summary>
                Configures whether this is a required relationship (i.e. whether the foreign key property(s) can
                be assigned null).
            </summary>
            <param name="required"> A value indicating whether this is a required relationship. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceCollectionBuilder`2.OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)">
            <summary>
                Configures how a delete operation is applied to dependent entities in the relationship when the
                principal is deleted or the relationship is severed.
            </summary>
            <param name="deleteBehavior"> The action to perform. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder">
            <summary>
                <para>
                    Provides a simple API for configuring a relationship where configuration began on
                    an end of the relationship with a reference that points to an instance of another entity type.
                </para>
                <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> API
                    and it is not designed to be directly constructed in your application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.ReferenceName">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.ReferenceProperty">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.RelatedEntityType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.DeclaringEntityType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalRelationshipBuilder}#Instance">
            <summary>
                Gets the internal builder being used to configure the relationship.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithMany(System.String)">
            <summary>
                Configures this as a one-to-many relationship.
            </summary>
            <param name="collection">
                The name of the collection navigation property on the other end of this relationship.
                If null, there is no navigation property on the other end of the relationship.
            </param>
            <returns> An object to further configure the relationship. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithManyBuilder(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithManyBuilder(System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithOne(System.String)">
            <summary>
                Configures this as a one-to-one relationship.
            </summary>
            <param name="reference">
                The name of the reference navigation property on the other end of this relationship.
                If null, there is no navigation property on the other end of the relationship.
            </param>
            <returns> An object to further configure the relationship. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithOneBuilder(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder.WithOneBuilder(System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2">
            <summary>
                <para>
                    Provides a simple API for configuring a relationship where configuration began on an end of the
                    relationship with a reference that points to an instance of another entity type.
                </para>
                <para>
                    Instances of this class are returned from methods when using the <see cref="T:Microsoft.EntityFrameworkCore.ModelBuilder" /> API
                    and it is not designed to be directly constructed in your application code.
                </para>
            </summary>
            <typeparam name="TEntity"> The entity type to be configured. </typeparam>
            <typeparam name="TRelatedEntity"> The entity type that this relationship targets. </typeparam>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2.WithMany(System.Linq.Expressions.Expression{System.Func{`1,System.Collections.Generic.IEnumerable{`0}}})">
            <summary>
                Configures this as a one-to-many relationship.
            </summary>
            <param name="navigationExpression">
                A lambda expression representing the collection navigation property on the other end of this
                relationship (<c>blog => blog.Posts</c>). If no property is specified, the relationship will be
                configured without a navigation property on the other end of the relationship.
            </param>
            <returns> An object to further configure the relationship. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2.WithOne(System.Linq.Expressions.Expression{System.Func{`1,`0}})">
            <summary>
                Configures this as a one-to-one relationship.
            </summary>
            <param name="navigationExpression">
                A lambda expression representing the reference navigation property on the other end of this
                relationship (<c>blog => blog.BlogInfo</c>). If no property is specified, the relationship will be
                configured without a navigation property on the other end of the relationship.
            </param>
            <returns> An object to further configure the relationship. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2.WithMany(System.String)">
            <summary>
                Configures this as a one-to-many relationship.
            </summary>
            <param name="navigationName">
                The name of the collection navigation property on the other end of this relationship.
                If null, there is no navigation property on the other end of the relationship.
            </param>
            <returns> An object to further configure the relationship. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceNavigationBuilder`2.WithOne(System.String)">
            <summary>
                Configures this as a one-to-one relationship.
            </summary>
            <param name="navigationName">
                The name of the reference navigation property on the other end of this relationship.
                If null, there is no navigation property on the other end of the relationship.
            </param>
            <returns> An object to further configure the relationship. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder">
            <summary>
                <para>
                    Provides a simple API for configuring a one-to-one relationship.
                </para>
                <para>
                    If multiple reference key properties are specified, the order of reference key properties should
                    match the order that the primary key or unique index properties were configured on the principal
                    entity type.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Builder">
            <summary>
                Gets the internal builder being used to configure this relationship.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#Internal#InternalRelationshipBuilder}#Instance">
            <summary>
                Gets the internal builder being used to configure this relationship.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Metadata">
            <summary>
                The foreign key that represents this relationship.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.Microsoft#EntityFrameworkCore#Infrastructure#IInfrastructure{Microsoft#EntityFrameworkCore#Metadata#IMutableModel}#Instance">
            <summary>
                The model that this relationship belongs to.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasAnnotation(System.String,System.Object)">
            <summary>
                Adds or updates an annotation on the relationship. If an annotation with the key specified in
                <paramref name="annotation" /> already exists it's value will be updated.
            </summary>
            <param name="annotation"> The key of the annotation to be added or updated. </param>
            <param name="value"> The value to be stored in the annotation. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey(System.Type,System.String[])">
            <summary>
                <para>
                    Configures the property(s) to use as the foreign key for this relationship.
                </para>
                <para>
                    If the specified property name(s) do not exist on the entity type then a new shadow state
                    property(s) will be added to serve as the foreign key. A shadow state property is one
                    that does not have a corresponding property in the entity class. The current value for the
                    property is stored in the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> rather than being stored in instances
                    of the entity class.
                </para>
                <para>
                    If <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.Type,System.String[])" /> is not specified, then an attempt will be made to
                    match the data type and order of foreign key properties against the primary key of the principal
                    entity type. If they do not match, new shadow state properties that form a unique index will be
                    added to the principal entity type to serve as the reference key.
                </para>
            </summary>
            <param name="dependentEntityType">
                The entity type that is the dependent in this relationship (the type that has the foreign key
                properties).
            </param>
            <param name="foreignKeyPropertyNames">
                The name(s) of the foreign key property(s).
            </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey``1(System.String[])">
            <summary>
                <para>
                    Configures the property(s) to use as the foreign key for this relationship.
                </para>
                <para>
                    If the specified property name(s) do not exist on the entity type then a new shadow state
                    property(s) will be added to serve as the foreign key. A shadow state property is one
                    that does not have a corresponding property in the entity class. The current value for the
                    property is stored in the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> rather than being stored in instances
                    of the entity class.
                </para>
                <para>
                    If <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.Type,System.String[])" /> is not specified, then an attempt will be made to
                    match the data type and order of foreign key properties against the primary key of the principal
                    entity type. If they do not match, new shadow state properties that form a unique index will be
                    added to the principal entity type to serve as the reference key.
                </para>
            </summary>
            <typeparam name="TDependentEntity">
                The entity type that is the dependent in this relationship (the type that has the foreign key
                properties).
            </typeparam>
            <param name="foreignKeyPropertyNames">
                The name(s) of the foreign key property(s).
            </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKey(System.String,System.String[])">
            <summary>
                <para>
                    Configures the property(s) to use as the foreign key for this relationship.
                </para>
                <para>
                    If the specified property name(s) do not exist on the entity type then a new shadow state
                    property(s) will be added to serve as the foreign key. A shadow state property is one
                    that does not have a corresponding property in the entity class. The current value for the
                    property is stored in the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> rather than being stored in instances
                    of the entity class.
                </para>
                <para>
                    If <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.Type,System.String[])" /> is not specified, then an attempt will be made to
                    match the data type and order of foreign key properties against the primary key of the principal
                    entity type. If they do not match, new shadow state properties that form a unique index will be
                    added to the principal entity type to serve as the reference key.
                </para>
            </summary>
            <param name="dependentEntityTypeName">
                The name of the entity type that is the dependent in this relationship (the type that has the foreign
                key properties).
            </param>
            <param name="foreignKeyPropertyNames">
                The name(s) of the foreign key property(s).
            </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasForeignKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.Type,System.String[])">
            <summary>
                Configures the unique property(s) that this relationship targets. Typically you would only call this
                method if you want to use a property(s) other than the primary key as the principal property(s). If
                the specified property(s) is not already a unique constraint (or the primary key) then a new unique
                constraint will be introduced.
            </summary>
            <param name="principalEntityType">
                The entity type that is the principal in this relationship (the type
                that has the reference key properties).
            </param>
            <param name="keyPropertyNames"> The name(s) of the reference key property(s). </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey``1(System.String[])">
            <summary>
                Configures the unique property(s) that this relationship targets. Typically you would only call this
                method if you want to use a property(s) other than the primary key as the principal property(s). If
                the specified property(s) is not already a unique constraint (or the primary key) then a new unique
                constraint will be introduced.
            </summary>
            <typeparam name="TPrincipalEntity">
                The entity type that is the principal in this relationship (the type
                that has the reference key properties).
            </typeparam>
            <param name="keyPropertyNames"> The name(s) of the reference key property(s). </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKey(System.String,System.String[])">
            <summary>
                Configures the unique property(s) that this relationship targets. Typically you would only call this
                method if you want to use a property(s) other than the primary key as the principal property(s). If
                the specified property(s) is not already a unique constraint (or the primary key) then a new unique
                constraint will be introduced.
            </summary>
            <param name="principalEntityTypeName">
                The name of the entity type that is the principal in this relationship (the type
                that has the reference key properties).
            </param>
            <param name="keyPropertyNames"> The name(s) of the reference key property(s). </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.String})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.HasPrincipalKeyBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.ResolveEntityType(System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.IsRequired(System.Boolean)">
            <summary>
                Configures whether this is a required relationship (i.e. whether the foreign key property(s) can
                be assigned null).
            </summary>
            <param name="required"> A value indicating whether this is a required relationship. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder.OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)">
            <summary>
                Configures how a delete operation is applied to dependent entities in the relationship when the
                principal is deleted or the relationship is severed.
            </summary>
            <param name="deleteBehavior"> The action to perform. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2">
            <summary>
                <para>
                    Provides a simple API for configuring a one-to-one relationship.
                </para>
                <para>
                    If multiple reference key properties are specified, the order of reference key properties should
                    match the order that the primary key or unique index properties were configured on the principal
                    entity type.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder,System.Boolean,System.Boolean,System.Boolean,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasAnnotation(System.String,System.Object)">
            <summary>
                Adds or updates an annotation on the relationship. If an annotation with the key specified in
                <paramref name="annotation" /> already exists it's value will be updated.
            </summary>
            <param name="annotation"> The key of the annotation to be added or updated. </param>
            <param name="value"> The value to be stored in the annotation. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.Type,System.String[])">
            <summary>
                <para>
                    Configures the property(s) to use as the foreign key for this relationship.
                </para>
                <para>
                    If the specified property name(s) do not exist on the entity type then a new shadow state
                    property(s) will be added to serve as the foreign key. A shadow state property is one
                    that does not have a corresponding property in the entity class. The current value for the
                    property is stored in the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> rather than being stored in instances
                    of the entity class.
                </para>
                <para>
                    If <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])" /> is not specified, then an attempt will be made to
                    match the data type and order of foreign key properties against the primary key of the principal
                    entity type. If they do not match, new shadow state properties that form a unique index will be
                    added to the principal entity type to serve as the reference key.
                </para>
            </summary>
            <param name="dependentEntityType">
                The entity type that is the dependent in this relationship (the type that has the foreign key
                properties).
            </param>
            <param name="foreignKeyPropertyNames">
                The name(s) of the foreign key property(s).
            </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey``1(System.String[])">
            <summary>
                <para>
                    Configures the property(s) to use as the foreign key for this relationship.
                </para>
                <para>
                    If the specified property name(s) do not exist on the entity type then a new shadow state
                    property(s) will be added to serve as the foreign key. A shadow state property is one
                    that does not have a corresponding property in the entity class. The current value for the
                    property is stored in the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> rather than being stored in instances
                    of the entity class.
                </para>
                <para>
                    If <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])" /> is not specified, then an attempt will be made to
                    match the data type and order of foreign key properties against the primary key of the principal
                    entity type. If they do not match, new shadow state properties that form a unique index will be
                    added to the principal entity type to serve as the reference key.
                </para>
            </summary>
            <typeparam name="TDependentEntity">
                The entity type that is the dependent in this relationship (the type that has the foreign key
                properties).
            </typeparam>
            <param name="foreignKeyPropertyNames">
                The name(s) of the foreign key property(s).
            </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])">
            <summary>
                Configures the unique property(s) that this relationship targets. Typically you would only call this
                method if you want to use a property(s) other than the primary key as the principal property(s). If
                the specified property(s) is not already a unique constraint (or the primary key) then a new unique
                constraint will be introduced.
            </summary>
            <param name="principalEntityType">
                The entity type that is the principal in this relationship (the type
                that has the reference key properties).
            </param>
            <param name="keyPropertyNames"> The name(s) of the reference key property(s). </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey``1(System.String[])">
            <summary>
                Configures the unique property(s) that this relationship targets. Typically you would only call this
                method if you want to use a property(s) other than the primary key as the principal property(s). If
                the specified property(s) is not already a unique constraint (or the primary key) then a new unique
                constraint will be introduced.
            </summary>
            <typeparam name="TPrincipalEntity">
                The entity type that is the principal in this relationship (the type
                that has the reference key properties).
            </typeparam>
            <param name="keyPropertyNames"> The name(s) of the reference key property(s). </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey(System.String,System.String[])">
            <summary>
                <para>
                    Configures the property(s) to use as the foreign key for this relationship.
                </para>
                <para>
                    If the specified property name(s) do not exist on the entity type then a new shadow state
                    property(s) will be added to serve as the foreign key. A shadow state property is one
                    that does not have a corresponding property in the entity class. The current value for the
                    property is stored in the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> rather than being stored in instances
                    of the entity class.
                </para>
                <para>
                    If <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])" /> is not specified, then an attempt will be made to
                    match the data type and order of foreign key properties against the primary key of the principal
                    entity type. If they do not match, new shadow state properties that form a unique index will be
                    added to the principal entity type to serve as the reference key.
                </para>
            </summary>
            <param name="dependentEntityTypeName">
                The name of entity type that is the dependent in this relationship (the type that has the foreign key
                properties).
            </param>
            <param name="foreignKeyPropertyNames">
                The name(s) of the foreign key property(s).
            </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.String,System.String[])">
            <summary>
                Configures the unique property(s) that this relationship targets. Typically you would only call this
                method if you want to use a property(s) other than the primary key as the principal property(s). If
                the specified property(s) is not already a unique constraint (or the primary key) then a new unique
                constraint
                will be introduced.
            </summary>
            <param name="principalEntityTypeName">
                The name of entity type that is the principal in this relationship (the type
                that has the reference key properties).
            </param>
            <param name="keyPropertyNames"> The name(s) of the reference key property(s). </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasForeignKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
                <para>
                    Configures the property(s) to use as the foreign key for this relationship.
                </para>
                <para>
                    If <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])" />
                    is not specified, then an attempt will be made to match the data type and order of foreign key
                    properties against the primary key of the principal entity type. If they do not match, new shadow
                    state properties that form a unique index will be
                    added to the principal entity type to serve as the reference key.
                    A shadow state property is one that does not have a corresponding property in the entity class. The
                    current value for the property is stored in the <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.ChangeTracker" /> rather than being
                    stored in instances of the entity class.
                </para>
            </summary>
            <typeparam name="TDependentEntity">
                The entity type that is the dependent in this relationship. That is, the type
                that has the foreign key properties.
            </typeparam>
            <param name="foreignKeyExpression">
                <para>
                    A lambda expression representing the foreign key property(s) (<c>t => t.Id1</c>).
                </para>
                <para>
                    If the foreign key is made up of multiple properties then specify an anonymous type including the
                    properties (<c>t => new { t.Id1, t.Id2 }</c>). The order specified should match the order of
                    corresponding keys in <see cref="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey(System.Type,System.String[])" />.
                </para>
            </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.HasPrincipalKey``1(System.Linq.Expressions.Expression{System.Func{``0,System.Object}})">
            <summary>
                Configures the unique property(s) that this relationship targets. Typically you would only call this
                method if you want to use a property(s) other than the primary key as the principal property(s). If
                the specified property(s) is not already a unique constraint (or the primary key) then a new unique
                constraint will be introduced.
            </summary>
            <typeparam name="TPrincipalEntity">
                The entity type that is the principal in this relationship. That is, the type
                that has the reference key properties.
            </typeparam>
            <param name="keyExpression">
                <para>
                    A lambda expression representing the reference key property(s) (<c>t => t.Id</c>).
                </para>
                <para>
                    If the principal key is made up of multiple properties then specify an anonymous type including
                    the properties (<c>t => new { t.Id1, t.Id2 }</c>).
                </para>
            </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.IsRequired(System.Boolean)">
            <summary>
                Configures whether this is a required relationship (i.e. whether the foreign key property(s) can
                be assigned null).
            </summary>
            <param name="required"> A value indicating whether this is a required relationship. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Builders.ReferenceReferenceBuilder`2.OnDelete(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior)">
            <summary>
                Configures how a delete operation is applied to dependent entities in the relationship when the
                principal is deleted or the relationship is severed.
            </summary>
            <param name="deleteBehavior"> The action to perform. </param>
            <returns> The same builder instance so that multiple configuration calls can be chained. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet">
            <summary>
                Base implementation for a set of conventions used to build a model. This base implementation is an empty set of conventions.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.EntityTypeAddedConventions">
            <summary>
                Conventions to run when an entity type is added to the model.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.EntityTypeIgnoredConventions">
            <summary>
                Conventions to run when an entity type is ignored.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.EntityTypeMemberIgnoredConventions">
            <summary>
                Conventions to run when a property is ignored.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.BaseEntityTypeSetConventions">
            <summary>
                Conventions to run when the base entity type is set or removed.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.EntityTypeAnnotationSetConventions">
            <summary>
                Conventions to run when an annotation is set or removed on an entity type.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ForeignKeyAddedConventions">
            <summary>
                Conventions to run when a foreign key is added.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ForeignKeyRemovedConventions">
            <summary>
                Conventions to run when a foreign key is removed.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.KeyAddedConventions">
            <summary>
                Conventions to run when a key is added.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.KeyRemovedConventions">
            <summary>
                Conventions to run when a key is removed.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PrimaryKeySetConventions">
            <summary>
                Conventions to run when a primary key is configured.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.IndexAddedConventions">
            <summary>
                Conventions to run when an index is added.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.IndexRemovedConventions">
            <summary>
                Conventions to run when an index is added.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.IndexUniquenessConventions">
            <summary>
                Conventions to run when the uniqueness of an index is changed.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PrincipalEndSetConventions">
            <summary>
                Conventions to run when the principal end of a relationship is configured.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ModelBuiltConventions">
            <summary>
                Conventions to run when model building is completed.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ModelInitializedConventions">
            <summary>
                Conventions to run to setup the initial model.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.NavigationAddedConventions">
            <summary>
                Conventions to run when a navigation property is added.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.NavigationRemovedConventions">
            <summary>
                Conventions to run when a navigation property is removed.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.ForeignKeyUniquenessConventions">
            <summary>
                Conventions to run when the uniqueness of a foreign key is changed.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PropertyAddedConventions">
            <summary>
                Conventions to run when a property is added.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PropertyNullableChangedConventions">
            <summary>
                Conventions to run when the nullability of a property is changed.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet.PropertyFieldChangedConventions">
            <summary>
                Conventions to run when the field of a property is changed.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.BackingFieldConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.BackingFieldConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.BackingFieldConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.BackingFieldConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.BackingFieldConvention.TryMatchFieldName(System.Type,System.Type,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.BaseTypeDiscoveryConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.BaseTypeDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CascadeDeleteConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CascadeDeleteConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CascadeDeleteConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CascadeDeleteConvention.TargetDeleteBehavior(Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConcurrencyCheckAttributeConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConcurrencyCheckAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,System.ComponentModel.DataAnnotations.ConcurrencyCheckAttribute,System.Reflection.MemberInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnEntityTypeAdded(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnEntityTypeIgnored(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.String,System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnEntityTypeMemberIgnored(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnBaseEntityTypeSet(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnEntityTypeAnnotationSet(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,Microsoft.EntityFrameworkCore.Infrastructure.Annotation,Microsoft.EntityFrameworkCore.Infrastructure.Annotation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnForeignKeyAdded(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnForeignKeyRemoved(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnKeyAdded(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnKeyRemoved(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPrimaryKeySet(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnIndexAdded(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnIndexRemoved(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Index)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnIndexUniquenessChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnModelBuilt(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnModelInitialized(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnNavigationAdded(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnNavigationRemoved(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnForeignKeyUniquenessChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPrincipalEndSet(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPropertyAdded(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPropertyNullableChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ConventionDispatcher.OnPropertyFieldChanged(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,System.Reflection.FieldInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilder.CreateConventionSet">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.DatabaseGeneratedAttributeConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.DatabaseGeneratedAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,System.ComponentModel.DataAnnotations.Schema.DatabaseGeneratedAttribute,System.Reflection.MemberInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.DerivedTypeDiscoveryConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.DerivedTypeDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.EntityTypeAttributeConvention`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.EntityTypeAttributeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.EntityTypeAttributeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyAttributeConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyAttributeConvention.FindCandidateNavigationPropertyType(System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Index)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.Microsoft#EntityFrameworkCore#Metadata#Conventions#Internal#IForeignKeyUniquenessConvention#Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.Microsoft#EntityFrameworkCore#Metadata#Conventions#Internal#IIndexUniquenessConvention#Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.CreateIndex(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Boolean,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyIndexConvention.AreIndexedBy(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Boolean,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyPropertyDiscoveryConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyPropertyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyPropertyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyPropertyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyPropertyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,System.Reflection.FieldInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyPropertyDiscoveryConvention.Microsoft#EntityFrameworkCore#Metadata#Conventions#Internal#IForeignKeyUniquenessConvention#Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyPropertyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ForeignKeyPropertyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IBaseTypeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder.AddConventions(Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ICoreConventionSetBuilder.CreateConventionSet">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeAnnotationSetConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeAnnotationSetConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,Microsoft.EntityFrameworkCore.Infrastructure.Annotation,Microsoft.EntityFrameworkCore.Infrastructure.Annotation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeIgnoredConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.String,System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IEntityTypeMemberIgnoredConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyRemovedConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyRemovedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IForeignKeyUniquenessConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IgnoredMembersValidationConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IgnoredMembersValidationConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexRemovedConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexRemovedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Index)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IIndexUniquenessConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyRemovedConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IKeyRemovedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IModelConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationRemovedConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.INavigationRemovedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.InheritanceDiscoveryConventionBase">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.InheritanceDiscoveryConventionBase.FindClosestBaseType(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.InversePropertyAttributeConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.InversePropertyAttributeConvention.InverseNavigationsAnnotationName">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.InversePropertyAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,System.Type,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.InversePropertyAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.Type,System.Reflection.PropertyInfo,System.Type,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.InversePropertyAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.InversePropertyAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo,System.Type,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.InversePropertyAttributeConvention.ApplyIgnored(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,System.Type,System.ComponentModel.DataAnnotations.Schema.InversePropertyAttribute)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.InversePropertyAttributeConvention.IsAmbiguous(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrimaryKeyConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrimaryKeyConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrincipalEndConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPrincipalEndConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyFieldChangedConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyFieldChangedConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,System.Reflection.FieldInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyNullableConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IPropertyNullableConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyAttributeConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,System.ComponentModel.DataAnnotations.KeyAttribute,System.Reflection.MemberInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Key)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyConvention.FindValueGeneratedOnAddProperty(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyDiscoveryConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyDiscoveryConvention.DiscoverKeyProperties(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.KeyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,System.Reflection.FieldInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.MaxLengthAttributeConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.MaxLengthAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,System.ComponentModel.DataAnnotations.MaxLengthAttribute,System.Reflection.MemberInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ModelCleanupConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.ModelCleanupConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.String,System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.FindCandidateNavigationPropertyType(System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,System.Type,`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder,System.Type,System.Reflection.PropertyInfo,System.Type,`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation,`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo,System.Type,`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeEntityTypeConvention`1.ApplyIgnored(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,System.Type,`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeNavigationConvention`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeNavigationConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeNavigationConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation,`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NavigationAttributeNavigationConvention`1.GetAttributes``1(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NotMappedEntityTypeAttributeConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NotMappedEntityTypeAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.ComponentModel.DataAnnotations.Schema.NotMappedAttribute)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NotMappedMemberAttributeConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.NotMappedMemberAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyAttributeConvention`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyAttributeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyAttributeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,System.Reflection.FieldInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyAttributeConvention`1.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,`0,System.Reflection.MemberInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.IsCandidatePrimitiveProperty(System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyMappingValidationConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyMappingValidationConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyMappingValidationConvention.IsMappedPrimitiveProperty(System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.PropertyMappingValidationConvention.FindCandidateNavigationPropertyType(System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.NavigationCandidatesAnnotationName">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.AmbiguousNavigationsAnnotationName">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipDiscoveryConvention.FindCandidateNavigationPropertyType(System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipValidationConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RelationshipValidationConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RequiredNavigationAttributeConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RequiredNavigationAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation,System.ComponentModel.DataAnnotations.RequiredAttribute)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RequiredPropertyAttributeConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.RequiredPropertyAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,System.ComponentModel.DataAnnotations.RequiredAttribute,System.Reflection.MemberInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.StringLengthAttributeConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.StringLengthAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,System.ComponentModel.DataAnnotations.StringLengthAttribute,System.Reflection.MemberInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.TimestampAttributeConvention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.TimestampAttributeConvention.Apply(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder,System.ComponentModel.DataAnnotations.TimestampAttribute,System.Reflection.MemberInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.AnnotatableExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.AnnotatableExtensions.AnnotationsToDebugString(Microsoft.EntityFrameworkCore.Infrastructure.IAnnotatable,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory`1.Create(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory`1.Create(System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrAccessorFactory`1.CreateGeneric``3(System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrCollectionAccessorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrCollectionAccessorFactory.Create(Microsoft.EntityFrameworkCore.Metadata.INavigation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.CollectionType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.#ctor(System.String,System.Func{`0,`1},System.Action{`0,`1},System.Func{`0,System.Action{`0,`1},`1},System.Func{`1})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Add(System.Object,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.AddRange(System.Object,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Create(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.GetOrCreate(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Contains(System.Object,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrICollectionAccessor`3.Remove(System.Object,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter`2">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter`2.#ctor(System.Func{`0,`1})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetter`2.GetClrValue(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetterFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertyGetterFactory.CreateGeneric``3(System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertySetter`2">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertySetter`2.#ctor(System.Action{`0,`1})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertySetter`2.SetClrValue(System.Object,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertySetterFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ClrPropertySetterFactory.CreateGeneric``3(System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.CollectionTypeFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.CollectionTypeFactory.TryFindTypeToInstantiate(System.Type,System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource.Explicit">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource.DataAnnotation">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource.Convention">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSourceExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSourceExtensions.Overrides(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSourceExtensions.Overrides(System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSourceExtensions.OverridesStrictly(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSourceExtensions.Max(System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSourceExtensions.Max(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotatable">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotatable.GetAnnotations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotatable.AddAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotatable.AddAnnotation(System.String,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotatable.SetAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotatable.GetOrAddAnnotation(System.String,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotatable.FindAnnotation(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotatable.RemoveAnnotation(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotatable.CreateAnnotation(System.String,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotation">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotation.#ctor(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotation.GetConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotation.UpdateConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.CoreAnnotationNames">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.CoreAnnotationNames.MaxLengthAnnotation">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.CoreAnnotationNames.UnicodeAnnotation">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.CoreAnnotationNames.ProductVersionAnnotation">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.CoreAnnotationNames.ValueGeneratorFactoryAnnotation">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.CoreAnnotationNames.PropertyAccessModeAnnotation">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.DebugView`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.DebugView`1.#ctor(`0,System.Func{`0,System.String})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.DebugView`1.View">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityMaterializerSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityMaterializerSource.CreateReadValueExpression(System.Linq.Expressions.Expression,System.Type,System.Int32,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityMaterializerSource.CreateReadValueCallExpression(System.Linq.Expressions.Expression,System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityMaterializerSource.CreateMaterializeExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Linq.Expressions.Expression,System.Int32[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityMaterializerSource.GetMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.#ctor(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.Model,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.#ctor(System.Type,Microsoft.EntityFrameworkCore.Metadata.Internal.Model,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.Builder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.BaseType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.HasBaseType(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetBaseTypeConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetDirectlyDerivedTypes">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetDerivedTypes">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetDerivedTypesInclusive">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.RootType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.ToString">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.ChangeTrackingStrategy">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.OnAnnotationSet(System.String,Microsoft.EntityFrameworkCore.Infrastructure.Annotation,Microsoft.EntityFrameworkCore.Infrastructure.Annotation)">
            <summary>
                Runs the conventions when an annotation was set or removed.
            </summary>
            <param name="name"> The key of the set annotation. </param>
            <param name="annotation"> The annotation set. </param>
            <param name="oldAnnotation"> The old annotation. </param>
            <returns> The annotation that was set. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.SetPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.Internal.Property)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.SetPrimaryKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetOrSetPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.Internal.Property)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetOrSetPrimaryKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindPrimaryKey">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindDeclaredPrimaryKey">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindPrimaryKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetPrimaryKeyConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.UpdatePrimaryKeyConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.AddKey(Microsoft.EntityFrameworkCore.Metadata.Internal.Property,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.AddKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetOrAddKey(Microsoft.EntityFrameworkCore.Metadata.Internal.Property)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetOrAddKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindKey(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetDeclaredKeys">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindDeclaredKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.RemoveKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetKeys">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.AddForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.Property,Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.AddForeignKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetOrAddForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.Property,Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetOrAddForeignKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindForeignKeys(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindForeignKeys(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindForeignKey(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindForeignKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetDeclaredForeignKeys">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetDerivedForeignKeys">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetDerivedForeignKeysInclusive">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindDeclaredForeignKeys(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindDeclaredForeignKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindDerivedForeignKeys(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindDerivedForeignKeys(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindForeignKeysInHierarchy(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindForeignKeysInHierarchy(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.RemoveForeignKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetReferencingForeignKeys">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetDeclaredReferencingForeignKeys">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetForeignKeys">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.AddNavigation(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.AddNavigation(System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindNavigation(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindNavigation(System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindDeclaredNavigation(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetDeclaredNavigations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetDerivedNavigations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindDerivedNavigations(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindNavigationsInHierarchy(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.RemoveNavigation(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetNavigations">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.AddIndex(Microsoft.EntityFrameworkCore.Metadata.Internal.Property,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.AddIndex(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetOrAddIndex(Microsoft.EntityFrameworkCore.Metadata.Internal.Property)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetOrAddIndex(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindIndex(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindIndex(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetDeclaredIndexes">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetDerivedIndexes">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetDerivedIndexesInclusive">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindDeclaredIndex(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindDerivedIndexes(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindIndexesInHierarchy(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.RemoveIndex(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetIndexes">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.AddProperty(System.String,System.Type,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.AddProperty(System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetOrAddProperty(System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetOrAddProperty(System.String,System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindProperty(System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindProperty(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindDeclaredProperty(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetDeclaredProperties">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindDerivedProperties(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindPropertiesInHierarchy(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.RemoveProperty(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.GetProperties">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.PropertyMetadataChanged">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.Counts">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.RelationshipSnapshotFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.OriginalValuesFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.ShadowValuesFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.EmptyShadowValuesFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.FindIgnoredMemberConfigurationSource(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.OnTypeMemberIgnored(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType.DebugView">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.DisplayName(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.GetAllBaseTypesInclusive(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.GetDirectlyDerivedTypes(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.GetDerivedTypesInclusive(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.UseEagerSnapshots(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.StoreGeneratedCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.RelationshipPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.OriginalValueCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.ShadowPropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.NavigationCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.PropertyCount(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.GetCounts(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.CalculateCounts(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.GetRelationshipSnapshotFactory(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.GetOriginalValuesFactory(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.GetShadowValuesFactory(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.GetEmptyShadowValuesFactory(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.GetConcreteTypesInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.IsSameHierarchy(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.LeastDerivedType(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.FindDeclaredPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.GetDeclaredKeys(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.GetDeclaredForeignKeys(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.GetDeclaredNavigations(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.GetDeclaredReferencingForeignKeys(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.FindDerivedNavigations(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.GetDeclaredProperties(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.FindDerivedProperties(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.GetPropertiesAndNavigations(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.GetDeclaredIndexes(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.CheckChangeTrackingStrategy(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.ChangeTrackingStrategy)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.GetNotificationProperties(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Boolean,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.GetProperty(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.CheckPropertyBelongsToType(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeExtensions.AsEntityType(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeNameComparer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeNameComparer.Instance">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.EntityTypeNameComparer.Compare(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.Properties">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.PrincipalKey">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.DeclaringEntityType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.PrincipalEntityType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.Builder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.GetConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.UpdateConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.GetForeignKeyPropertiesConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.UpdateForeignKeyPropertiesConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.GetPrincipalKeyConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.UpdatePrincipalKeyConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.GetPrincipalEndConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.SetPrincipalEndConfigurationSource(System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.UpdatePrincipalEndConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.DependentToPrincipal">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.HasDependentToPrincipal(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.HasDependentToPrincipal(System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.GetDependentToPrincipalConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.UpdateDependentToPrincipalConfigurationSource(System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.PrincipalToDependent">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.HasPrincipalToDependent(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.HasPrincipalToDependent(System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.GetPrincipalToDependentConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.UpdatePrincipalToDependentConfigurationSource(System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.Navigation(System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.IsUnique">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.SetIsUnique(System.Boolean,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.GetIsUniqueConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.UpdateIsUniqueConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.IsRequired">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.SetIsRequired(System.Boolean,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.GetIsRequiredConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.SetIsRequiredConfigurationSource(System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.UpdateIsRequiredConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.DeleteBehavior">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.SetDeleteBehavior(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.GetDeleteBehaviorConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.UpdateDeleteBehaviorConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.FindNavigationsFrom(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.FindNavigationsFromInHierarchy(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.FindNavigationsTo(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.FindNavigationsToInHierarchy(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.ResolveOtherEntityTypeInHierarchy(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.ResolveOtherEntityType(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.ResolveEntityTypeInHierarchy(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.ToString">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.AreCompatible(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.CanPropertiesBeRequired(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Nullable{System.Boolean},Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.AreCompatible(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.DependentKeyValueFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.DependentsMapFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey.DebugView">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer.Instance">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer.Compare(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer.Equals(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyComparer.GetHashCode(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.IsSelfReferencing(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.IsIntraHierarchical(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.IsSelfPrimaryKeyReferencing(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.GetNavigations(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.FindNavigationsFrom(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.FindNavigationsFromInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.FindNavigationsTo(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.FindNavigationsToInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.ResolveOtherEntityType(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.ResolveOtherEntityTypeInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.ResolveEntityTypeInHierarchy(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.GetDependentKeyValueFactory``1(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.CreateDependentsMapFactory(Microsoft.EntityFrameworkCore.Metadata.IForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,System.Boolean,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKeyExtensions.AsForeignKey(Microsoft.EntityFrameworkCore.Metadata.IForeignKey,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Add(System.Object,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.AddRange(System.Object,System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Contains(System.Object,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Remove(System.Object,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.Create(System.Collections.Generic.IEnumerable{System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.GetOrCreate(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrCollectionAccessor.CollectionType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertyGetter.GetClrValue(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IClrPropertySetter.SetClrValue(System.Object,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializer.CreateEntity(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.CreateReadValueExpression(System.Linq.Expressions.Expression,System.Type,System.Int32,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.CreateReadValueCallExpression(System.Linq.Expressions.Expression,System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.CreateMaterializeExpression(Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Linq.Expressions.Expression,System.Int32[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource.GetMaterializer(Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.Index">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Index.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Index.Properties">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Index.DeclaringEntityType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Index.Builder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Index.GetConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Index.UpdateConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Index.IsUnique">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Index.SetIsUnique(System.Boolean,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Index.GetIsUniqueConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.PrimaryKey(System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.PrimaryKey(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey(System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveKey(Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Property(System.String,System.Type,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Property(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Property(System.Reflection.MemberInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanAddNavigation(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanAddOrReplaceNavigation(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.IsIgnored(System.String,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CanRemoveForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Ignore(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasBaseType(System.Type,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasBaseType(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasBaseType(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveShadowPropertiesIfUnused(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex(System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasIndex(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.RemoveIndex(Microsoft.EntityFrameworkCore.Metadata.Internal.Index,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.String,System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.String,System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.Type,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(System.Type,System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.HasForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Relationship(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Navigation(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.Navigation(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.CreateForeignKey(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.Key,System.String,System.Nullable{System.Boolean},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.ReUniquifyTemporaryProperties(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Boolean,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetOrCreateProperties(System.Collections.Generic.IEnumerable{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.Internal.Property})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetOrCreateProperties(System.Collections.Generic.IEnumerable{System.Reflection.MemberInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.GetActualProperties(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.Index,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder.IsUnique(System.Boolean,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalIndexBuilder.Attach(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.Key,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalKeyBuilder.Attach(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.ConventionalAnnotatable)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.Metadata">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.ModelBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.HasAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.CanSetAnnotation(System.String,System.Object,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder.MergeAnnotationsFrom(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder`1.#ctor(`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataBuilder`1.Metadata">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder`1.#ctor(`0,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalMetadataItemBuilder`1.ModelBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.Model)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder.ModelBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder.Entity(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder.Entity(System.Type,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder.IsIgnored(System.Type,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder.IsIgnored(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder.Ignore(System.Type,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder.Ignore(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder.RemoveEntityTypesUnreachableByNavigations(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder.FindLeastDerivedEntityTypes(System.Type,System.Func{Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,System.Boolean})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder.Validate">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.Property,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder.IsRequired(System.Boolean,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder.CanSetRequired(System.Boolean,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder.HasMaxLength(System.Int32,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder.IsUnicode(System.Boolean,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder.HasValueGenerator(System.Type,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder.HasValueGenerator(System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder.HasField(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder.HasFieldInfo(System.Reflection.FieldInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder.UsePropertyAccessMode(Microsoft.EntityFrameworkCore.Metadata.PropertyAccessMode,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder.IsConcurrencyToken(System.Boolean,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder.ReadOnlyAfterSave(System.Boolean,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder.ReadOnlyBeforeSave(System.Boolean,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder.RequiresValueGenerator(System.Boolean,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder.ValueGenerated(Microsoft.EntityFrameworkCore.Metadata.ValueGenerated,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder.IsStoreGeneratedAlways(System.Boolean,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalPropertyBuilder.Attach(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey,Microsoft.EntityFrameworkCore.Metadata.Internal.InternalModelBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.DependentToPrincipal(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.DependentToPrincipal(System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.PrincipalToDependent(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.PrincipalToDependent(System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.Navigations(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.Navigations(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.Navigations(System.String,System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.Navigations(System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.CanSetNavigation(System.String,System.Boolean,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.CanSetNavigation(System.Reflection.PropertyInfo,System.Boolean,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.IsRequired(System.Boolean,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.CanSetRequired(System.Boolean,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.DeleteBehavior(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.CanSetDeleteBehavior(Microsoft.EntityFrameworkCore.Metadata.DeleteBehavior,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.IsUnique(System.Boolean,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.DependentEntityType(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.DependentEntityType(System.Type,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.DependentEntityType(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.DependentEntityType(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.PrincipalEntityType(Microsoft.EntityFrameworkCore.Metadata.Internal.InternalEntityTypeBuilder,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.PrincipalEntityType(System.Type,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.PrincipalEntityType(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.PrincipalEntityType(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.RelatedEntityTypes(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.CanInvert(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.HasForeignKey(System.Collections.Generic.IReadOnlyList{System.Reflection.MemberInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.HasForeignKey(System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.HasForeignKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.HasForeignKey(System.Collections.Generic.IReadOnlyList{System.Reflection.MemberInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.HasForeignKey(System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.HasForeignKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.HasForeignKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.HasForeignKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.HasPrincipalKey(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.HasPrincipalKey(System.Collections.Generic.IReadOnlyList{System.String},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.HasPrincipalKey(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.FindCurrentRelationshipBuilder(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.Attach(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.InternalRelationshipBuilder.AreCompatible(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Reflection.PropertyInfo,System.Reflection.PropertyInfo,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},System.Nullable{System.Boolean},System.Nullable{System.Boolean},System.Nullable{Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.Key">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Key.#ctor(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Key.Properties">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Key.DeclaringEntityType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Key.Builder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Key.GetConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Key.UpdateConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Key.GetReferencingForeignKeys">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Key.IdentityMapFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Key.WeakReferenceIdentityMapFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Key.GetPrincipalKeyValueFactory``1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Key.ReferencingForeignKeys">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Key.ToString">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Key.DebugView">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetIdentityMapFactory(Microsoft.EntityFrameworkCore.Metadata.IKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetWeakReferenceIdentityMapFactory(Microsoft.EntityFrameworkCore.Metadata.IKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.GetPrincipalKeyValueFactory``1(Microsoft.EntityFrameworkCore.Metadata.IKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.IsPrimaryKey(Microsoft.EntityFrameworkCore.Metadata.IKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Metadata.IKey,System.Boolean,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.KeyExtensions.AsKey(Microsoft.EntityFrameworkCore.Metadata.IKey,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.MetadataExtensions.AsConcreteMetadataType``2(``0,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.Model">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Model.#ctor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Model.#ctor(Microsoft.EntityFrameworkCore.Metadata.Conventions.ConventionSet)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Model.ChangeTrackingStrategy">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Model.ConventionDispatcher">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Model.Builder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Model.GetEntityTypes">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Model.AddEntityType(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Model.AddEntityType(System.Type,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Model.GetOrAddEntityType(System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Model.GetOrAddEntityType(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Model.FindEntityType(System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Model.FindEntityType(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Model.RemoveEntityType(System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Model.RemoveEntityType(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Model.Ignore(System.Type,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Model.Ignore(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Model.FindIgnoredTypeConfigurationSource(System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Model.FindIgnoredTypeConfigurationSource(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Model.Unignore(System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Model.Unignore(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Model.Validate">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Model.DebugView">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.GetProductVersion(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.SetProductVersion(Microsoft.EntityFrameworkCore.Metadata.Internal.Model,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.GetRootEntityTypes(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelExtensions.AsModel(Microsoft.EntityFrameworkCore.Metadata.IModel,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter.#ctor(Microsoft.EntityFrameworkCore.Metadata.Internal.Model)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter.Vertices">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter.GetOutgoingNeighbours(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.ModelNavigationsGraphAdapter.GetIncomingNeighbours(Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.MutableEntityTypeExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.MutableEntityTypeExtensions.GetDeclaredForeignKeys(Microsoft.EntityFrameworkCore.Metadata.IMutableEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation.#ctor(System.String,System.Reflection.PropertyInfo,System.Reflection.FieldInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ForeignKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation.ClrType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation.ForeignKey">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation.DeclaringEntityType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation.DeclaringType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation.PropertyMetadataChanged">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation.GetClrProperty(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation.IsCompatible(System.String,System.Reflection.PropertyInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation.IsCompatible(System.Reflection.PropertyInfo,System.Type,System.Type,System.Nullable{System.Boolean},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation.PropertyIndexes">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation.FindInverse">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation.GetTargetType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation.CollectionAccessor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation.ToString">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation.DebugView">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.NavigationExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.NavigationExtensions.GetCollectionAccessor(Microsoft.EntityFrameworkCore.Metadata.INavigation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.NavigationExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Metadata.INavigation,System.Boolean,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.NavigationExtensions.AsNavigation(Microsoft.EntityFrameworkCore.Metadata.INavigation,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.NullableEnumClrPropertySetter`3">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.NullableEnumClrPropertySetter`3.#ctor(System.Action{`0,`1})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.NullableEnumClrPropertySetter`3.SetClrValue(System.Object,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.Property">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.#ctor(System.String,System.Type,System.Reflection.PropertyInfo,System.Reflection.FieldInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.DeclaringEntityType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.PropertyMetadataChanged">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.DeclaringType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.ClrType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.Builder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.GetConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.UpdateConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.SetConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.IsNullable">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.SetIsNullable(System.Boolean,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.GetIsNullableConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.OnFieldInfoSet(System.Reflection.FieldInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.ValueGenerated">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.SetValueGenerated(System.Nullable{Microsoft.EntityFrameworkCore.Metadata.ValueGenerated},Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.GetValueGeneratedConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.IsReadOnlyBeforeSave">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.SetIsReadOnlyBeforeSave(System.Boolean,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.GetIsReadOnlyBeforeSaveConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.IsReadOnlyAfterSave">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.SetIsReadOnlyAfterSave(System.Boolean,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.GetIsReadOnlyAfterSaveConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.RequiresValueGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.SetRequiresValueGenerator(System.Boolean,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.GetRequiresValueGeneratorConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.IsConcurrencyToken">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.SetIsConcurrencyToken(System.Boolean,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.GetIsConcurrencyTokenConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.IsStoreGeneratedAlways">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.SetIsStoreGeneratedAlways(System.Boolean,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.GetIsStoreGeneratedAlwaysConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.GetContainingForeignKeys">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.GetContainingKeys">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.GetContainingIndexes">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.Format(System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.AreCompatible(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.Internal.Property},Microsoft.EntityFrameworkCore.Metadata.Internal.EntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.PropertyIndexes">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.PrimaryKey">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.Keys">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.ForeignKeys">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.Indexes">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.ToString">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.Property.DebugView">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors.#ctor(System.Delegate,System.Delegate,System.Delegate,System.Delegate,System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors.CurrentValueGetter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors.PreStoreGeneratedCurrentValueGetter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors.OriginalValueGetter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors.RelationshipSnapshotGetter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessors.ValueBufferGetter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessorsFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyAccessorsFactory.Create(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.#ctor(System.String,System.Reflection.PropertyInfo,System.Reflection.FieldInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.Name">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.DeclaringType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.IsShadowProperty">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.PropertyInfo">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.FieldInfo">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.SetField(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.GetFieldInfo(System.String,System.Type,System.String,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.SetFieldInfo(System.Reflection.FieldInfo,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.IsCompatible(System.Reflection.FieldInfo,System.Type,System.Type,System.String,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.PropertyMetadataChanged">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.OnFieldInfoSet(System.Reflection.FieldInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.GetFieldInfoConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.MemberInfo">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.ClrType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.Getter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.Setter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBase.Accessors">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetShadowIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetStoreGeneratedIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetRelationshipIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetIndex(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetPropertyIndexes(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.CalculateIndexes(Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.TrySetIndexes(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetPropertyAccessors(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetGetter(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetSetter(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.GetMemberInfo(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.TryGetMemberInfo(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Boolean,System.Boolean,System.Reflection.MemberInfo@,System.String@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyBaseExtensions.AsPropertyBase(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.PropertyCount">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.NavigationCount">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.OriginalValueCount">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.ShadowCount">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.RelationshipCount">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyCounts.StoreGeneratedCount">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyExtensions.GetContainingEntityTypes(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyExtensions.GetReferencingForeignKeys(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyExtensions.GetGenerationProperty(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyExtensions.GetOriginalValueIndex(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyExtensions.MayBeStoreGenerated(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyExtensions.RequiresOriginalValue(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyExtensions.IsKeyOrForeignKey(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyExtensions.FindPrincipal(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyExtensions.ToDebugString(Microsoft.EntityFrameworkCore.Metadata.IProperty,System.Boolean,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyExtensions.AsProperty(Microsoft.EntityFrameworkCore.Metadata.IProperty,System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.#ctor(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.#ctor(System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.IsNone">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.None">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Create(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Create(System.Reflection.PropertyInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Create(Microsoft.EntityFrameworkCore.Metadata.Internal.Navigation)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Name">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIdentity.Property">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes.Index">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes.OriginalValueIndex">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes.ShadowIndex">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes.RelationshipIndex">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyIndexes.StoreGenerationIndex">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.Instance">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.Compare(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.Equals(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.PropertyListComparer.GetHashCode(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.IProperty})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase.#ctor(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.Model,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase.#ctor(System.Type,Microsoft.EntityFrameworkCore.Metadata.Internal.Model,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase.ClrType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase.Model">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase.Name">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase.GetConfigurationSource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase.UpdateConfigurationSource(Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase.PropertyMetadataChanged">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase.Ignore(System.String,Microsoft.EntityFrameworkCore.Metadata.Internal.ConfigurationSource,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase.OnTypeMemberIgnored(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase.GetIgnoredMembers">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase.FindDeclaredIgnoredMemberConfigurationSource(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase.FindIgnoredMemberConfigurationSource(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBase.Unignore(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.DisplayName(Microsoft.EntityFrameworkCore.Metadata.ITypeBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.HasClrType(Microsoft.EntityFrameworkCore.Metadata.ITypeBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Metadata.Internal.TypeBaseExtensions.IsAbstract(Microsoft.EntityFrameworkCore.Metadata.ITypeBase)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.CompiledQueryCacheKeyGenerator">
            <summary>
                <para>
                    Creates keys that uniquely identifies a query. This is used to store and lookup
                    compiled versions of a query in a cache.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.CompiledQueryCacheKeyGenerator.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.CompiledQueryCacheKeyGenerator" /> class.
            </summary>
            <param name="model"> The model that queries will be written against. </param>
            <param name="currentContext"> The context that queries will be executed for. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.CompiledQueryCacheKeyGenerator.GenerateCacheKey(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
                Generates the cache key for the given query.
            </summary>
            <param name="query"> The query to get the cache key for. </param>
            <param name="async"> A value indicating whether the query will be executed asynchronously. </param>
            <returns> The cache key. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.CompiledQueryCacheKeyGenerator.GenerateCacheKeyCore(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
                Generates the cache key for the given query.
            </summary>
            <param name="query"> The query to get the cache key for. </param>
            <param name="async"> A value indicating whether the query will be executed asynchronously. </param>
            <returns> The cache key. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.CompiledQueryCacheKeyGenerator.CompiledQueryCacheKey">
            <summary>
                <para>
                    A key that uniquely identifies a query. This is used to store and lookup
                    compiled versions of a query in a cache.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.CompiledQueryCacheKeyGenerator.CompiledQueryCacheKey.#ctor(System.Linq.Expressions.Expression,Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.QueryTrackingBehavior,System.Boolean)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.CompiledQueryCacheKeyGenerator.CompiledQueryCacheKey" /> class.
            </summary>
            <param name="query"> The query to generate the key for. </param>
            <param name="model"> The model that queries is written against. </param>
            <param name="queryTrackingBehavior"> The tracking behavior for results of the query. </param>
            <param name="async"> A value indicating whether the query will be executed asynchronously. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.CompiledQueryCacheKeyGenerator.CompiledQueryCacheKey.Equals(System.Object)">
            <summary>
                Determines if this key is equivalent to a given object (i.e. if they are keys for the same query).
            </summary>
            <param name="obj">
                The object to compare this key to.
            </param>
            <returns>
                True if the object is a <see cref="T:Microsoft.EntityFrameworkCore.Query.CompiledQueryCacheKeyGenerator.CompiledQueryCacheKey" /> and is for the same query, otherwise false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.CompiledQueryCacheKeyGenerator.CompiledQueryCacheKey.GetHashCode">
            <summary>
                Gets the hash code for the key.
            </summary>
            <returns>
                The hash code for the key.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.EntityLoadInfo">
            <summary>
                <para>
                    Information required to create an instance of an entity based on a row of data returned from a query.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityLoadInfo.#ctor(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Func{Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.EntityLoadInfo" /> struct.
            </summary>
            <param name="valueBuffer"> The row of data that represents this entity. </param>
            <param name="materializer"> The method to materialize the data into an entity instance. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.EntityLoadInfo.ValueBuffer">
            <summary>
                Gets the row of data that represents this entity.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityLoadInfo.WithIndexMap(System.Collections.Generic.Dictionary{System.Type,System.Int32[]})">
            <summary>
                Populates Type Index Map field of the struct.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityLoadInfo.Materialize">
            <summary>
                Materializes the data into an entity instance.
            </summary>
            <returns> The entity instance. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityLoadInfo.ForType(System.Type)">
            <summary>
                Creates a new ValueBuffer containing only the values needed for entities of a given type.
            </summary>
            <param name="clrType"> The type of this entity. </param>
            <returns> Updated value buffer. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor">
            <summary>
                <para>
                    The core visitor that processes a query to be executed.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.QueryContextParameter">
            <summary>
                Expression to reference the <see cref="T:Microsoft.EntityFrameworkCore.Query.QueryContext" /> parameter for a query.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.IsPropertyMethod(System.Reflection.MethodInfo)">
            <summary>
                Determines if a <see cref="T:System.Reflection.MethodInfo" /> is referencing the <see cref="M:Microsoft.EntityFrameworkCore.EF.Property``1(System.Object,System.String)" /> method.
            </summary>
            <param name="methodInfo"> The method info to check. </param>
            <returns>
                True if <paramref name="methodInfo" /> is referencing <see cref="M:Microsoft.EntityFrameworkCore.EF.Property``1(System.Object,System.String)" />; otherwise fale;
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.CreatePropertyExpression(System.Linq.Expressions.Expression,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Creates an expression to access the given property on an given entity.
            </summary>
            <param name="target"> The entity. </param>
            <param name="property"> The property to be accessed. </param>
            <returns> The newly created expression. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.INavigationRewritingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ISubQueryMemberPushDownExpressionVisitor,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IQuerySourceTracingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IEntityResultFindingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ITaskBlockingExpressionVisitor,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMemberAccessBindingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IOrderingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.Internal.IQueryAnnotationExtractor,Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler,Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource,Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter,Microsoft.EntityFrameworkCore.Query.QueryCompilationContext)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor" /> class.
            </summary>
            <param name="queryOptimizer"> The <see cref="T:Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer" /> to be used when processing the query. </param>
            <param name="navigationRewritingExpressionVisitorFactory">
                The <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.INavigationRewritingExpressionVisitorFactory" /> to be used when
                processing the query.
            </param>
            <param name="subQueryMemberPushDownExpressionVisitor">
                The <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ISubQueryMemberPushDownExpressionVisitor" /> to be used when
                processing the query.
            </param>
            <param name="querySourceTracingExpressionVisitorFactory">
                The <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IQuerySourceTracingExpressionVisitorFactory" /> to be used when
                processing the query.
            </param>
            <param name="entityResultFindingExpressionVisitorFactory">
                The <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IEntityResultFindingExpressionVisitorFactory" /> to be used when
                processing the query.
            </param>
            <param name="taskBlockingExpressionVisitor"> The <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ITaskBlockingExpressionVisitor" /> to be used when processing the query. </param>
            <param name="memberAccessBindingExpressionVisitorFactory">
                The <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMemberAccessBindingExpressionVisitorFactory" /> to be used when
                processing the query.
            </param>
            <param name="orderingExpressionVisitorFactory"> The <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IOrderingExpressionVisitorFactory" /> to be used when processing the query. </param>
            <param name="projectionExpressionVisitorFactory">
                The <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory" /> to be used when processing the
                query.
            </param>
            <param name="entityQueryableExpressionVisitorFactory">
                The <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory" /> to be used when
                processing the query.
            </param>
            <param name="queryAnnotationExtractor"> The <see cref="T:Microsoft.EntityFrameworkCore.Query.Internal.IQueryAnnotationExtractor" /> to be used when processing the query. </param>
            <param name="resultOperatorHandler"> The <see cref="T:Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler" /> to be used when processing the query. </param>
            <param name="entityMaterializerSource"> The <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource" /> to be used when processing the query. </param>
            <param name="expressionPrinter"> The <see cref="T:Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter" /> to be used when processing the query. </param>
            <param name="queryCompilationContext"> The <see cref="P:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.QueryCompilationContext" /> to be used when processing the query. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.Expression">
            <summary>
                Gets the expression that represents this query.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.CurrentParameter">
            <summary>
                Gets the expression for the current parameter.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.QueryCompilationContext">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext" /> being used for this query.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.LinqOperatorProvider">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider" /> being used for this query.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.CreateQueryExecutor``1(Remotion.Linq.QueryModel)">
            <summary>
                Creates an action to execute this query.
            </summary>
            <typeparam name="TResult"> The type of results that the query returns. </typeparam>
            <param name="queryModel"> The query. </param>
            <returns> An action that returns the results of the query. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.CreateAsyncQueryExecutor``1(Remotion.Linq.QueryModel)">
            <summary>
                Creates an action to asynchronously execute this query.
            </summary>
            <typeparam name="TResult"> The type of results that the query returns. </typeparam>
            <param name="queryModel"> The query. </param>
            <returns> An action that asynchronously returns the results of the query. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.InterceptExceptions">
            <summary>
                Executes the query and logs any exceptions that occur.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.ExtractQueryAnnotations(Remotion.Linq.QueryModel)">
            <summary>
                Populates <see cref="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.QueryAnnotations" /> based on annotations found in the query.
            </summary>
            <param name="queryModel"> The query. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.OptimizeQueryModel(Remotion.Linq.QueryModel)">
            <summary>
                Applies optimizations to the query.
            </summary>
            <param name="queryModel"> The query. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.SingleResultToSequence(Remotion.Linq.QueryModel,System.Type)">
            <summary>
                Converts the results of the query from a single result to a series of results.
            </summary>
            <param name="queryModel"> The query. </param>
            <param name="type"> The type of results returned by the query. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.IncludeNavigations(Remotion.Linq.QueryModel)">
            <summary>
                Includes related data requested in the LINQ query.
            </summary>
            <param name="queryModel"> The query. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.IncludeNavigations(Remotion.Linq.QueryModel,System.Collections.Generic.IReadOnlyCollection{Microsoft.EntityFrameworkCore.Query.IncludeSpecification})">
            <summary>
                Includes related data requested in the LINQ query.
            </summary>
            <param name="queryModel"> The query. </param>
            <param name="includeSpecifications"> Related data to be included. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.IncludeNavigations(Microsoft.EntityFrameworkCore.Query.IncludeSpecification,System.Type,System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
                Includes a specific navigation property requested in the LINQ query.
            </summary>
            <param name="includeSpecification"> The navigation property to be included. </param>
            <param name="resultType"> The type of results returned by the query. </param>
            <param name="accessorExpression"> Expression for the navigation property to be included. </param>
            <param name="querySourceRequiresTracking"> A value indicating whether results of this query are to be tracked. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.TrackEntitiesInResults``1(Remotion.Linq.QueryModel)">
            <summary>
                Applies tracking behavior to the query.
            </summary>
            <typeparam name="TResult"> The type of results returned by the query. </typeparam>
            <param name="queryModel"> The query. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.CreateExecutorLambda``1">
            <summary>
                Creates an action to execute this query.
            </summary>
            <typeparam name="TResults"> The type of results that the query returns. </typeparam>
            <returns> An action that returns the results of the query. </returns>
            >
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.VisitQueryModel(Remotion.Linq.QueryModel)">
            <summary>
                Visits the root <see cref="T:Remotion.Linq.QueryModel" /> node.
            </summary>
            <param name="queryModel"> The query. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.VisitMainFromClause(Remotion.Linq.Clauses.MainFromClause,Remotion.Linq.QueryModel)">
            <summary>
                Visits the <see cref="T:Remotion.Linq.Clauses.MainFromClause" /> node.
            </summary>
            <param name="fromClause"> The node being visited. </param>
            <param name="queryModel"> The query. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.CompileMainFromClauseExpression(Remotion.Linq.Clauses.MainFromClause,Remotion.Linq.QueryModel)">
            <summary>
                Compiles the <see cref="T:Remotion.Linq.Clauses.MainFromClause" /> node.
            </summary>
            <param name="mainFromClause"> The node being compiled. </param>
            <param name="queryModel"> The query. </param>
            <returns> The compiled result. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.VisitAdditionalFromClause(Remotion.Linq.Clauses.AdditionalFromClause,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                Visits <see cref="T:Remotion.Linq.Clauses.AdditionalFromClause" /> nodes.
            </summary>
            <param name="fromClause"> The node being visited. </param>
            <param name="queryModel"> The query. </param>
            <param name="index"> Index of the node being visited. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.CompileAdditionalFromClauseExpression(Remotion.Linq.Clauses.AdditionalFromClause,Remotion.Linq.QueryModel)">
            <summary>
                Compiles <see cref="T:Remotion.Linq.Clauses.AdditionalFromClause" /> nodes.
            </summary>
            <param name="additionalFromClause"> The node being compiled. </param>
            <param name="queryModel"> The query. </param>
            <returns> The compiled result. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                Visits <see cref="T:Remotion.Linq.Clauses.JoinClause" /> nodes.
            </summary>
            <param name="joinClause"> The node being visited. </param>
            <param name="queryModel"> The query. </param>
            <param name="index"> Index of the node being visited. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.CompileJoinClauseInnerSequenceExpression(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel)">
            <summary>
                Compiles <see cref="T:Remotion.Linq.Clauses.JoinClause" /> nodes.
            </summary>
            <param name="joinClause"> The node being compiled. </param>
            <param name="queryModel"> The query. </param>
            <returns> The compiled result. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.VisitGroupJoinClause(Remotion.Linq.Clauses.GroupJoinClause,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                Visits <see cref="T:Remotion.Linq.Clauses.GroupJoinClause" /> nodes
            </summary>
            <param name="groupJoinClause"> The node being visited. </param>
            <param name="queryModel"> The query. </param>
            <param name="index"> Index of the node being visited. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.CompileGroupJoinInnerSequenceExpression(Remotion.Linq.Clauses.GroupJoinClause,Remotion.Linq.QueryModel)">
            <summary>
                Compiles <see cref="T:Remotion.Linq.Clauses.GroupJoinClause" /> nodes.
            </summary>
            <param name="groupJoinClause"> The node being compiled. </param>
            <param name="queryModel"> The query. </param>
            <returns> The compiled result. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.VisitWhereClause(Remotion.Linq.Clauses.WhereClause,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                Visits <see cref="T:Remotion.Linq.Clauses.WhereClause" /> nodes.
            </summary>
            <param name="whereClause"> The node being visited. </param>
            <param name="queryModel"> The query. </param>
            <param name="index"> Index of the node being visited. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.VisitOrdering(Remotion.Linq.Clauses.Ordering,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause,System.Int32)">
            <summary>
                Visits <see cref="T:Remotion.Linq.Clauses.Ordering" /> nodes.
            </summary>
            <param name="ordering"> The node being visited. </param>
            <param name="queryModel"> The query. </param>
            <param name="orderByClause"> The <see cref="T:Remotion.Linq.Clauses.OrderByClause" /> for the ordering. </param>
            <param name="index"> Index of the node being visited. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.VisitSelectClause(Remotion.Linq.Clauses.SelectClause,Remotion.Linq.QueryModel)">
            <summary>
                Visits <see cref="T:Remotion.Linq.Clauses.SelectClause" /> nodes.
            </summary>
            <param name="selectClause"> The node being visited. </param>
            <param name="queryModel"> The query. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                Visits <see cref="T:Remotion.Linq.Clauses.ResultOperatorBase" /> nodes.
            </summary>
            <param name="resultOperator"> The node being visited. </param>
            <param name="queryModel"> The query. </param>
            <param name="index"> Index of the node being visited. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.ReplaceClauseReferences(System.Linq.Expressions.Expression,Remotion.Linq.Clauses.IQuerySource,System.Boolean)">
            <summary>
                Translates a re-linq query model expression into a compiled query expression.
            </summary>
            <param name="expression"> The re-linq query model expression. </param>
            <param name="querySource"> The query source. </param>
            <param name="inProjection"> True when the expression is a projector. </param>
            <returns>
                A compiled query expression fragment.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.AddOrUpdateMapping(Remotion.Linq.Clauses.IQuerySource,System.Linq.Expressions.Expression)">
            <summary>
                Adds or updates the expression mapped to a query source.
            </summary>
            <param name="querySource"> The query source. </param>
            <param name="expression"> The expression mapped to the query source. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.BindMethodCallToValueBuffer(System.Linq.Expressions.MethodCallExpression,System.Linq.Expressions.Expression)">
            <summary>
                Binds a method call to a value buffer access.
            </summary>
            <param name="methodCallExpression"> The method call expression. </param>
            <param name="expression"> The target expression. </param>
            <returns>
                A value buffer access expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.BindMemberToValueBuffer(System.Linq.Expressions.MemberExpression,System.Linq.Expressions.Expression)">
            <summary>
                Binds a member access to a value buffer access.
            </summary>
            <param name="memberExpression"> The member access expression. </param>
            <param name="expression"> The target expression. </param>
            <returns>
                A value buffer access expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.BindReadValueMethod(System.Type,System.Linq.Expressions.Expression,System.Int32)">
            <summary>
                Binds a value buffer read.
            </summary>
            <param name="memberType"> Type of the member. </param>
            <param name="expression"> The target expression. </param>
            <param name="index"> A value buffer index. </param>
            <returns>
                A value buffer read expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.BindNavigationPathPropertyExpression``1(System.Linq.Expressions.Expression,System.Func{System.Collections.Generic.IEnumerable{Microsoft.EntityFrameworkCore.Metadata.IPropertyBase},Remotion.Linq.Clauses.IQuerySource,``0})">
            <summary>
                Binds a navigation path property expression.
            </summary>
            <typeparam name="TResult"> Type of the result. </typeparam>
            <param name="propertyExpression"> The property expression. </param>
            <param name="propertyBinder"> The property binder. </param>
            <returns>
                A TResult.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.BindMemberExpression(System.Linq.Expressions.MemberExpression,System.Action{Microsoft.EntityFrameworkCore.Metadata.IProperty,Remotion.Linq.Clauses.IQuerySource})">
            <summary>
                Binds a member expression.
            </summary>
            <param name="memberExpression"> The member access expression. </param>
            <param name="memberBinder"> The member binder. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.BindMemberExpression``1(System.Linq.Expressions.MemberExpression,Remotion.Linq.Clauses.IQuerySource,System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Remotion.Linq.Clauses.IQuerySource,``0})">
            <summary>
                Binds a member expression.
            </summary>
            <typeparam name="TResult"> Type of the result. </typeparam>
            <param name="memberExpression"> The member access expression. </param>
            <param name="querySource"> The query source. </param>
            <param name="memberBinder"> The member binder. </param>
            <returns>
                A TResult.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.BindMethodCallExpression``1(System.Linq.Expressions.MethodCallExpression,Remotion.Linq.Clauses.IQuerySource,System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Remotion.Linq.Clauses.IQuerySource,``0})">
            <summary>
                Binds a method call expression.
            </summary>
            <typeparam name="TResult"> Type of the result. </typeparam>
            <param name="methodCallExpression"> The method call expression. </param>
            <param name="querySource"> The query source. </param>
            <param name="methodCallBinder"> The method call binder. </param>
            <returns>
                A TResult.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.BindMethodCallExpression``1(System.Linq.Expressions.MethodCallExpression,System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Remotion.Linq.Clauses.IQuerySource,``0})">
            <summary>
                Binds a method call expression.
            </summary>
            <typeparam name="TResult"> Type of the result. </typeparam>
            <param name="methodCallExpression"> The method call expression. </param>
            <param name="methodCallBinder"> The method call binder. </param>
            <returns>
                A TResult.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor.BindMethodCallExpression(System.Linq.Expressions.MethodCallExpression,System.Action{Microsoft.EntityFrameworkCore.Metadata.IProperty,Remotion.Linq.Clauses.IQuerySource})">
            <summary>
                Binds a method call expression.
            </summary>
            <param name="methodCallExpression"> The method call expression. </param>
            <param name="methodCallBinder"> The method call binder. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitorFactory">
            <summary>
                <para>
                    Creates instances of <see cref="T:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor" />.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitorFactory.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.INavigationRewritingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ISubQueryMemberPushDownExpressionVisitor,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IQuerySourceTracingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IEntityResultFindingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ITaskBlockingExpressionVisitor,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMemberAccessBindingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IOrderingExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.Internal.IQueryAnnotationExtractor,Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler,Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource,Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitorFactory.QueryOptimizer">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer" /> to be used when processing a query.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitorFactory.NavigationRewritingExpressionVisitorFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.INavigationRewritingExpressionVisitorFactory" /> to be used when processing a query.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitorFactory.SubQueryMemberPushDownExpressionVisitor">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ISubQueryMemberPushDownExpressionVisitor" /> to be used when processing a query.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitorFactory.QuerySourceTracingExpressionVisitorFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IQuerySourceTracingExpressionVisitorFactory" /> to be used when processing a query.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitorFactory.EntityResultFindingExpressionVisitorFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IEntityResultFindingExpressionVisitorFactory" /> to be used when processing a query.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitorFactory.TaskBlockingExpressionVisitor">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ITaskBlockingExpressionVisitor" /> to be used when processing a query.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitorFactory.MemberAccessBindingExpressionVisitorFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMemberAccessBindingExpressionVisitorFactory" /> to be used when processing a query.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitorFactory.OrderingExpressionVisitorFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IOrderingExpressionVisitorFactory" /> to be used when processing a query.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitorFactory.ProjectionExpressionVisitorFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory" /> to be used when processing a query.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitorFactory.EntityQueryableExpressionVisitorFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory" /> to be used when processing a query.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitorFactory.ExpressionPrinter">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter" /> to be used when processing a query.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitorFactory.EntityMaterializerSource">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Internal.IEntityMaterializerSource" /> to be used when processing a query.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitorFactory.ResultOperatorHandler">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler" /> to be used when processing a query.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitorFactory.QueryAnnotationExtractor">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.Internal.IQueryAnnotationExtractor" /> to be used when processing a query.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.QueryCompilationContext,Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)">
            <summary>
                Creates a new <see cref="T:Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor" />.
            </summary>
            <param name="queryCompilationContext">
                Compilation context for the query.
            </param>
            <param name="parentEntityQueryModelVisitor">
                The visitor for the outer query.
            </param>
            <returns> The new created visitor. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ICompiledQueryCacheKeyGenerator">
            <summary>
                A cache key generator for the compiled query cache.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ICompiledQueryCacheKeyGenerator.GenerateCacheKey(System.Linq.Expressions.Expression,System.Boolean)">
            <summary>
                Generates a cache key.
            </summary>
            <param name="query"> The query to generate a cache key for. </param>
            <param name="async"> True if the query will be executed asynchronously. </param>
            <returns> An object representing a query cache key. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory">
            <summary>
                A factory for creating EntityQueryModelVisitors.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.QueryCompilationContext,Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)">
            <summary>
                Creates a new EntityQueryModelVisitor.
            </summary>
            <param name="queryCompilationContext"> Context for the query compilation. </param>
            <param name="parentEntityQueryModelVisitor"> The parent entity query model visitor. </param>
            <returns>
                An EntityQueryModelVisitor instance.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.IIncludableQueryable`2">
            <summary>
                Supports queryable Include/ThenInclude chaining operators.
            </summary>
            <typeparam name="TEntity"> The entity type. </typeparam>
            <typeparam name="TProperty"> The property type. </typeparam>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.IncludeSpecification">
            <summary>
                Represents a single query include operation.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.IncludeSpecification.#ctor(Remotion.Linq.Clauses.IQuerySource,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation})">
            <summary>
                Initializes a new instance of the Microsoft.EntityFrameworkCore.Query.IncludeSpecification class.
            </summary>
            <param name="querySource"> The query source. </param>
            <param name="navigationPath"> The set of navigation properties to be included. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.IncludeSpecification.QuerySource">
            <summary>
                Gets the query source.
            </summary>
            <value>
                The query source.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.IncludeSpecification.NavigationPath">
            <summary>
                Gets the set of navigation properties to be included.
            </summary>
            <value>
                The set of navigation properties to be included.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.IncludeSpecification.IsEnumerableTarget">
            <summary>
                Gets or sets a value indicating whether this object is an enumerable target.
            </summary>
            <value>
                True if this object is an enumerable target, false if not.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.IncludeSpecification.ToString">
            <summary>
                Convert this object into a string representation.
            </summary>
            <returns>
                A string that represents this object.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory">
            <summary>
                Factory for <see cref="T:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext" /> instances.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory.Create(System.Boolean)">
            <summary>
                Creates a new QueryCompilationContext.
            </summary>
            <param name="async"> true if the query will be executed asynchronously. </param>
            <returns>
                A <see cref="T:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext" /> instance.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.IQueryContextFactory">
            <summary>
                Factory for <see cref="T:Microsoft.EntityFrameworkCore.Query.QueryContext" /> instances.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.IQueryContextFactory.Create">
            <summary>
                Creates a new QueryContext.
            </summary>
            <returns>
                A QueryContext instance.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler">
            <summary>
                A handler for <see cref="T:Remotion.Linq.Clauses.ResultOperatorBase" /> instances.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler.HandleResultOperator(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel)">
            <summary>
                Handles a result operator.
            </summary>
            <param name="entityQueryModelVisitor"> The entity query model visitor. </param>
            <param name="resultOperator"> The result operator. </param>
            <param name="queryModel"> The query model. </param>
            <returns>
                A compiled query expression fragment representing the result operator.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.NotParameterizedAttribute">
            <summary>
                Signals that custom LINQ operator parameter should not be parameterized during query compilation.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext">
            <summary>
                A query compilation context. The primary data structure representing the state/components
                used during query compilation.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.Extensions.Logging.ILogger,Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider,System.Type,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.Model">
            <summary>
                Gets the model.
            </summary>
            <value>
                The model.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.Logger">
            <summary>
                Gets the logger.
            </summary>
            <value>
                The logger.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.LinqOperatorProvider">
            <summary>
                Gets the linq operator provider.
            </summary>
            <value>
                The linq operator provider.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.ContextType">
            <summary>
                Gets the type of the context./
            </summary>
            <value>
                The type of the context.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.TrackQueryResults">
            <summary>
                Gets a value indicating the default configured tracking behavior.
            </summary>
            <value>
                true if the default is to track query results, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.QuerySourceMapping">
            <summary>
                Gets the query source mapping.
            </summary>
            <value>
                The query source mapping.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.AddOrUpdateMapping(Remotion.Linq.Clauses.IQuerySource,System.Linq.Expressions.Expression)">
            <summary>
                Adds or updates the expression mapped to a query source.
            </summary>
            <param name="querySource"> The query source. </param>
            <param name="expression"> The expression mapped to the query source. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.QueryAnnotations">
            <summary>
                Gets the query annotations./
            </summary>
            <value>
                The query annotations.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IsTrackingQuery">
            <summary>
                Gets a value indicating whether this is a tracking query.
            </summary>
            <value>
                true if this object is a tracking query, false if not.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IsIncludeQuery">
            <summary>
                The query has at least one Include operation.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.IsQueryBufferRequired">
            <summary>
                Gets a value indicating whether this query requires a query buffer.
            </summary>
            <value>
                true if this query requires a query buffer, false if not.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.DetermineQueryBufferRequirement(Remotion.Linq.QueryModel)">
            <summary>
                Determine if the query requires a query buffer.
            </summary>
            <param name="queryModel"> The query model. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryModelVisitor">
            <summary>
                Creates query model visitor.
            </summary>
            <returns>
                The new query model visitor.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.CreateQueryModelVisitor(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)">
            <summary>
                Creates query model visitor.
            </summary>
            <param name="parentEntityQueryModelVisitor"> The parent entity query model visitor. </param>
            <returns>
                The new query model visitor.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.AddTrackableInclude(Remotion.Linq.Clauses.IQuerySource,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation})">
            <summary>
                Adds a trackable include.
            </summary>
            <param name="querySource"> The query source. </param>
            <param name="navigationPath"> The included navigation path. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.GetTrackableIncludes(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Gets all trackable includes for a given query source.
            </summary>
            <param name="querySource"> The query source. </param>
            <returns>
                The trackable includes.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.FindQuerySourcesRequiringMaterialization(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,Remotion.Linq.QueryModel)">
            <summary>
                Determines all query sources that require materialization.
            </summary>
            <param name="queryModelVisitor"> The query model visitor. </param>
            <param name="queryModel"> The query model. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.QueryCompilationContext.QuerySourceRequiresMaterialization(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Determine whether or not a query source requires materialization.
            </summary>
            <param name="querySource"> The query source. </param>
            <returns>
                true if it requires materialization, false if not.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.QueryContext">
            <summary>
                The principal data structure used by a compiled query during execution.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.QueryContext.#ctor(System.Func{Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer},Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager},Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryContext.QueryBuffer">
            <summary>
                The query buffer.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryContext.StateManager">
            <summary>
                The state manager.
            </summary>
            <value>
                The state manager.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryContext.QueryProvider">
            <summary>
                The query provider.
            </summary>
            <value>
                The query provider.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryContext.ConcurrencyDetector">
            <summary>
                Gets the concurrency detector.
            </summary>
            <value>
                The concurrency detector.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryContext.CancellationToken">
            <summary>
                Gets or sets the cancellation token.
            </summary>
            <value>
                The cancellation token.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryContext.ParameterValues">
            <summary>
                The parameter values.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.QueryContext.AddParameter(System.String,System.Object)">
            <summary>
                Adds a parameter.
            </summary>
            <param name="name"> The name. </param>
            <param name="value"> The value. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.QueryContext.RemoveParameter(System.String)">
            <summary>
                Removes a parameter by name.
            </summary>
            <param name="name"> The name. </param>
            <returns>
                The parameter value.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.QueryContext.BeginTrackingQuery">
            <summary>
                Notify the state manager that a tracking query is starting.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.QueryContext.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)">
            <summary>
                Start tracking an entity.
            </summary>
            <param name="entity"> The entity. </param>
            <param name="entityTrackingInfo"> Information describing how to track the entity. </param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.QueryContextFactory">
            <summary>
                A factory for <see cref="T:Microsoft.EntityFrameworkCore.Query.QueryContext" /> instances.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.QueryContextFactory.#ctor(Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext,Microsoft.EntityFrameworkCore.Internal.IConcurrencyDetector)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.QueryContextFactory.CreateQueryBuffer">
            <summary>
                Creates a query buffer.
            </summary>
            <returns>
                The new query buffer.
            </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryContextFactory.ChangeDetector">
            <summary>
                Gets the change detector.
            </summary>
            <value>
                The change detector.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryContextFactory.StateManager">
            <summary>
                Gets the state manager.
            </summary>
            <value>
                The state manager.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.QueryContextFactory.ConcurrencyDetector">
            <summary>
                Gets the concurrency detector.
            </summary>
            <value>
                The concurrency detector.
            </value>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.QueryContextFactory.Create">
            <summary>
                Creates a new QueryContext.
            </summary>
            <returns>
                A QueryContext.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler">
            <summary>
                The default client-eval result operator handler.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler.HandleResultOperator(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel)">
            <summary>
                Handles the result operator.
            </summary>
            <param name="entityQueryModelVisitor"> The entity query model visitor. </param>
            <param name="resultOperator"> The result operator. </param>
            <param name="queryModel"> The query model. </param>
            <returns>
                An compiled query expression fragment representing the result operator.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler.CallWithPossibleCancellationToken(System.Reflection.MethodInfo,System.Linq.Expressions.Expression[])">
            <summary>
                Call a client operator that may have a cancellation token.
            </summary>
            <param name="methodInfo"> The method to call. </param>
            <param name="arguments"> A variable-length parameters list containing arguments. </param>
            <returns>
                A method call expression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Expressions.Internal.NullConditionalExpression">
            <summary>
                Expression representing null-conditional access.
                Logic in this file is based on https://github.com/bartdesmet/ExpressionFutures
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.Internal.NullConditionalExpression.#ctor(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
                Creates a new instance of NullConditionalExpression.
            </summary>
            <param name="nullableCaller">
                Expression representing potentially nullable caller that
                needs to be tested for it's nullability.
            </param>
            <param name="caller"> Expression representing actual caller for the access operation. </param>
            <param name="accessOperation"> Expression representing access operation. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.Internal.NullConditionalExpression.NullableCaller">
            <summary>
                Expression representing potentially nullable caller that needs to be tested for it's nullability.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.Internal.NullConditionalExpression.Caller">
            <summary>
                Expression representing actual caller for the access operation.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.Internal.NullConditionalExpression.AccessOperation">
            <summary>
                Expression representing access operation.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.Internal.NullConditionalExpression.CanReduce">
            <summary>
                Indicates that the node can be reduced to a simpler node. If this returns true,
                Reduce() can be called to produce the reduced form.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.Internal.NullConditionalExpression.Type">
            <summary>
                Gets the static type of the expression that this expression represents.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Expressions.Internal.NullConditionalExpression.NodeType">
            <summary>
                Gets the node type of this expression.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.Internal.NullConditionalExpression.Reduce">
            <summary>
                Reduces this node to a simpler expression. If CanReduce returns true, this should
                return a valid expression. This method can return another node which itself must
                be reduced.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.Internal.NullConditionalExpression.VisitChildren(System.Linq.Expressions.ExpressionVisitor)">
            <summary>
                Reduces the node and then calls the visitor delegate on the reduced expression.
                The method throws an exception if the node is not
                reducible.
            </summary>
            <returns>
                The expression being visited, or an expression which should replace it in the tree.
            </returns>
            <param name="visitor">An instance of <see cref="T:System.Func`2" />.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Expressions.Internal.NullConditionalExpression.ToString">
            <summary>
                Returns a textual representation of the <see cref="T:System.Linq.Expressions.Expression" />.
            </summary>
            <returns>
                A textual representation of the <see cref="T:System.Linq.Expressions.Expression" />.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.EntityQueryableExpressionVisitor">
            <summary>
                Visitor for processing entity types roots.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.EntityQueryableExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.EntityQueryableExpressionVisitor" /> class.
            </summary>
            <param name="entityQueryModelVisitor"> The visitor for the query. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.EntityQueryableExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
                Visits <see cref="T:System.Linq.Expressions.ConstantExpression" /> nodes.
            </summary>
            <param name="constantExpression"> The node being visited. </param>
            <returns> An expression to use in place of the node. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.EntityQueryableExpressionVisitor.VisitEntityQueryable(System.Type)">
            <summary>
                Visits entity type roots.
            </summary>
            <param name="elementType"> The entity type of the root. </param>
            <returns> An expression to use in place of the node. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase">
            <summary>
                A base expression visitor that ignores Block expressions.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.Visit(System.Linq.Expressions.Expression)">
            <summary>
                Visits the given node.
            </summary>
            <param name="node"> The expression to visit. </param>
            <returns>
                An Expression.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ExpressionVisitorBase.VisitExtension(System.Linq.Expressions.Expression)">
            <summary>
                Visits the children of the extension expression.
            </summary>
            <returns>
                The modified expression, if it or any subexpression was modified; otherwise, returns the original expression.
            </returns>
            <param name="node">The expression to visit.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory">
            <summary>
                A factory for creating entity queryable expression visitors.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Creates a new entity queryable ExpressionVisitor.
            </summary>
            <param name="entityQueryModelVisitor"> The query model visitor. </param>
            <param name="querySource"> The query source. </param>
            <returns>
                An ExpressionVisitor.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory">
            <summary>
                A factory for creating projection expression visitors.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                Creates a new ExpressionVisitor.
            </summary>
            <param name="entityQueryModelVisitor"> The entity query model visitor. </param>
            <param name="querySource"> The query source. </param>
            <returns>
                An ExpressionVisitor.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ProjectionExpressionVisitor">
            <summary>
                A projection expression visitor.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ProjectionExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)">
            <summary>
                Initializes a new instance of the Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ProjectionExpressionVisitor class.
            </summary>
            <param name="entityQueryModelVisitor"> The entity query model visitor. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.ProjectionExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)">
            <summary>
                Visit a subquery.
            </summary>
            <param name="expression"> The subquery expression. </param>
            <returns>
                A compiled query expression fragment representing the input subquery expression.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositeKey">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositeKey.CompositeKeyCtor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositeKey.op_Equality(Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositeKey,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositeKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositeKey.op_Inequality(Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositeKey,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositeKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositeKey.#ctor(System.Object[])">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositeKey.Equals(System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.CompositeKey.GetHashCode">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.DefaultQueryExpressionVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.DefaultQueryExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.DefaultQueryExpressionVisitor.QueryModelVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.DefaultQueryExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.DefaultQueryExpressionVisitor.CreateQueryModelVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.DefaultQueryExpressionVisitor.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.DefaultQueryExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.DefaultQueryExpressionVisitor.GetParameterValueMethodInfo">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityEqualityRewritingExpressionVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityEqualityRewritingExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityEqualityRewritingExpressionVisitor.Rewrite(Remotion.Linq.QueryModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityEqualityRewritingExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityEqualityRewritingExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityResultFindingExpressionVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityResultFindingExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Query.Internal.IEntityTrackingInfoFactory,Microsoft.EntityFrameworkCore.Query.QueryCompilationContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityResultFindingExpressionVisitor.FindEntitiesInResult(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityResultFindingExpressionVisitor.VisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityResultFindingExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityResultFindingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityResultFindingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityResultFindingExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityResultFindingExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityResultFindingExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityResultFindingExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityResultFindingExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityResultFindingExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityResultFindingExpressionVisitorFactory.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Query.Internal.IEntityTrackingInfoFactory)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.EntityResultFindingExpressionVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.QueryCompilationContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.TransformingVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.#ctor(`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitMainFromClause(Remotion.Linq.Clauses.MainFromClause,Remotion.Linq.QueryModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitAdditionalFromClause(Remotion.Linq.Clauses.AdditionalFromClause,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.GroupJoinClause)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitWhereClause(Remotion.Linq.Clauses.WhereClause,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitOrderByClause(Remotion.Linq.Clauses.OrderByClause,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitOrdering(Remotion.Linq.Clauses.Ordering,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.OrderByClause,System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitSelectClause(Remotion.Linq.Clauses.SelectClause,Remotion.Linq.QueryModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ExpressionTransformingQueryModelVisitor`1.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IEntityResultFindingExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IEntityResultFindingExpressionVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.QueryCompilationContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMemberAccessBindingExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IMemberAccessBindingExpressionVisitorFactory.Create(Remotion.Linq.Clauses.QuerySourceMapping,Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.INavigationRewritingExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.INavigationRewritingExpressionVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IOrderingExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IOrderingExpressionVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IQuerySourceTracingExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IQuerySourceTracingExpressionVisitorFactory.Create">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ISubQueryMemberPushDownExpressionVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ISubQueryMemberPushDownExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ITaskBlockingExpressionVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ITaskBlockingExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor.#ctor(Remotion.Linq.Clauses.QuerySourceMapping,Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor.VisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor.VisitExtension(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.MemberAccessBindingExpressionVisitorFactory.Create(Remotion.Linq.Clauses.QuerySourceMapping,Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.NavigationRewritingExpressionVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.NavigationRewritingExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.NavigationRewritingExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.NavigationRewritingExpressionVisitor.Rewrite(Remotion.Linq.QueryModel,Remotion.Linq.QueryModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.NavigationRewritingExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.NavigationRewritingExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.NavigationRewritingExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.NavigationRewritingExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.NavigationRewritingExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.NavigationRewritingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.NavigationRewritingExpressionVisitor.VisitMemberAssignment(System.Linq.Expressions.MemberAssignment)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.NavigationRewritingExpressionVisitor.VisitElementInit(System.Linq.Expressions.ElementInit)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.NavigationRewritingExpressionVisitor.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.NavigationRewritingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.NavigationRewritingExpressionVisitor.CreateVisitorForSubQuery(System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.NavigationRewritingExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.NavigationRewritingExpressionVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.OrderingExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.OrderingExpressionVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.ExtractParameters(System.Linq.Expressions.Expression,Microsoft.EntityFrameworkCore.Query.QueryContext,Remotion.Linq.Parsing.ExpressionVisitors.TreeEvaluation.IEvaluatableExpressionFilter,Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.ExtractParameters(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ParameterExtractingExpressionVisitor.Evaluate(System.Linq.Expressions.Expression,System.String@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ProjectionExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ProjectionExpressionVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.FindResultQuerySourceReferenceExpression(System.Linq.Expressions.Expression,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitTypeBinary(System.Linq.Expressions.TypeBinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitLambda``1(System.Linq.Expressions.Expression{``0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitInvocation(System.Linq.Expressions.InvocationExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.QuerySourceTracingExpressionVisitorFactory.Create">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ReducingExpressionVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ReducingExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ReducingExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.FindQuerySourcesRequiringMaterialization(Remotion.Linq.QueryModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitQuerySourceReference(Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitorFactory.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.RequiresMaterializationExpressionVisitorFactory.Create(Microsoft.EntityFrameworkCore.Query.EntityQueryModelVisitor)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.SubQueryMemberPushDownExpressionVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.SubQueryMemberPushDownExpressionVisitor.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.SubQueryMemberPushDownExpressionVisitor.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.SubQueryMemberPushDownExpressionVisitor.VisitSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.TaskBlockingExpressionVisitor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.TaskBlockingExpressionVisitor.Visit(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ToEnumerable">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ToOrdered">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.InterceptExceptions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TrackEntities">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.TrackGroupedEntities">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ToSequence">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ToQueryable">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.SelectMany">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.Join">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.GroupJoin">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider._Select``2(System.Collections.Generic.IAsyncEnumerable{``0},System.Func{``0,``1})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.Select">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.OrderBy">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ThenBy">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.Where">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.Any">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.All">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.First">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.FirstOrDefault">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.Cast">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.Count">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.Contains">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.DefaultIfEmpty">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.DefaultIfEmptyArg">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.Distinct">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.GroupBy">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.Last">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.LastOrDefault">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.LongCount">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.OfType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.Single">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.SingleOrDefault">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.Skip">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.Take">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.GetAggregateMethod(System.String,System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.MakeSequenceType(System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ToAsyncEnumerableMethod">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.ToAsyncEnumerable``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.Concat">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.Except">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.Intersect">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.AsyncLinqOperatorProvider.Union">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.CompiledQueryParameterPrefix">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.#ctor(Microsoft.EntityFrameworkCore.Internal.IDbContextServices)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddQuery``1(System.Object,System.Func{System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,``0}})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.CompiledQueryCache.GetOrAddAsyncQuery``1(System.Object,System.Func{System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,System.Collections.Generic.IAsyncEnumerable{``0}}})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.DependentToPrincipalIncludeComparer`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.DependentToPrincipalIncludeComparer`1.#ctor(`0,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.DependentToPrincipalIncludeComparer`1.ShouldInclude(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryable`1.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider,System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.#ctor(Microsoft.EntityFrameworkCore.Query.Internal.IQueryCompiler)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.CreateQuery``1(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.CreateQuery(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.Execute``1(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.Execute(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.ExecuteAsync``1(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityQueryProvider.ExecuteAsync``1(System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.#ctor(Microsoft.EntityFrameworkCore.Query.QueryCompilationContext,Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.IsEnumerableTarget">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.QuerySourceReferenceExpression">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.QuerySource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.StartTracking(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,System.Object,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.IncludedEntity">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.IncludedEntity.#ctor(System.Object,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Collections.Generic.ISet{Microsoft.EntityFrameworkCore.Metadata.IForeignKey})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.IncludedEntity.Entity">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.IncludedEntity.StartTracking(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo.GetIncludedEntities(Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfoFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfoFactory.Create(Microsoft.EntityFrameworkCore.Query.QueryCompilationContext,Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionEqualityComparer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionEqualityComparer.GetHashCode(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionEqualityComparer.Equals(System.Linq.Expressions.Expression,System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.#ctor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.#ctor(System.Collections.Generic.List{Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.StringBuilder">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Append">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.AppendLine">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Print(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.TrackedQuery">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.Visit(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitBinary(System.Linq.Expressions.BinaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitBlock(System.Linq.Expressions.BlockExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitConditional(System.Linq.Expressions.ConditionalExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitConstant(System.Linq.Expressions.ConstantExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitGoto(System.Linq.Expressions.GotoExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitLabel(System.Linq.Expressions.LabelExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitLambda``1(System.Linq.Expressions.Expression{``0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMember(System.Linq.Expressions.MemberExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMemberInit(System.Linq.Expressions.MemberInitExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitMethodCall(System.Linq.Expressions.MethodCallExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitNew(System.Linq.Expressions.NewExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitNewArray(System.Linq.Expressions.NewArrayExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitParameter(System.Linq.Expressions.ParameterExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitUnary(System.Linq.Expressions.UnaryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitDefault(System.Linq.Expressions.DefaultExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitTry(System.Linq.Expressions.TryExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.VisitExtension(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.PostProcess(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter.IConstantPrinter.TryPrintConstant(System.Object,Microsoft.EntityFrameworkCore.Internal.IndentedStringBuilder)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.Grouping`2">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.Grouping`2.#ctor(`0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.Grouping`2.Key">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.Grouping`2.Add(`1)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.Grouping`2.GetEnumerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.IAsyncEnumerableAccessor`1.AsyncEnumerable">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider.ExecuteAsync``1(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IAsyncQueryProvider.ExecuteAsync``1(System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader.Load(Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.ICompiledQueryCache">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ICompiledQueryCache.GetOrAddQuery``1(System.Object,System.Func{System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,``0}})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ICompiledQueryCache.GetOrAddAsyncQuery``1(System.Object,System.Func{System.Func{Microsoft.EntityFrameworkCore.Query.QueryContext,System.Collections.Generic.IAsyncEnumerable{``0}}})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.IDetachableContext">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IDetachableContext.DetachContext">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.IEntityTrackingInfoFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IEntityTrackingInfoFactory.Create(Microsoft.EntityFrameworkCore.Query.QueryCompilationContext,Remotion.Linq.Clauses.Expressions.QuerySourceReferenceExpression,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter.Print(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer.ShouldInclude(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.SelectMany">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Join">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.GroupJoin">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Select">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.OrderBy">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ThenBy">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Where">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Any">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.All">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Cast">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Concat">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Count">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Contains">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.DefaultIfEmpty">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.DefaultIfEmptyArg">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Distinct">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Except">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.First">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.FirstOrDefault">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.GroupBy">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Intersect">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Last">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.LastOrDefault">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.LongCount">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Single">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.SingleOrDefault">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Skip">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Take">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.InterceptExceptions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.OfType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ToSequence">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ToOrdered">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ToEnumerable">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.ToQueryable">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.TrackEntities">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.TrackGroupedEntities">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.Union">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.GetAggregateMethod(System.String,System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.ILinqOperatorProvider.MakeSequenceType(System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.IQueryAnnotationExtractor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryAnnotationExtractor.ExtractQueryAnnotations(Remotion.Linq.QueryModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetEntity(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Query.EntityLoadInfo,System.Boolean,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.GetPropertyValue(System.Object,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.Include(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryBuffer.IncludeAsync(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader},System.Boolean,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.IQueryCompiler">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryCompiler.Execute``1(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryCompiler.ExecuteAsync``1(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryCompiler.ExecuteAsync``1(System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.IQueryModelPrinter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryModelPrinter.Print(Remotion.Linq.QueryModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IQueryOptimizer.Optimize(System.Collections.Generic.IReadOnlyCollection{Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation},Remotion.Linq.QueryModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader.Load(Microsoft.EntityFrameworkCore.Query.QueryContext,Microsoft.EntityFrameworkCore.Query.Internal.IIncludeKeyComparer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.Key">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.TryGetEntity(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CollectGarbage">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.Add(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.IWeakReferenceIdentityMap.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ToEnumerable">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ToOrdered">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.InterceptExceptions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.TrackEntities">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.TrackGroupedEntities">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ToSequence">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ToQueryable">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.SelectMany">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.Join">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.GroupJoin">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.Select">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.OrderBy">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ThenBy">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.Where">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.Any">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.All">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.Cast">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.Count">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.Contains">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.DefaultIfEmpty">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.DefaultIfEmptyArg">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.Distinct">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.First">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.FirstOrDefault">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.GroupBy">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.Last">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.LastOrDefault">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.LongCount">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.OfType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.Single">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.SingleOrDefault">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.Skip">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.Take">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.Concat">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.Except">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.Intersect">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.Union">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.GetAggregateMethod(System.String,System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.MakeSequenceType(System.Type)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.NullIncludeComparer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.NullIncludeComparer.ShouldInclude(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.PrincipalToDependentIncludeComparer`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.PrincipalToDependentIncludeComparer`1.#ctor(`0,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IDependentKeyValueFactory{`0},Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.PrincipalToDependentIncludeComparer`1.ShouldInclude(Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.QueryAnnotationExtractor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryAnnotationExtractor.ExtractQueryAnnotations(Remotion.Linq.QueryModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.#ctor(Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IStateManager},Microsoft.EntityFrameworkCore.Internal.LazyRef{Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IChangeDetector})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.GetEntity(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.Query.EntityLoadInfo,System.Boolean,System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.GetPropertyValue(System.Object,Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.StartTracking(System.Object,Microsoft.EntityFrameworkCore.Query.Internal.EntityTrackingInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.Include(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IRelatedEntitiesLoader},System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryBuffer.IncludeAsync(Microsoft.EntityFrameworkCore.Query.QueryContext,System.Object,System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Metadata.INavigation},System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Query.Internal.IAsyncRelatedEntitiesLoader},System.Boolean,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.#ctor(Microsoft.EntityFrameworkCore.Metadata.IModel,Microsoft.Extensions.Logging.ILogger{Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory},Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory,Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.IRequiresMaterializationExpressionVisitorFactory,Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.Model">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.Logger">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.EntityQueryModelVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.RequiresMaterializationExpressionVisitorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.ContextType">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.TrackQueryResults">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompilationContextFactory.Create(System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.#ctor(Microsoft.EntityFrameworkCore.Query.IQueryContextFactory,Microsoft.EntityFrameworkCore.Query.Internal.ICompiledQueryCache,Microsoft.EntityFrameworkCore.Query.ICompiledQueryCacheKeyGenerator,Microsoft.EntityFrameworkCore.Storage.IDatabase,Microsoft.EntityFrameworkCore.Infrastructure.ISensitiveDataLogger{Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler},Remotion.Linq.Parsing.Structure.NodeTypeProviders.MethodInfoBasedNodeTypeRegistry,Microsoft.EntityFrameworkCore.Internal.ICurrentDbContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Database">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.Execute``1(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteAsync``1(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExecuteAsync``1(System.Linq.Expressions.Expression,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.ExtractParameters(System.Linq.Expressions.Expression,Microsoft.EntityFrameworkCore.Query.QueryContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.CompileQuery``1(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryCompiler.CompileAsyncQuery``1(System.Linq.Expressions.Expression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.QueryModelExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryModelExtensions.Print(Remotion.Linq.QueryModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryModelExtensions.PopulateQueryModelMapping(Remotion.Linq.QueryModel,System.Collections.Generic.Dictionary{Remotion.Linq.QueryModel,Remotion.Linq.QueryModel})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryModelExtensions.RecreateQueryModelFromMapping(Remotion.Linq.QueryModel,System.Collections.Generic.Dictionary{Remotion.Linq.QueryModel,Remotion.Linq.QueryModel})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryModelExtensions.CountQuerySourceReferences(Remotion.Linq.QueryModel,Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.QueryModelPrinter">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryModelPrinter.#ctor">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryModelPrinter.Print(Remotion.Linq.QueryModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.Optimize(System.Collections.Generic.IReadOnlyCollection{Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation},Remotion.Linq.QueryModel)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitJoinClause(Remotion.Linq.Clauses.JoinClause,Remotion.Linq.QueryModel,Remotion.Linq.Clauses.GroupJoinClause)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitGroupJoinClause(Remotion.Linq.Clauses.GroupJoinClause,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.FlattenSubQuery(Remotion.Linq.Clauses.Expressions.SubQueryExpression,Remotion.Linq.Clauses.IFromClause,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QueryOptimizer.VisitResultOperator(Remotion.Linq.Clauses.ResultOperatorBase,Remotion.Linq.QueryModel,System.Int32)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.QuerySourceExtensions">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.QuerySourceExtensions.HasGeneratedItemName(Remotion.Linq.Clauses.IQuerySource)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.TaskResultAsyncEnumerable`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.TaskResultAsyncEnumerable`1.#ctor(System.Threading.Tasks.Task{`0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.TaskResultAsyncEnumerable`1.GetEnumerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.#ctor(Microsoft.EntityFrameworkCore.Metadata.IKey,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.IPrincipalKeyValueFactory{`0})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.PrincipalKeyValueFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.Key">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.TryGetEntity(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Boolean@)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.CollectGarbage">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.Add(Microsoft.EntityFrameworkCore.Storage.ValueBuffer,System.Object)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.Storage.ValueBuffer)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMap`1.CreateIncludeKeyComparer(Microsoft.EntityFrameworkCore.Metadata.INavigation,Microsoft.EntityFrameworkCore.ChangeTracking.Internal.InternalEntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMapFactoryFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.Internal.WeakReferenceIdentityMapFactoryFactory.Create(Microsoft.EntityFrameworkCore.Metadata.IKey)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation">
            <summary>
                Represents an annotation on a query.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QuerySource">
            <summary>
                Gets the query source.
            </summary>
            <value>
                The query source.
            </value>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ResultOperators.IQueryAnnotation.QueryModel">
            <summary>
                Gets the query model.
            </summary>
            <value>
                The query model.
            </value>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeExpressionNode">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeExpressionNode.SupportedMethods">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeExpressionNode.#ctor(Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo,System.Linq.Expressions.LambdaExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeExpressionNode.CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeExpressionNode.Resolve(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.#ctor(System.Linq.Expressions.MemberExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.#ctor(System.String)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.QuerySource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.QueryModel">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.NavigationPropertyPath">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.StringNavigationPropertyPath">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.ChainedNavigationProperties">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.AppendToNavigationPath(System.Collections.Generic.IReadOnlyList{System.Reflection.PropertyInfo})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.ToString">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.Clone(Remotion.Linq.Clauses.CloneContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.IncludeResultOperator.ExecuteInMemory``1(Remotion.Linq.Clauses.StreamedData.StreamedSequence)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.StringIncludeExpressionNode">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.StringIncludeExpressionNode.SupportedMethods">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.StringIncludeExpressionNode.#ctor(Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo,System.Linq.Expressions.ConstantExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.StringIncludeExpressionNode.CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.StringIncludeExpressionNode.Resolve(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.SupportedMethods">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.#ctor(Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo,System.Linq.Expressions.LambdaExpression)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.ApplyNodeSpecificSemantics(Remotion.Linq.QueryModel,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.ThenIncludeExpressionNode.Resolve(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingExpressionNode">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingExpressionNode.SupportedMethods">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingExpressionNode.#ctor(Remotion.Linq.Parsing.Structure.IntermediateModel.MethodCallExpressionParseInfo)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingExpressionNode.CreateResultOperator(Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingExpressionNode.Resolve(System.Linq.Expressions.ParameterExpression,System.Linq.Expressions.Expression,Remotion.Linq.Parsing.Structure.IntermediateModel.ClauseGenerationContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.#ctor(System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QuerySource">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.QueryModel">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.IsTracking">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ToString">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.Clone(Remotion.Linq.Clauses.CloneContext)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.TransformExpressions(System.Func{System.Linq.Expressions.Expression,System.Linq.Expressions.Expression})">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Query.ResultOperators.Internal.TrackingResultOperator.ExecuteInMemory``1(Remotion.Linq.Clauses.StreamedData.StreamedSequence)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Database">
            <summary>
                <para>
                    The main interaction point between a context and the database provider.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Database.#ctor(Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.Database" /> class.
            </summary>
            <param name="queryCompilationContextFactory"> Factory for compilation contexts to process LINQ queries. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Database.SaveChanges(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})">
            <summary>
                Persists changes from the supplied entries to the database.
            </summary>
            <param name="entries"> Entries representing the changes to be persisted. </param>
            <returns> The number of state entries persisted to the database. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Database.SaveChangesAsync(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Threading.CancellationToken)">
            <summary>
                Asynchronously persists changes from the supplied entries to the database.
            </summary>
            <param name="entries"> Entries representing the changes to be persisted. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous save operation. The task result contains the
                number of entries persisted to the database.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Database.CompileQuery``1(Remotion.Linq.QueryModel)">
            <summary>
                Translates a query model into a function that can be executed to get query results from the database.
            </summary>
            <typeparam name="TResult"> The type of results returned by the query. </typeparam>
            <param name="queryModel"> An object model representing the query to be executed. </param>
            <returns> A function that will execute the query. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Database.CompileAsyncQuery``1(Remotion.Linq.QueryModel)">
            <summary>
                Translates a query model into a function that can be executed to asynchronously get query results from the database.
            </summary>
            <typeparam name="TResult"> The type of results returned by the query. </typeparam>
            <param name="queryModel"> An object model representing the query to be executed. </param>
            <returns> A function that will asynchronously execute the query. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState">
            <summary>
                Provided as the state to <see cref="T:Microsoft.Extensions.Logging.ILogger" /> when logging an exception that occurred while accessing the database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState.#ctor(System.Type)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState" /> class.
            </summary>
            <param name="contextType"> The type of the derived context that the error occurred for. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DatabaseErrorLogState.ContextType">
            <summary>
                Gets the type of the derived context that the error occurred for.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.DatabaseProvider`2">
            <summary>
                <para>
                    The primary point where a database provider can tell EF that it has been selected for the current context
                    and provide the services required for it to function.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
            <typeparam name="TProviderServices">
                The base set of services required by EF for the database provider to function.
            </typeparam>
            <typeparam name="TOptionsExtension">
                The type of options that the database provider will add to <see cref="P:Microsoft.EntityFrameworkCore.DbContextOptions.Extensions" />
                to identify that is has been selected (and to store its database specific settings).
            </typeparam>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.DatabaseProvider`2.GetProviderServices(System.IServiceProvider)">
            <summary>
                Gets the base set of services required by EF for the database provider to function.
            </summary>
            <param name="serviceProvider"> The service provider to resolve services from. </param>
            <returns> The services for this database provider. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.DatabaseProvider`2.IsConfigured(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <summary>
                Gets a value indicating whether this database provider has been selected for a given context.
            </summary>
            <param name="options"> The options for the context. </param>
            <returns> True if the database provider has been selected, otherwise false. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices">
            <summary>
                <para>
                    The base set of services required by EF for a database provider to function.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.#ctor(System.IServiceProvider)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices" /> class.
            </summary>
            <param name="services"> The service provider to resolve services from. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.InvariantName">
            <summary>
                The unique name used to identify the database provider. This should be the same as the NuGet package name
                for the providers runtime.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.Services">
            <summary>
                Gets the service provider to resolve services from.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.GetService``1">
            <summary>
                Resolves a required service from <see cref="P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.Services" />.
            </summary>
            <typeparam name="TService"> The service to be resolved. </typeparam>
            <returns> The resolved service. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ConventionSetBuilder">
            <summary>
                The convention set builder for the database provider. By default this returns null, meaning the
                default <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.CoreConventionSetBuilder" /> will be used.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ValueGeneratorSelector">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorSelector" /> for the database provider. By default, EF will register a default implementation
                (<see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGeneratorSelector" />) which provides basic functionality but can be
                overridden if needed.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ModelValidator">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Internal.IModelValidator" /> for the database provider. By default, EF will register a default implementation
                (<see cref="T:Microsoft.EntityFrameworkCore.Internal.LoggingModelValidator" />) which provides basic functionality but can be
                overridden if needed.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.CompiledQueryCacheKeyGenerator">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.ICompiledQueryCacheKeyGenerator" /> for the database provider. By default, EF will register a default
                implementation
                (<see cref="T:Microsoft.EntityFrameworkCore.Query.CompiledQueryCacheKeyGenerator" />) which provides basic functionality but can be
                overridden if needed.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ExpressionPrinter">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter" /> for the database provider. By default, EF will register a default implementation
                (<see cref="T:Microsoft.EntityFrameworkCore.Query.Internal.ExpressionPrinter" />) which provides basic functionality but can be
                overridden if needed.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ResultOperatorHandler">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler" /> for the database provider. By default, EF will register a default implementation
                (<see cref="T:Microsoft.EntityFrameworkCore.Query.ResultOperatorHandler" />) which provides basic functionality but can be
                overridden if needed.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.QueryCompilationContextFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory" /> for the database provider. By default, EF will register a default
                implementation
                (<see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGeneratorSelector" />) which provides basic functionality but can be
                overridden if needed.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ProjectionExpressionVisitorFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory" /> for the database provider. By default, EF will register a default
                implementation
                (<see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.Internal.ProjectionExpressionVisitorFactory" />) which provides basic functionality but can be
                overridden if needed.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.Database">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IDatabase" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.TransactionManager">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.Creator">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ModelSource">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IModelSource" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ValueGeneratorCache">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.QueryContextFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.IQueryContextFactory" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.EntityQueryableExpressionVisitorFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.EntityQueryModelVisitorFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.DatabaseProviderServices.ExecutionStrategyFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory" /> for the database provider.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.ExecutionResult`1">
            <summary>
                Represents the execution state of an operation.
            </summary>
            <typeparam name="TResult">The type of the result.</typeparam>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ExecutionResult`1.#ctor(System.Boolean,`0)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Storage.ExecutionResult`1" />.
            </summary>
            <param name="successful"><c>true</c> if the operation succeeded.</param>
            <param name="result">The result of the operation if successful.</param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ExecutionResult`1.IsSuccessful">
            <summary>
                Indicates whether the operation succeeded.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ExecutionResult`1.Result">
            <summary>
                The result of the operation if successful.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy">
            <summary>
                The base class for <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" /> implementations.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.DefaultMaxRetryCount">
            <summary>
                The default number of retry attempts.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.DefaultMaxDelay">
            <summary>
                The default maximum time delay between retries, must be nonnegative.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.DefaultRandomFactor">
            <summary>
                The default maximum random factor, must not be lesser than 1.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.DefaultExponentialBase">
            <summary>
                The default base for the exponential function used to compute the delay between retries, must be positive.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy._defaultCoefficient">
            <summary>
                The default coefficient for the exponential function used to compute the delay between retries, must be nonnegative.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.#ctor(Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyContext,System.Int32,System.TimeSpan)">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy" />.
            </summary>
            <param name="context"> The required dependencies. </param>
            <param name="maxRetryCount"> The maximum number of retry attempts. </param>
            <param name="maxRetryDelay"> The maximum delay in milliseconds between retries. </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExceptionsEncountered">
            <summary>
                The list of exceptions that caused the operation to be retried so far.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Random">
            <summary>
                A pseudo-random number generater that can be used to vary the delay between retries.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.MaxRetryCount">
            <summary>
                The maximum number of retry attempts.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.MaxRetryDelay">
            <summary>
                The maximum delay in milliseconds between retries.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Context">
            <summary>
                The context on which the operations will be invoked.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Logger">
            <summary>
                The logger for this <see cref="T:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy" />.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Suspended">
            <summary>
                Indicates whether the strategy is suspended. The strategy is typically suspending while executing to avoid
                recursive execution from nested operations.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.RetriesOnFailure">
            <summary>
                Indicates whether this <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" /> might retry the execution after a failure.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.Execute``2(System.Func{``0,``1},System.Func{``0,Microsoft.EntityFrameworkCore.Storage.ExecutionResult{``1}},``0)">
            <summary>
                Executes the specified operation and returns the result.
            </summary>
            <param name="operation">
                A delegate representing an executable operation that returns the result of type <typeparamref name="TResult" />.
            </param>
            <param name="verifySucceeded"> A delegate that tests whether the operation succeeded even though an exception was thrown. </param>
            <param name="state"> The state that will be passed to the operation. </param>
            <typeparam name="TState"> The type of the state. </typeparam>
            <typeparam name="TResult"> The return type of <paramref name="operation" />. </typeparam>
            <returns> The result from the operation. </returns>
            <exception cref="T:Microsoft.EntityFrameworkCore.Storage.RetryLimitExceededException">
                Thrown if the operation has not succeeded after the configured number of retries.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteAsync``2(System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.ExecutionResult{``1}}},``0,System.Threading.CancellationToken)">
            <summary>
                Executes the specified asynchronous operation and returns the result.
            </summary>
            <param name="operation">
                A function that returns a started task of type <typeparamref name="TResult" />.
            </param>
            <param name="verifySucceeded"> A delegate that tests whether the operation succeeded even though an exception was thrown. </param>
            <param name="cancellationToken">
                A cancellation token used to cancel the retry operation, but not operations that are already in flight
                or that already completed successfully.
            </param>
            <param name="state"> The state that will be passed to the operation. </param>
            <typeparam name="TState"> The type of the state. </typeparam>
            <typeparam name="TResult"> The result type of the <see cref="T:System.Threading.Tasks.Task`1" /> returned by <paramref name="operation" />. </typeparam>
            <returns>
                A task that will run to completion if the original task completes successfully (either the
                first time or after retrying transient failures). If the task fails with a non-transient error or
                the retry limit is reached, the returned task will become faulted and the exception must be observed.
            </returns>
            <exception cref="T:Microsoft.EntityFrameworkCore.Storage.RetryLimitExceededException">
                Thrown if the operation has not succeeded after the configured number of retries.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteInTransaction``2(System.Func{``0,``1},System.Func{``0,System.Boolean},``0)">
            <summary>
                Executes the specified operation in a transaction and returns the result after commiting it.
            </summary>
            <param name="operation">
                A delegate representing an executable operation that returns the result of type <typeparamref name="TResult" />.
            </param>
            <param name="verifySucceeded">
                A delegate that tests whether the operation succeeded even though an exception was thrown when the
                transaction was being committed.
            </param>
            <param name="state"> The state that will be passed to the operation. </param>
            <typeparam name="TState"> The type of the state. </typeparam>
            <typeparam name="TResult"> The return type of <paramref name="operation" />. </typeparam>
            <returns> The result from the operation. </returns>
            <exception cref="T:Microsoft.EntityFrameworkCore.Storage.RetryLimitExceededException">
                Thrown if the operation has not succeeded after the configured number of retries.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ExecuteInTransactionAsync``2(System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Boolean}},``0,System.Threading.CancellationToken)">
            <summary>
                Executes the specified asynchronous operation and returns the result.
            </summary>
            <param name="operation">
                A function that returns a started task of type <typeparamref name="TResult" />.
            </param>
            <param name="verifySucceeded">
                A delegate that tests whether the operation succeeded even though an exception was thrown when the
                transaction was being committed.
            </param>
            <param name="cancellationToken">
                A cancellation token used to cancel the retry operation, but not operations that are already in flight
                or that already completed successfully.
            </param>
            <param name="state"> The state that will be passed to the operation. </param>
            <typeparam name="TState"> The type of the state. </typeparam>
            <typeparam name="TResult"> The result type of the <see cref="T:System.Threading.Tasks.Task`1" /> returned by <paramref name="operation" />. </typeparam>
            <returns>
                A task that will run to completion if the original task completes successfully (either the
                first time or after retrying transient failures). If the task fails with a non-transient error or
                the retry limit is reached, the returned task will become faulted and the exception must be observed.
            </returns>
            <exception cref="T:Microsoft.EntityFrameworkCore.Storage.RetryLimitExceededException">
                Thrown if the operation has not succeeded after the configured number of retries.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.OnFirstExecution">
            <summary>
                Method called before the first operation execution
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.OnRetry">
            <summary>
                Method called before retrying the operation execution
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.GetNextDelay(System.Exception)">
            <summary>
                Determines whether the operation should be retried and the delay before the next attempt.
            </summary>
            <param name="lastException"> The exception thrown during the last execution attempt. </param>
            <returns>
                Returns the delay indicating how long to wait for before the next execution attempt if the operation should be retried;
                <c>null</c> otherwise
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ShouldVerifySuccessOn(System.Exception)">
            <summary>
                Determines whether the specified exception could be thrown after a successful execution.
            </summary>
            <param name="exception"> The exception object to be verified. </param>
            <returns>
                <c>true</c> if the specified exception could be thrown after a successful execution, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.ShouldRetryOn(System.Exception)">
            <summary>
                Determines whether the specified exception represents a transient failure that can be compensated by a retry.
            </summary>
            <param name="exception"> The exception object to be verified. </param>
            <returns>
                <c>true</c> if the specified exception is considered as transient, otherwise <c>false</c>.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy.CallOnWrappedException``1(System.Exception,System.Func{System.Exception,``0})">
            <summary>
                Recursively gets InnerException from <paramref name="exception" /> as long as it is an
                exception created by Entity Framework and calls <paramref name="exceptionHandler" /> on the innermost one.
            </summary>
            <param name="exception"> The exception to be unwrapped. </param>
            <param name="exceptionHandler"> A delegate that will be called with the unwrapped exception. </param>
            <typeparam name="TResult"> The return type of <paramref name="exceptionHandler" />. </typeparam>
            <returns>
                The result from <paramref name="exceptionHandler" />.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyContext">
            <summary>
                A class that provides dependencies for <see cref="T:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy" />
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyContext.#ctor(Microsoft.EntityFrameworkCore.DbContext,Microsoft.Extensions.Logging.ILogger{Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy})">
            <summary>
                Creates a new instance of <see cref="T:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyContext" />.
            </summary>
            <param name="context">The context on which the operations will be invoked.</param>
            <param name="logger">The logger to be used.</param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyContext.Context">
            <summary>
                The context on which the operations will be invoked.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategyContext.Logger">
            <summary>
                The logger for the <see cref="T:Microsoft.EntityFrameworkCore.Storage.ExecutionStrategy" />.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IDatabase">
            <summary>
                <para>
                    The main interaction point between a context and the database provider.
                </para>
                <para>
                    This interface is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IDatabase.SaveChanges(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry})">
            <summary>
                Persists changes from the supplied entries to the database.
            </summary>
            <param name="entries"> Entries representing the changes to be persisted. </param>
            <returns> The number of state entries persisted to the database. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IDatabase.SaveChangesAsync(System.Collections.Generic.IReadOnlyList{Microsoft.EntityFrameworkCore.Update.IUpdateEntry},System.Threading.CancellationToken)">
            <summary>
                Asynchronously persists changes from the supplied entries to the database.
            </summary>
            <param name="entries"> Entries representing the changes to be persisted. </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous save operation. The task result contains the
                number of entries persisted to the database.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IDatabase.CompileQuery``1(Remotion.Linq.QueryModel)">
            <summary>
                Translates a query model into a function that can be executed to get query results from the database.
            </summary>
            <typeparam name="TResult"> The type of results returned by the query. </typeparam>
            <param name="queryModel"> An object model representing the query to be executed. </param>
            <returns> A function that will execute the query. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IDatabase.CompileAsyncQuery``1(Remotion.Linq.QueryModel)">
            <summary>
                Translates a query model into a function that can be executed to asynchronously get query results from the database.
            </summary>
            <typeparam name="TResult"> The type of results returned by the query. </typeparam>
            <param name="queryModel"> An object model representing the query to be executed. </param>
            <returns> A function that will asynchronously execute the query. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator">
            <summary>
                <para>
                    Creates and deletes databases for a given database provider.
                </para>
                <para>
                    This interface is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureDeleted">
            <summary>
                <para>
                    Ensures that the database for the context does not exist. If it does not exist, no action is taken. If it does
                    exist then the database is deleted.
                </para>
                <para>
                    Warning: The entire database is deleted an no effort is made to remove just the database objects that are used by
                    the model for this context.
                </para>
            </summary>
            <returns> True if the database is deleted, false if it did not exist. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureDeletedAsync(System.Threading.CancellationToken)">
            <summary>
                <para>
                    Asynchronously ensures that the database for the context does not exist. If it does not exist, no action is taken. If it does
                    exist then the database is deleted.
                </para>
                <para>
                    Warning: The entire database is deleted an no effort is made to remove just the database objects that are used by
                    the model for this context.
                </para>
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous save operation. The task result contains true if the database is deleted,
                false if it did not exist.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureCreated">
            <summary>
                Ensures that the database for the context exists. If it exists, no action is taken. If it does not
                exist then the database and all its schema are created. If the database exists, then no effort is made
                to ensure it is compatible with the model for this context.
            </summary>
            <returns> True if the database is created, false if it already existed. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator.EnsureCreatedAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously ensures that the database for the context exists. If it exists, no action is taken. If it does not
                exist then the database and all its schema are created. If the database exists, then no effort is made
                to ensure it is compatible with the model for this context.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous save operation. The task result contains true if the database is created,
                false if it already existed.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider">
            <summary>
                <para>
                    The primary point where a database provider can tell EF that it has been selected for the current context
                    and provide the services required for it to function.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider.GetProviderServices(System.IServiceProvider)">
            <summary>
                Gets the base set of services required by EF for the database provider to function.
            </summary>
            <param name="serviceProvider"> The service provider to resolve services from. </param>
            <returns> The services for this database provider. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IDatabaseProvider.IsConfigured(Microsoft.EntityFrameworkCore.Infrastructure.IDbContextOptions)">
            <summary>
                Gets a value indicating whether this database provider has been selected for a given context.
            </summary>
            <param name="options"> The options for the context. </param>
            <returns> True if the database provider has been selected, otherwise false. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices">
            <summary>
                <para>
                    The base set of services required by EF for a database provider to function.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.InvariantName">
            <summary>
                The unique name used to identify the database provider. This should be the same as the NuGet package name
                for the providers runtime.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Database">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IDatabase" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.TransactionManager">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.Creator">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IDatabaseCreator" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorSelector">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorSelector" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ConventionSetBuilder">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Metadata.Conventions.Internal.IConventionSetBuilder" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelSource">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Infrastructure.IModelSource" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ModelValidator">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Internal.IModelValidator" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ValueGeneratorCache">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryContextFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.IQueryContextFactory" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.QueryCompilationContextFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.IQueryCompilationContextFactory" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryModelVisitorFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.IEntityQueryModelVisitorFactory" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.CompiledQueryCacheKeyGenerator">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.ICompiledQueryCacheKeyGenerator" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExpressionPrinter">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.Internal.IExpressionPrinter" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ResultOperatorHandler">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.IResultOperatorHandler" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.EntityQueryableExpressionVisitorFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IEntityQueryableExpressionVisitorFactory" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ProjectionExpressionVisitorFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Query.ExpressionVisitors.IProjectionExpressionVisitorFactory" /> for the database provider.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IDatabaseProviderServices.ExecutionStrategyFactory">
            <summary>
                Gets the <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory" /> for the database provider.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction">
            <summary>
                <para>
                    A transaction against the database.
                </para>
                <para>
                    Instances of this class are typically obtained from <see cref="M:Microsoft.EntityFrameworkCore.Infrastructure.DatabaseFacade.BeginTransaction" /> and it is not designed
                    to be directly constructed in your application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Commit">
            <summary>
                Commits all changes made to the database in the current transaction.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransaction.Rollback">
            <summary>
                Discards all changes made to the database in the current transaction.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager">
            <summary>
                <para>
                    Creates and manages the current transaction.
                </para>
                <para>
                    This interface is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransaction">
            <summary>
                Begins a new transaction.
            </summary>
            <returns> The newly created transaction. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.BeginTransactionAsync(System.Threading.CancellationToken)">
            <summary>
                Asynchronously begins a new transaction.
            </summary>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns>
                A task that represents the asynchronous operation. The task result contains the newly created transaction.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CommitTransaction">
            <summary>
                Commits all changes made to the database in the current transaction.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.RollbackTransaction">
            <summary>
                Discards all changes made to the database in the current transaction.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IDbContextTransactionManager.CurrentTransaction">
            <summary>
                Gets the current transaction.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy">
            <summary>
                A strategy that is used to execute a command or query against the database, possibly with logic to retry when a failure occurs.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy.RetriesOnFailure">
            <summary>
                Indicates whether this <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" /> might retry the execution after a failure.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy.Execute``2(System.Func{``0,``1},System.Func{``0,Microsoft.EntityFrameworkCore.Storage.ExecutionResult{``1}},``0)">
            <summary>
                Executes the specified operation and returns the result.
            </summary>
            <param name="operation">
                A delegate representing an executable operation that returns the result of type <typeparamref name="TResult" />.
            </param>
            <param name="verifySucceeded"> A delegate that tests whether the operation succeeded even though an exception was thrown. </param>
            <param name="state"> The state that will be passed to the operation. </param>
            <typeparam name="TState"> The type of the state. </typeparam>
            <typeparam name="TResult"> The return type of <paramref name="operation" />. </typeparam>
            <returns> The result from the operation. </returns>
            <exception cref="T:Microsoft.EntityFrameworkCore.Storage.RetryLimitExceededException">
                Thrown if the operation has not succeeded after the configured number of retries.
            </exception>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy.ExecuteAsync``2(System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.ExecutionResult{``1}}},``0,System.Threading.CancellationToken)">
            <summary>
                Executes the specified asynchronous operation and returns the result.
            </summary>
            <param name="operation">
                A function that returns a started task of type <typeparamref name="TResult" />.
            </param>
            <param name="verifySucceeded"> A delegate that tests whether the operation succeeded even though an exception was thrown. </param>
            <param name="cancellationToken">
                A cancellation token used to cancel the retry operation, but not operations that are already in flight
                or that already completed successfully.
            </param>
            <param name="state"> The state that will be passed to the operation. </param>
            <typeparam name="TState"> The type of the state. </typeparam>
            <typeparam name="TResult"> The result type of the <see cref="T:System.Threading.Tasks.Task`1" /> returned by <paramref name="operation" />. </typeparam>
            <returns>
                A task that will run to completion if the original task completes successfully (either the
                first time or after retrying transient failures). If the task fails with a non-transient error or
                the retry limit is reached, the returned task will become faulted and the exception must be observed.
            </returns>
            <exception cref="T:Microsoft.EntityFrameworkCore.Storage.RetryLimitExceededException">
                Thrown if the operation has not succeeded after the configured number of retries.
            </exception>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory">
            <summary>
                Factory for <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" /> instances.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategyFactory.Create">
            <summary>
                Creates a new  <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" />.
            </summary>
            <returns>An instance of <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" />.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.RetryLimitExceededException">
            <summary>
                The exception that is thrown when the action failed more times than the configured limit.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RetryLimitExceededException.#ctor(System.String)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RetryLimitExceededException" /> class with a specified error message.
            </summary>
            <param name="message">The message that describes the error.</param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.RetryLimitExceededException.#ctor(System.String,System.Exception)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.RetryLimitExceededException" /> class.
            </summary>
            <param name="message">The message that describes the error.</param>
            <param name="innerException">The exception that is the cause of the current exception.</param>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.ValueBuffer">
            <summary>
                <para>
                    Represents a set of indexed values. Typically used to represent a row of data returned from a database.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Storage.ValueBuffer.Empty">
            <summary>
                A buffer with no values in it.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ValueBuffer.#ctor(System.Collections.Generic.IList{System.Object})">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueBuffer" /> class.
            </summary>
            <param name="values"> The list of values for this buffer. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ValueBuffer.#ctor(System.Collections.Generic.IList{System.Object},System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueBuffer" /> class.
            </summary>
            <param name="values"> The list of values for this buffer. </param>
            <param name="offset">
                The starting slot in <paramref name="values" /> for this buffer.
            </param>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ValueBuffer.Item(System.Int32)">
            <summary>
                Gets the value at a requested index.
            </summary>
            <param name="index"> The index of the value to get. </param>
            <returns> The value at the requested index. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ValueBuffer.Count">
            <summary>
                Gets the number of values in this buffer.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ValueBuffer.WithOffset(System.Int32)">
            <summary>
                Creates a new buffer with data starting at the given index in the current buffer.
            </summary>
            <param name="offset">
                The slot in the current buffer that will be the starting slot in the new buffer.
            </param>
            <returns> The newly created buffer. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.ValueBuffer.IsEmpty">
            <summary>
                Gets a value indicating whether the value buffer is empty.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ValueBuffer.Equals(System.Object)">
            <summary>
                Determines if this value buffer is equivalent to a given object (i.e. if they are both value buffers and contain the same values).
            </summary>
            <param name="obj">
                The object to compare this value buffer to.
            </param>
            <returns>
                True if the object is a <see cref="T:Microsoft.EntityFrameworkCore.Storage.ValueBuffer" /> and contains the same values, otherwise false.
            </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.ValueBuffer.GetHashCode">
            <summary>
                Gets the hash code for the value buffer.
            </summary>
            <returns>
                The hash code for the value buffer.
            </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.ExecutionStrategyFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.ExecutionStrategyFactory.Create">
            <summary>
                Creates a new  <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" />.
            </summary>
            <returns>An instance of <see cref="T:Microsoft.EntityFrameworkCore.Storage.IExecutionStrategy" />.</returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Storage.Internal.NoopExecutionStrategy">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="F:Microsoft.EntityFrameworkCore.Storage.Internal.NoopExecutionStrategy.Instance">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Storage.Internal.NoopExecutionStrategy.RetriesOnFailure">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.NoopExecutionStrategy.Execute``2(System.Func{``0,``1},System.Func{``0,Microsoft.EntityFrameworkCore.Storage.ExecutionResult{``1}},``0)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Storage.Internal.NoopExecutionStrategy.ExecuteAsync``2(System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{``1}},System.Func{``0,System.Threading.CancellationToken,System.Threading.Tasks.Task{Microsoft.EntityFrameworkCore.Storage.ExecutionResult{``1}}},``0,System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.Update.IUpdateEntry">
            <summary>
                <para>
                    The information passed to a database provider to save changes to an entity to the database.
                </para>
                <para>
                    This interface is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.EntityType">
            <summary>
                The type of entity to be saved to the database.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.EntityState">
            <summary>
                The state of the entity to be saved.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.IsModified(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets a value indicating if the specified property is modified. If true, the current value assigned
                to the property should be saved to the database.
            </summary>
            <param name="property"> The property to be checked. </param>
            <returns> True if the property is modified, otherwise false. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.HasTemporaryValue(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets a value indicating if the specified property has a temporary value.
            </summary>
            <param name="property"> The property to be checked. </param>
            <returns> True if the property has a temporary value, otherwise false. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.IsStoreGenerated(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets a value indicating if the specified property should have a value generated by the database.
            </summary>
            <param name="property"> The property to be checked. </param>
            <returns> True if the property should have a value generated by the database, otherwise false. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetCurrentValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                Gets the value assigned to the property.
            </summary>
            <param name="propertyBase"> The property to get the value for. </param>
            <returns> The value for the property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetOriginalValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                Gets the value assigned to the property when it was retrieved from the database.
            </summary>
            <param name="propertyBase"> The property to get the value for. </param>
            <returns> The value for the property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetCurrentValue``1(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase)">
            <summary>
                Gets the value assigned to the property.
            </summary>
            <param name="propertyBase"> The property to get the value for. </param>
            <typeparam name="TProperty"> The type of the property. </typeparam>
            <returns> The value for the property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.GetOriginalValue``1(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Gets the value assigned to the property when it was retrieved from the database.
            </summary>
            <param name="property"> The property to get the value for. </param>
            <typeparam name="TProperty"> The type of the property. </typeparam>
            <returns> The value for the property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.SetCurrentValue(Microsoft.EntityFrameworkCore.Metadata.IPropertyBase,System.Object)">
            <summary>
                Gets the value assigned to the property.
            </summary>
            <param name="propertyBase"> The property to set the value for. </param>
            <param name="value"> The value to set. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.Update.IUpdateEntry.ToEntityEntry">
            <summary>
                Gets an <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" /> for the entity being saved. <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" /> is an API optimized for
                application developers and <see cref="T:Microsoft.EntityFrameworkCore.Update.IUpdateEntry" /> is optimized for database providers, but there may be instances
                where a database provider wants to access information from <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" />.
            </summary>
            <returns> An <see cref="T:Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry" /> for this entity. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.GuidValueGenerator">
            <summary>
                Generates <see cref="T:System.Guid" /> values using <see cref="M:System.Guid.NewGuid" />.
                The generated values are non-temporary, meaning they will be saved to the database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.GuidValueGenerator.Next(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                Gets a value to be assigned to a property.
            </summary>
            <para>The change tracking entry of the entity for which the value is being generated.</para>
            <returns> The value to be assigned to a property. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ValueGeneration.GuidValueGenerator.GeneratesTemporaryValues">
            <summary>
                Gets a value indicating whether the values generated are temporary or permanent. This implementation
                always returns false, meaning the generated values will be saved to the database.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGenerator`1">
            <summary>
                <para>
                    Acts as a <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator" />  by requesting a block of values from the
                    underlying database and returning them one by one. Will ask the underlying
                    database for another block when the current block is exhausted.
                </para>
                <para>
                    A block is represented by a low value fetched from the database, and then a block size
                    that indicates how many sequential values can be used, starting from the low value, before
                    a new low value must be fetched from the database.
                </para>
            </summary>
            <typeparam name="TValue"> The type of values that are generated. </typeparam>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGenerator`1.#ctor(Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGeneratorState)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGenerator`1" /> class.
            </summary>
            <param name="generatorState"> The state used to keep track of which value to return next. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGenerator`1.Next(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                Gets a value to be assigned to a property.
            </summary>
            <para>The change tracking entry of the entity for which the value is being generated.</para>
            <returns> The value to be assigned to a property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGenerator`1.NextAsync(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry,System.Threading.CancellationToken)">
            <summary>
                Gets a value to be assigned to a property.
            </summary>
            <para>The change tracking entry of the entity for which the value is being generated.</para>
            <returns> The value to be assigned to a property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGenerator`1.GetNewLowValue">
            <summary>
                Gets the low value for the next block of values to be used.
            </summary>
            <returns> The low value for the next block of values to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGenerator`1.GetNewLowValueAsync(System.Threading.CancellationToken)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGeneratorState">
            <summary>
                The thread safe state used by <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGenerator`1" />.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGeneratorState.#ctor(System.Int32)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGeneratorState" /> class.
            </summary>
            <param name="blockSize">
                The number of sequential values that can be used, starting from the low value, before
                a new low value must be fetched from the database.
            </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGeneratorState.Next``1(System.Func{System.Int64})">
            <summary>
                Gets a value to be assigned to a property.
            </summary>
            <typeparam name="TValue"> The type of values being generated. </typeparam>
            <param name="getNewLowValue">
                A function to get the next low value if needed.
            </param>
            <returns> The value to be assigned to a property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.HiLoValueGeneratorState.NextAsync``1(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task{System.Int64}},System.Threading.CancellationToken)">
            <summary>
                Gets a value to be assigned to a property.
            </summary>
            <typeparam name="TValue"> The type of values being generated. </typeparam>
            <param name="getNewLowValue">
                A function to get the next low value if needed.
            </param>
            <param name="cancellationToken">A <see cref="T:System.Threading.CancellationToken" /> to observe while waiting for the task to complete.</param>
            <returns> The value to be assigned to a property. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache">
            <summary>
                <para>
                    Keeps a cache of value generators for properties.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache.GetOrAdd(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator})">
            <summary>
                Gets the existing value generator from the cache, or creates a new one if one is not present in
                the cache.
            </summary>
            <param name="property"> The property to get the value generator for. </param>
            <param name="entityType">
                The entity type that the value generator will be used for. When called on inherited properties on derived entity types,
                this entity type may be different from the declared entity type on <paramref name="property" />
            </param>
            <param name="factory"> Factory to create a new value generator if one is not present in the cache. </param>
            <returns> The existing or newly created value generator. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorSelector">
            <summary>
                <para>
                    Selects value generators to be used to generate values for properties of entities.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorSelector.Select(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                Selects the appropriate value generator for a given property.
            </summary>
            <param name="property"> The property to get the value generator for. </param>
            <param name="entityType">
                The entity type that the value generator will be used for. When called on inherited properties on derived entity types,
                this entity type may be different from the declared entity type on <paramref name="property" />
            </param>
            <returns> The value generator to be used. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.SequentialGuidValueGenerator">
            <summary>
                Generates sequential <see cref="T:System.Guid" /> values using the same algorithm as NEWSEQUENTIALID()
                in Microsoft SQL Server. This is useful when entities are being saved to a database where sequential
                GUIDs will provide a performance benefit. The generated values are non-temporary, meaning they will
                be saved to the database.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.SequentialGuidValueGenerator.Next(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                Gets a value to be assigned to a property.
            </summary>
            <para>The change tracking entry of the entity for which the value is being generated.</para>
            <returns> The value to be assigned to a property. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ValueGeneration.SequentialGuidValueGenerator.GeneratesTemporaryValues">
            <summary>
                Gets a value indicating whether the values generated are temporary or permanent. This implementation
                always returns false, meaning the generated values will be saved to the database.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.TemporaryGuidValueGenerator">
            <summary>
                Generates <see cref="T:System.Guid" /> values using <see cref="M:System.Guid.NewGuid" />.
                The generated values are temporary, meaning they will be replaced by database
                generated values when the entity is saved.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ValueGeneration.TemporaryGuidValueGenerator.GeneratesTemporaryValues">
            <summary>
                Gets a value indicating whether the values generated are temporary or permanent. This implementation
                always returns true, meaning the generated values will be replaced by database generated values when
                the entity is saved
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator">
            <summary>
                Generates values for properties when an entity is added to a context.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator.Next(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                Gets a value to be assigned to a property.
            </summary>
            <para>The change tracking entry of the entity for which the value is being generated.</para>
            <returns> The value to be assigned to a property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator.NextValue(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                Template method to be overridden by implementations to perform value generation.
            </summary>
            <para>The change tracking entry of the entity for which the value is being generated.</para>
            <returns> The generated value. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator.NextAsync(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry,System.Threading.CancellationToken)">
            <summary>
                Gets a value to be assigned to a property.
            </summary>
            <para>The change tracking entry of the entity for which the value is being generated.</para>
            <returns> The value to be assigned to a property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator.NextValueAsync(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry,System.Threading.CancellationToken)">
            <summary>
                Template method to be overridden by implementations to perform value generation.
            </summary>
            <para>The change tracking entry of the entity for which the value is being generated.</para>
            <returns> The generated value. </returns>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator.GeneratesTemporaryValues">
            <summary>
                <para>
                    Gets a value indicating whether the values generated are temporary (i.e they should be replaced
                    by database generated values when the entity is saved) or are permanent (i.e. the generated values
                    should be saved to the database).
                </para>
                <para>
                    An example of temporary value generation is generating negative numbers for an integer primary key
                    that are then replaced by positive numbers generated by the database when the entity is saved. An
                    example of permanent value generation are client-generated values for a <see cref="T:System.Guid" /> primary
                    key which are saved to the database.
                </para>
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGeneratorCache">
            <summary>
                <para>
                    Keeps a cache of value generators for properties.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGeneratorCache.GetOrAdd(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,System.Func{Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType,Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator})">
            <summary>
                Gets the existing value generator from the cache, or creates a new one if one is not present in
                the cache.
            </summary>
            <param name="property"> The property to get the value generator for. </param>
            <param name="entityType">
                The entity type that the value generator will be used for. When called on inherited properties on derived entity types,
                this entity type may be different from the declared entity type on <paramref name="property" />
            </param>
            <param name="factory"> Factory to create a new value generator if one is not present in the cache. </param>
            <returns> The existing or newly created value generator. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGeneratorFactory">
            <summary>
                Base class for factories that create value generators.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGeneratorFactory.Create(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                Creates a new value generator.
            </summary>
            <param name="property"> The property to create the value generator for. </param>
            <returns> The newly created value generator. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGeneratorSelector">
            <summary>
                <para>
                    Selects value generators to be used to generate values for properties of entities.
                </para>
                <para>
                    This type is typically used by database providers (and other extensions). It is generally
                    not used in application code.
                </para>
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGeneratorSelector.Cache">
            <summary>
                The cache being used to store value generator instances.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGeneratorSelector.#ctor(Microsoft.EntityFrameworkCore.ValueGeneration.IValueGeneratorCache)">
            <summary>
                Initializes a new instance of the <see cref="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGeneratorSelector" /> class.
            </summary>
            <param name="cache"> The cache to be used to store value generator instances. </param>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGeneratorSelector.Select(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                Selects the appropriate value generator for a given property.
            </summary>
            <param name="property"> The property to get the value generator for. </param>
            <param name="entityType">
                The entity type that the value generator will be used for. When called on inherited properties on derived entity types,
                this entity type may be different from the declared entity type on <paramref name="property" />
            </param>
            <returns> The value generator to be used. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGeneratorSelector.Create(Microsoft.EntityFrameworkCore.Metadata.IProperty,Microsoft.EntityFrameworkCore.Metadata.IEntityType)">
            <summary>
                Creates a new value generator for the given property.
            </summary>
            <param name="property"> The property to get the value generator for. </param>
            <param name="entityType">
                The entity type that the value generator will be used for. When called on inherited properties on derived entity types,
                this entity type may be different from the declared entity type on <paramref name="property" />
            </param>
            <returns> The newly created value generator. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator`1">
            <summary>
                Generates values for properties when an entity is added to a context.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator`1.Next(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                Template method to be overridden by implementations to perform value generation.
            </summary>
            <para>The change tracking entry of the entity for which the value is being generated.</para>
            <returns> The generated value. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator`1.NextAsync(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry,System.Threading.CancellationToken)">
            <summary>
                Template method to be overridden by implementations to perform value generation.
            </summary>
            <para>The change tracking entry of the entity for which the value is being generated.</para>
            <returns> The generated value. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator`1.NextValue(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                Gets a value to be assigned to a property.
            </summary>
            <para>The change tracking entry of the entity for which the value is being generated.</para>
            <returns> The value to be assigned to a property. </returns>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.ValueGenerator`1.NextValueAsync(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry,System.Threading.CancellationToken)">
            <summary>
                Gets a value to be assigned to a property.
            </summary>
            <para>The change tracking entry of the entity for which the value is being generated.</para>
            <returns> The value to be assigned to a property. </returns>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.BinaryValueGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.BinaryValueGenerator.#ctor(System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.BinaryValueGenerator.GeneratesTemporaryValues">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.BinaryValueGenerator.Next(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.StringValueGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.StringValueGenerator.#ctor(System.Boolean)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.StringValueGenerator.GeneratesTemporaryValues">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.StringValueGenerator.Next(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryByteValueGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryByteValueGenerator.Next(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryCharValueGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryCharValueGenerator.Next(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryDateTimeOffsetValueGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryDateTimeOffsetValueGenerator.Next(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryDateTimeOffsetValueGenerator.GeneratesTemporaryValues">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryDateTimeValueGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryDateTimeValueGenerator.Next(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryDateTimeValueGenerator.GeneratesTemporaryValues">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryDecimalValueGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryDecimalValueGenerator.Next(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryDoubleValueGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryDoubleValueGenerator.Next(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryFloatValueGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryFloatValueGenerator.Next(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryIntValueGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryIntValueGenerator.Next(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryLongValueGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryLongValueGenerator.Next(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryNumberValueGenerator`1">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="P:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryNumberValueGenerator`1.GeneratesTemporaryValues">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryNumberValueGeneratorFactory">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryNumberValueGeneratorFactory.Create(Microsoft.EntityFrameworkCore.Metadata.IProperty)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporarySByteValueGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporarySByteValueGenerator.Next(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryShortValueGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryShortValueGenerator.Next(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryUIntValueGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryUIntValueGenerator.Next(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryULongValueGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryULongValueGenerator.Next(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryUShortValueGenerator">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="M:Microsoft.EntityFrameworkCore.ValueGeneration.Internal.TemporaryUShortValueGenerator.Next(Microsoft.EntityFrameworkCore.ChangeTracking.EntityEntry)">
            <summary>
                This API supports the Entity Framework Core infrastructure and is not intended to be used
                directly from your code. This API may change or be removed in future releases.
            </summary>
        </member>
        <member name="T:Microsoft.Extensions.DependencyInjection.EntityFrameworkServiceCollectionExtensions">
            <summary>
                Extension methods for setting up Entity Framework related services in an <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
            </summary>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.EntityFrameworkServiceCollectionExtensions.AddDbContext``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{Microsoft.EntityFrameworkCore.DbContextOptionsBuilder},Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
                Registers the given context as a service in the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
                You use this method when using dependency injection in your application, such as with ASP.NET.
                For more information on setting up dependency injection, see http://go.microsoft.com/fwlink/?LinkId=526890.
            </summary>
            <example>
                <code>
                    public void ConfigureServices(IServiceCollection services) 
                    {
                        var connectionString = "connection string to database";
            
                        services.AddDbContext&lt;MyContext&gt;(options => options.UseSqlServer(connectionString)); 
                    }
                </code>
            </example>
            <typeparam name="TContext"> The type of context to be registered. </typeparam>
            <param name="serviceCollection"> The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add services to. </param>
            <param name="optionsAction">
                <para>
                    An optional action to configure the <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions" /> for the context. This provides an
                    alternative to performing configuration of the context by overriding the
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> method in your derived context.
                </para>
                <para>
                    If an action is supplied here, the <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> method will still be run if it has
                    been overridden on the derived context. <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> configuration will be applied
                    in addition to configuration performed here.
                </para>
                <para>
                    In order for the options to be passed into your context, you need to expose a constructor on your context that takes
                    <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions`1" /> and passes it to the base constructor of <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.
                </para>
            </param>
            <param name="contextLifetime"> The lifetime with which to register the DbContext service in the container. </param>
            <returns>
                The same service collection so that multiple calls can be chained.
            </returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.EntityFrameworkServiceCollectionExtensions.AddDbContext``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
                Registers the given context as a service in the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
                You use this method when using dependency injection in your application, such as with ASP.NET.
                For more information on setting up dependency injection, see http://go.microsoft.com/fwlink/?LinkId=526890.
            </summary>
            <example>
                <code>
                    public void ConfigureServices(IServiceCollection services) 
                    {
                        var connectionString = "connection string to database";
            
                        services.AddDbContext&lt;MyContext&gt;(ServiceLifetime.Scoped); 
                    }
                </code>
            </example>
            <typeparam name="TContext"> The type of context to be registered. </typeparam>
            <param name="serviceCollection"> The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add services to. </param>
            <param name="contextLifetime"> The lifetime with which to register the DbContext service in the container. </param>
            <returns>
                The same service collection so that multiple calls can be chained.
            </returns>
        </member>
        <member name="M:Microsoft.Extensions.DependencyInjection.EntityFrameworkServiceCollectionExtensions.AddDbContext``1(Microsoft.Extensions.DependencyInjection.IServiceCollection,System.Action{System.IServiceProvider,Microsoft.EntityFrameworkCore.DbContextOptionsBuilder},Microsoft.Extensions.DependencyInjection.ServiceLifetime)">
            <summary>
                <para>
                    Registers the given context as a service in the <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" />.
                    You use this method when using dependency injection in your application, such as with ASP.NET.
                    For more information on setting up dependency injection, see http://go.microsoft.com/fwlink/?LinkId=526890.
                </para>
                <para>
                    This overload has an <paramref name="optionsAction" /> that provides the applications <see cref="T:System.IServiceProvider" />.
                    This is useful if you want to setup Entity Framework to resolve its internal services from the primary application service
                    provider.
                    By default, we recommend using the other overload, which allows Entity Framework to create and maintain its own
                    <see cref="T:System.IServiceProvider" />
                    for internal Entity Framework services.
                </para>
            </summary>
            <example>
                <code>
                    public void ConfigureServices(IServiceCollection services) 
                    {
                        var connectionString = "connection string to database";
            
                        services
                            .AddEntityFrameworkSqlServer()
                            .AddDbContext&lt;MyContext&gt;((serviceProvider, options) => 
                                options.UseSqlServer(connectionString)
                                       .UseInternalServiceProvider(serviceProvider)); 
                    }
                </code>
            </example>
            <typeparam name="TContext"> The type of context to be registered. </typeparam>
            <param name="serviceCollection"> The <see cref="T:Microsoft.Extensions.DependencyInjection.IServiceCollection" /> to add services to. </param>
            <param name="optionsAction">
                <para>
                    An optional action to configure the <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions" /> for the context. This provides an
                    alternative to performing configuration of the context by overriding the
                    <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> method in your derived context.
                </para>
                <para>
                    If an action is supplied here, the <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> method will still be run if it has
                    been overridden on the derived context. <see cref="M:Microsoft.EntityFrameworkCore.DbContext.OnConfiguring(Microsoft.EntityFrameworkCore.DbContextOptionsBuilder)" /> configuration will be applied
                    in addition to configuration performed here.
                </para>
                <para>
                    In order for the options to be passed into your context, you need to expose a constructor on your context that takes
                    <see cref="T:Microsoft.EntityFrameworkCore.DbContextOptions`1" /> and passes it to the base constructor of <see cref="T:Microsoft.EntityFrameworkCore.DbContext" />.
                </para>
            </param>
            <param name="contextLifetime"> The lifetime with which to register the DbContext service in the container. </param>
            <returns>
                The same service collection so that multiple calls can be chained.
            </returns>
        </member>
    </members>
</doc>
