name: Release

# === Triggers ===
"on":
  create

# === JOBS ===
jobs:

  # === OS Specific Job (runs on each OS) ===
  remote-installer:
    name: Remote Installer
    timeout-minutes: 30
    runs-on: windows-2019
    if: github.event.ref_type == 'tag' && contains(github.event.ref, 'release/remote-installer')
    permissions:
      id-token: write # This is required for requesting the JWT
    env:
      ACTIVESTATE_CI: true
      GITHUB_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      AWS_REGION : "us-east-1"
      AWS_ROLE_SESSION_NAME: "gha-activestate-cli"

    # === OS Specific Steps ===
    steps:
      - # Checkout Code
        name: Checkout code
        uses: actions/checkout@v5

      - # === Install Go ===
        name: Install Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23.x'

      - # === Install State Tool ===
        name: Install State Tool
        uses: ActiveState/setup-state-tool@v1

      - # === Preprocess ===
        name: Preprocess
        shell: bash
        timeout-minutes: 2
        run: VERBOSE=true state run preprocess -v

      - # === Build Remote Installer ===
        name: Build Remote Installer
        shell: bash
        timeout-minutes: 15
        run: |
          GOOS=windows state run build-remote-installer
          state run generate-remote-install-deployment windows amd64

          GOOS=linux state run build-remote-installer
          state run generate-remote-install-deployment linux amd64

          GOOS=darwin state run build-remote-installer
          state run generate-remote-install-deployment darwin amd64

      - # === Configure AWS credentials ==
        name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: ${{ env.AWS_ROLE_SESSION_NAME }}
          aws-region: ${{ env.AWS_REGION }}
          mask-aws-account-id: true

      - # === Deploy ===
        name: Deploy
        shell: bash
        run: state run deploy-remote-installer
