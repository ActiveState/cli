// Code generated by go-swagger; DO NOT EDIT.

package status

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/swag"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListActivitiesParams creates a new ListActivitiesParams object
// with the default values initialized.
func NewListActivitiesParams() *ListActivitiesParams {
	var ()
	return &ListActivitiesParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListActivitiesParamsWithTimeout creates a new ListActivitiesParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListActivitiesParamsWithTimeout(timeout time.Duration) *ListActivitiesParams {
	var ()
	return &ListActivitiesParams{

		timeout: timeout,
	}
}

// NewListActivitiesParamsWithContext creates a new ListActivitiesParams object
// with the default values initialized, and the ability to set a context for a request
func NewListActivitiesParamsWithContext(ctx context.Context) *ListActivitiesParams {
	var ()
	return &ListActivitiesParams{

		Context: ctx,
	}
}

// NewListActivitiesParamsWithHTTPClient creates a new ListActivitiesParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListActivitiesParamsWithHTTPClient(client *http.Client) *ListActivitiesParams {
	var ()
	return &ListActivitiesParams{
		HTTPClient: client,
	}
}

/*ListActivitiesParams contains all the parameters to send to the API endpoint
for the list activities operation typically these are written to a http.Request
*/
type ListActivitiesParams struct {

	/*Limit
	  Limit output to this many rows

	*/
	Limit int64

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list activities params
func (o *ListActivitiesParams) WithTimeout(timeout time.Duration) *ListActivitiesParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list activities params
func (o *ListActivitiesParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list activities params
func (o *ListActivitiesParams) WithContext(ctx context.Context) *ListActivitiesParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list activities params
func (o *ListActivitiesParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list activities params
func (o *ListActivitiesParams) WithHTTPClient(client *http.Client) *ListActivitiesParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list activities params
func (o *ListActivitiesParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLimit adds the limit to the list activities params
func (o *ListActivitiesParams) WithLimit(limit int64) *ListActivitiesParams {
	o.SetLimit(limit)
	return o
}

// SetLimit adds the limit to the list activities params
func (o *ListActivitiesParams) SetLimit(limit int64) {
	o.Limit = limit
}

// WriteToRequest writes these params to a swagger request
func (o *ListActivitiesParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// query param limit
	qrLimit := o.Limit
	qLimit := swag.FormatInt64(qrLimit)
	if qLimit != "" {
		if err := r.SetQueryParam("limit", qLimit); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
