// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListInvitationsParams creates a new ListInvitationsParams object
// with the default values initialized.
func NewListInvitationsParams() *ListInvitationsParams {
	var ()
	return &ListInvitationsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListInvitationsParamsWithTimeout creates a new ListInvitationsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListInvitationsParamsWithTimeout(timeout time.Duration) *ListInvitationsParams {
	var ()
	return &ListInvitationsParams{

		timeout: timeout,
	}
}

// NewListInvitationsParamsWithContext creates a new ListInvitationsParams object
// with the default values initialized, and the ability to set a context for a request
func NewListInvitationsParamsWithContext(ctx context.Context) *ListInvitationsParams {
	var ()
	return &ListInvitationsParams{

		Context: ctx,
	}
}

// NewListInvitationsParamsWithHTTPClient creates a new ListInvitationsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListInvitationsParamsWithHTTPClient(client *http.Client) *ListInvitationsParams {
	var ()
	return &ListInvitationsParams{
		HTTPClient: client,
	}
}

/*ListInvitationsParams contains all the parameters to send to the API endpoint
for the list invitations operation typically these are written to a http.Request
*/
type ListInvitationsParams struct {

	/*Email
	  Email address

	*/
	Email string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list invitations params
func (o *ListInvitationsParams) WithTimeout(timeout time.Duration) *ListInvitationsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list invitations params
func (o *ListInvitationsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list invitations params
func (o *ListInvitationsParams) WithContext(ctx context.Context) *ListInvitationsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list invitations params
func (o *ListInvitationsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list invitations params
func (o *ListInvitationsParams) WithHTTPClient(client *http.Client) *ListInvitationsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list invitations params
func (o *ListInvitationsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithEmail adds the email to the list invitations params
func (o *ListInvitationsParams) WithEmail(email string) *ListInvitationsParams {
	o.SetEmail(email)
	return o
}

// SetEmail adds the email to the list invitations params
func (o *ListInvitationsParams) SetEmail(email string) {
	o.Email = email
}

// WriteToRequest writes these params to a swagger request
func (o *ListInvitationsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param email
	if err := r.SetPathParam("email", o.Email); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
