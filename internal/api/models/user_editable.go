// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UserEditable user editable
// swagger:model UserEditable
type UserEditable struct {

	// e u l a accepted
	EULAAccepted strfmt.DateTime `json:"EULAAccepted,omitempty"`

	// datetime format
	DatetimeFormat string `json:"datetimeFormat,omitempty"`

	// email
	Email string `json:"email,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// password
	Password string `json:"password,omitempty"`

	// timezone
	Timezone string `json:"timezone,omitempty"`

	// username
	Username string `json:"username,omitempty"`
}

// Validate validates this user editable
func (m *UserEditable) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEULAAccepted(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UserEditable) validateEULAAccepted(formats strfmt.Registry) error {

	if swag.IsZero(m.EULAAccepted) { // not required
		return nil
	}

	if err := validate.FormatOf("EULAAccepted", "body", "date-time", m.EULAAccepted.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *UserEditable) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UserEditable) UnmarshalBinary(b []byte) error {
	var res UserEditable
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
