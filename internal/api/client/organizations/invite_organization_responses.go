// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ActiveState/cli/internal/api/models"
)

// InviteOrganizationReader is a Reader for the InviteOrganization structure.
type InviteOrganizationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InviteOrganizationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewInviteOrganizationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewInviteOrganizationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewInviteOrganizationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewInviteOrganizationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewInviteOrganizationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewInviteOrganizationOK creates a InviteOrganizationOK with default headers values
func NewInviteOrganizationOK() *InviteOrganizationOK {
	return &InviteOrganizationOK{}
}

/*InviteOrganizationOK handles this case with default header values.

Invitation Sent
*/
type InviteOrganizationOK struct {
	Payload []*models.Invitation
}

func (o *InviteOrganizationOK) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationName}/invitations/{email}][%d] inviteOrganizationOK  %+v", 200, o.Payload)
}

func (o *InviteOrganizationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteOrganizationBadRequest creates a InviteOrganizationBadRequest with default headers values
func NewInviteOrganizationBadRequest() *InviteOrganizationBadRequest {
	return &InviteOrganizationBadRequest{}
}

/*InviteOrganizationBadRequest handles this case with default header values.

Bad Request
*/
type InviteOrganizationBadRequest struct {
	Payload *models.Message
}

func (o *InviteOrganizationBadRequest) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationName}/invitations/{email}][%d] inviteOrganizationBadRequest  %+v", 400, o.Payload)
}

func (o *InviteOrganizationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteOrganizationForbidden creates a InviteOrganizationForbidden with default headers values
func NewInviteOrganizationForbidden() *InviteOrganizationForbidden {
	return &InviteOrganizationForbidden{}
}

/*InviteOrganizationForbidden handles this case with default header values.

Forbidden
*/
type InviteOrganizationForbidden struct {
	Payload *models.Message
}

func (o *InviteOrganizationForbidden) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationName}/invitations/{email}][%d] inviteOrganizationForbidden  %+v", 403, o.Payload)
}

func (o *InviteOrganizationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteOrganizationNotFound creates a InviteOrganizationNotFound with default headers values
func NewInviteOrganizationNotFound() *InviteOrganizationNotFound {
	return &InviteOrganizationNotFound{}
}

/*InviteOrganizationNotFound handles this case with default header values.

Not Found
*/
type InviteOrganizationNotFound struct {
	Payload *models.Message
}

func (o *InviteOrganizationNotFound) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationName}/invitations/{email}][%d] inviteOrganizationNotFound  %+v", 404, o.Payload)
}

func (o *InviteOrganizationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteOrganizationInternalServerError creates a InviteOrganizationInternalServerError with default headers values
func NewInviteOrganizationInternalServerError() *InviteOrganizationInternalServerError {
	return &InviteOrganizationInternalServerError{}
}

/*InviteOrganizationInternalServerError handles this case with default header values.

Server Error
*/
type InviteOrganizationInternalServerError struct {
	Payload *models.Message
}

func (o *InviteOrganizationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationName}/invitations/{email}][%d] inviteOrganizationInternalServerError  %+v", 500, o.Payload)
}

func (o *InviteOrganizationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
