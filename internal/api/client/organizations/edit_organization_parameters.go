// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ActiveState/cli/internal/api/models"
)

// NewEditOrganizationParams creates a new EditOrganizationParams object
// with the default values initialized.
func NewEditOrganizationParams() *EditOrganizationParams {
	var ()
	return &EditOrganizationParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewEditOrganizationParamsWithTimeout creates a new EditOrganizationParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewEditOrganizationParamsWithTimeout(timeout time.Duration) *EditOrganizationParams {
	var ()
	return &EditOrganizationParams{

		timeout: timeout,
	}
}

// NewEditOrganizationParamsWithContext creates a new EditOrganizationParams object
// with the default values initialized, and the ability to set a context for a request
func NewEditOrganizationParamsWithContext(ctx context.Context) *EditOrganizationParams {
	var ()
	return &EditOrganizationParams{

		Context: ctx,
	}
}

// NewEditOrganizationParamsWithHTTPClient creates a new EditOrganizationParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewEditOrganizationParamsWithHTTPClient(client *http.Client) *EditOrganizationParams {
	var ()
	return &EditOrganizationParams{
		HTTPClient: client,
	}
}

/*EditOrganizationParams contains all the parameters to send to the API endpoint
for the edit organization operation typically these are written to a http.Request
*/
type EditOrganizationParams struct {

	/*Organization*/
	Organization *models.OrganizationEditable
	/*OrganizationName
	  organizationName of desired organization

	*/
	OrganizationName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the edit organization params
func (o *EditOrganizationParams) WithTimeout(timeout time.Duration) *EditOrganizationParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the edit organization params
func (o *EditOrganizationParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the edit organization params
func (o *EditOrganizationParams) WithContext(ctx context.Context) *EditOrganizationParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the edit organization params
func (o *EditOrganizationParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the edit organization params
func (o *EditOrganizationParams) WithHTTPClient(client *http.Client) *EditOrganizationParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the edit organization params
func (o *EditOrganizationParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithOrganization adds the organization to the edit organization params
func (o *EditOrganizationParams) WithOrganization(organization *models.OrganizationEditable) *EditOrganizationParams {
	o.SetOrganization(organization)
	return o
}

// SetOrganization adds the organization to the edit organization params
func (o *EditOrganizationParams) SetOrganization(organization *models.OrganizationEditable) {
	o.Organization = organization
}

// WithOrganizationName adds the organizationName to the edit organization params
func (o *EditOrganizationParams) WithOrganizationName(organizationName string) *EditOrganizationParams {
	o.SetOrganizationName(organizationName)
	return o
}

// SetOrganizationName adds the organizationName to the edit organization params
func (o *EditOrganizationParams) SetOrganizationName(organizationName string) {
	o.OrganizationName = organizationName
}

// WriteToRequest writes these params to a swagger request
func (o *EditOrganizationParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Organization != nil {
		if err := r.SetBodyParam(o.Organization); err != nil {
			return err
		}
	}

	// path param organizationName
	if err := r.SetPathParam("organizationName", o.OrganizationName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
