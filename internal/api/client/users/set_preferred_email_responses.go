// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ActiveState/cli/internal/api/models"
)

// SetPreferredEmailReader is a Reader for the SetPreferredEmail structure.
type SetPreferredEmailReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetPreferredEmailReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewSetPreferredEmailOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewSetPreferredEmailBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewSetPreferredEmailForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewSetPreferredEmailNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewSetPreferredEmailInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewSetPreferredEmailOK creates a SetPreferredEmailOK with default headers values
func NewSetPreferredEmailOK() *SetPreferredEmailOK {
	return &SetPreferredEmailOK{}
}

/*SetPreferredEmailOK handles this case with default header values.

Email updated
*/
type SetPreferredEmailOK struct {
	Payload *models.Email
}

func (o *SetPreferredEmailOK) Error() string {
	return fmt.Sprintf("[PATCH /users/{username}/emails/{email}/preferred][%d] setPreferredEmailOK  %+v", 200, o.Payload)
}

func (o *SetPreferredEmailOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Email)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetPreferredEmailBadRequest creates a SetPreferredEmailBadRequest with default headers values
func NewSetPreferredEmailBadRequest() *SetPreferredEmailBadRequest {
	return &SetPreferredEmailBadRequest{}
}

/*SetPreferredEmailBadRequest handles this case with default header values.

Bad Request
*/
type SetPreferredEmailBadRequest struct {
	Payload *models.Message
}

func (o *SetPreferredEmailBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /users/{username}/emails/{email}/preferred][%d] setPreferredEmailBadRequest  %+v", 400, o.Payload)
}

func (o *SetPreferredEmailBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetPreferredEmailForbidden creates a SetPreferredEmailForbidden with default headers values
func NewSetPreferredEmailForbidden() *SetPreferredEmailForbidden {
	return &SetPreferredEmailForbidden{}
}

/*SetPreferredEmailForbidden handles this case with default header values.

Forbidden
*/
type SetPreferredEmailForbidden struct {
	Payload *models.Message
}

func (o *SetPreferredEmailForbidden) Error() string {
	return fmt.Sprintf("[PATCH /users/{username}/emails/{email}/preferred][%d] setPreferredEmailForbidden  %+v", 403, o.Payload)
}

func (o *SetPreferredEmailForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetPreferredEmailNotFound creates a SetPreferredEmailNotFound with default headers values
func NewSetPreferredEmailNotFound() *SetPreferredEmailNotFound {
	return &SetPreferredEmailNotFound{}
}

/*SetPreferredEmailNotFound handles this case with default header values.

Not Found
*/
type SetPreferredEmailNotFound struct {
	Payload *models.Message
}

func (o *SetPreferredEmailNotFound) Error() string {
	return fmt.Sprintf("[PATCH /users/{username}/emails/{email}/preferred][%d] setPreferredEmailNotFound  %+v", 404, o.Payload)
}

func (o *SetPreferredEmailNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetPreferredEmailInternalServerError creates a SetPreferredEmailInternalServerError with default headers values
func NewSetPreferredEmailInternalServerError() *SetPreferredEmailInternalServerError {
	return &SetPreferredEmailInternalServerError{}
}

/*SetPreferredEmailInternalServerError handles this case with default header values.

Server Error
*/
type SetPreferredEmailInternalServerError struct {
	Payload *models.Message
}

func (o *SetPreferredEmailInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /users/{username}/emails/{email}/preferred][%d] setPreferredEmailInternalServerError  %+v", 500, o.Payload)
}

func (o *SetPreferredEmailInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
