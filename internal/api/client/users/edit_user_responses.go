// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ActiveState/cli/internal/api/models"
)

// EditUserReader is a Reader for the EditUser structure.
type EditUserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EditUserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewEditUserOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewEditUserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewEditUserForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewEditUserNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewEditUserInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewEditUserOK creates a EditUserOK with default headers values
func NewEditUserOK() *EditUserOK {
	return &EditUserOK{}
}

/*EditUserOK handles this case with default header values.

User updated
*/
type EditUserOK struct {
	Payload *models.User
}

func (o *EditUserOK) Error() string {
	return fmt.Sprintf("[POST /users/{username}][%d] editUserOK  %+v", 200, o.Payload)
}

func (o *EditUserOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditUserBadRequest creates a EditUserBadRequest with default headers values
func NewEditUserBadRequest() *EditUserBadRequest {
	return &EditUserBadRequest{}
}

/*EditUserBadRequest handles this case with default header values.

Bad Request
*/
type EditUserBadRequest struct {
	Payload *models.Message
}

func (o *EditUserBadRequest) Error() string {
	return fmt.Sprintf("[POST /users/{username}][%d] editUserBadRequest  %+v", 400, o.Payload)
}

func (o *EditUserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditUserForbidden creates a EditUserForbidden with default headers values
func NewEditUserForbidden() *EditUserForbidden {
	return &EditUserForbidden{}
}

/*EditUserForbidden handles this case with default header values.

Forbidden
*/
type EditUserForbidden struct {
	Payload *models.Message
}

func (o *EditUserForbidden) Error() string {
	return fmt.Sprintf("[POST /users/{username}][%d] editUserForbidden  %+v", 403, o.Payload)
}

func (o *EditUserForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditUserNotFound creates a EditUserNotFound with default headers values
func NewEditUserNotFound() *EditUserNotFound {
	return &EditUserNotFound{}
}

/*EditUserNotFound handles this case with default header values.

Not Found
*/
type EditUserNotFound struct {
	Payload *models.Message
}

func (o *EditUserNotFound) Error() string {
	return fmt.Sprintf("[POST /users/{username}][%d] editUserNotFound  %+v", 404, o.Payload)
}

func (o *EditUserNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditUserInternalServerError creates a EditUserInternalServerError with default headers values
func NewEditUserInternalServerError() *EditUserInternalServerError {
	return &EditUserInternalServerError{}
}

/*EditUserInternalServerError handles this case with default header values.

Server Error
*/
type EditUserInternalServerError struct {
	Payload *models.Message
}

func (o *EditUserInternalServerError) Error() string {
	return fmt.Sprintf("[POST /users/{username}][%d] editUserInternalServerError  %+v", 500, o.Payload)
}

func (o *EditUserInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
