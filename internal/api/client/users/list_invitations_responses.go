// Code generated by go-swagger; DO NOT EDIT.

package users

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/ActiveState/cli/internal/api/models"
)

// ListInvitationsReader is a Reader for the ListInvitations structure.
type ListInvitationsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListInvitationsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListInvitationsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListInvitationsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListInvitationsOK creates a ListInvitationsOK with default headers values
func NewListInvitationsOK() *ListInvitationsOK {
	return &ListInvitationsOK{}
}

/*ListInvitationsOK handles this case with default header values.

Pending Invitations
*/
type ListInvitationsOK struct {
	Payload []*models.Invitation
}

func (o *ListInvitationsOK) Error() string {
	return fmt.Sprintf("[GET /invitations/{email}][%d] listInvitationsOK  %+v", 200, o.Payload)
}

func (o *ListInvitationsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListInvitationsBadRequest creates a ListInvitationsBadRequest with default headers values
func NewListInvitationsBadRequest() *ListInvitationsBadRequest {
	return &ListInvitationsBadRequest{}
}

/*ListInvitationsBadRequest handles this case with default header values.

Bad Request
*/
type ListInvitationsBadRequest struct {
	Payload *models.Message
}

func (o *ListInvitationsBadRequest) Error() string {
	return fmt.Sprintf("[GET /invitations/{email}][%d] listInvitationsBadRequest  %+v", 400, o.Payload)
}

func (o *ListInvitationsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
