// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Vulnerability vulnerability
// swagger:model Vulnerability
type Vulnerability struct {

	// access complexity
	AccessComplexity string `json:"accessComplexity,omitempty"`

	// access vector
	AccessVector string `json:"accessVector,omitempty"`

	// authentication
	Authentication string `json:"authentication,omitempty"`

	// availibility impact
	AvailibilityImpact string `json:"availibilityImpact,omitempty"`

	// base score
	BaseScore float32 `json:"baseScore,omitempty"`

	// confidentiality impact
	ConfidentialityImpact string `json:"confidentialityImpact,omitempty"`

	// cweld
	Cweld string `json:"cweld,omitempty"`

	// description
	Description string `json:"description,omitempty"`

	// exploitability subscore
	ExploitabilitySubscore float32 `json:"exploitabilitySubscore,omitempty"`

	// impact subscore
	ImpactSubscore float32 `json:"impactSubscore,omitempty"`

	// integrity impact
	IntegrityImpact string `json:"integrityImpact,omitempty"`

	// name
	Name string `json:"name,omitempty"`

	// published date
	PublishedDate strfmt.DateTime `json:"publishedDate,omitempty"`

	// severity
	Severity string `json:"severity,omitempty"`

	// source
	Source string `json:"source,omitempty"`

	// updated date
	UpdatedDate strfmt.DateTime `json:"updatedDate,omitempty"`
}

// Validate validates this vulnerability
func (m *Vulnerability) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validatePublishedDate(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateUpdatedDate(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Vulnerability) validatePublishedDate(formats strfmt.Registry) error {

	if swag.IsZero(m.PublishedDate) { // not required
		return nil
	}

	if err := validate.FormatOf("publishedDate", "body", "date-time", m.PublishedDate.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *Vulnerability) validateUpdatedDate(formats strfmt.Registry) error {

	if swag.IsZero(m.UpdatedDate) { // not required
		return nil
	}

	if err := validate.FormatOf("updatedDate", "body", "date-time", m.UpdatedDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *Vulnerability) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Vulnerability) UnmarshalBinary(b []byte) error {
	var res Vulnerability
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
