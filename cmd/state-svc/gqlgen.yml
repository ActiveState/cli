# Where are all the schema files located? globs are supported eg  src/**/*.graphqls
schema:
  - schema/*.graphqls

# Where should the generated server code go?
# This is targeting an exclusive package because
# gqlgen READS the packages before it writes to them
# Making iterative changes difficult if you mix
# generated with curated files.
exec:
  filename: internal/server/generated/generated.go
  package: genserver

# Uncomment to enable federation
# federation:
#   filename: graph/generated/federation.go
#   package: generated

# Where should any generated models go?
model:
  filename: ../../internal/graph/generated.go
  package: graph

# Generating the resolver is only really useful if you have a LOT of boilerplate to generate, otherwise it tends
# to just break when you make schema changes and it's much easier to just implement the interface as needed
#resolver:
#  layout: follow-schema
#  dir: internal/resolver/generated
#  package: genresolver

# Optional: turn on use `gqlgen:"fieldName"` tags in your models
# struct_tag: json

# Optional: turn on to use []Thing instead of []*Thing
# omit_slice_element_pointers: false

# Optional: set to speed up generation time by not performing a final validation pass.
# skip_validation: true

# gqlgen will search for any type names in the schema in these go packages
# if they match it will use them, otherwise it will generate them.
autobind:
  - "github.com/ActiveState/cli/internal/graph"

# This section declares type mapping between the GraphQL and go type systems
#
# The first line in each type will be used as defaults for resolver arguments and
# modelgen, the others will be allowed when binding to fields. Configure them to
# your liking
models:
  ID:
    model:
      - github.com/99designs/gqlgen/graphql.ID
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Int:
    model:
      - github.com/99designs/gqlgen/graphql.Int
      - github.com/99designs/gqlgen/graphql.Int64
      - github.com/99designs/gqlgen/graphql.Int32
  Void:
    model: github.com/ActiveState/cli/cmd/state-svc/internal/graphqltypes.Void
