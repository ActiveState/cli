type Version {
  state: StateVersion!
}

type StateVersion {
  license: String!
  version: String!
  branch: String!
  revision: String!
  date: String!
}

type AvailableUpdate {
  version: String!
  channel: String!
  path: String!
  platform: String!
  sha256: String!
}

type Project {
  namespace: String!
  locations: [String!]!
}

type AnalyticsEventResponse {
  sent: Boolean!
}

type ReportRuntimeUsageResponse {
  received: Boolean!
}

type CheckRuntimeUsageResponse {
  limit: Int!
  usage: Int!
}

type DeprecationInfo {
  version: String!
  date: String!
  dateReached: Boolean!
  reason: String!
}

type Query {
  version: Version
  availableUpdate: AvailableUpdate
  projects: [Project]!
  analyticsEvent(category: String!, action: String!, label: String, dimensionsJson: String!): AnalyticsEventResponse
  reportRuntimeUsage(pid: Int!, exec: String!, dimensionsJson: String!): ReportRuntimeUsageResponse
  checkRuntimeUsage(organizationName: String!): CheckRuntimeUsageResponse
  checkDeprecation: DeprecationInfo
  configChanged(key: String!): ConfigChangedResponse
  fetchLogTail: String!
}

type ConfigChangedResponse {
  received: Boolean!
}
