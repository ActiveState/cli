// Code generated by go-swagger; DO NOT EDIT.

package mono_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SysInfo sys info
//
// swagger:model SysInfo
type SysInfo struct {

	// banner
	Banner string `json:"banner,omitempty"`

	// branch
	Branch string `json:"branch,omitempty"`

	// build date
	// Format: date-time
	BuildDate strfmt.DateTime `json:"buildDate,omitempty"`

	// build host
	BuildHost string `json:"buildHost,omitempty"`

	// build user
	BuildUser string `json:"buildUser,omitempty"`

	// database
	Database string `json:"database,omitempty"`

	// environment
	Environment string `json:"environment,omitempty"`

	// golang
	Golang string `json:"golang,omitempty"`

	// version
	Version string `json:"version,omitempty"`
}

// Validate validates this sys info
func (m *SysInfo) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBuildDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SysInfo) validateBuildDate(formats strfmt.Registry) error {
	if swag.IsZero(m.BuildDate) { // not required
		return nil
	}

	if err := validate.FormatOf("buildDate", "body", "date-time", m.BuildDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this sys info based on context it is used
func (m *SysInfo) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SysInfo) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SysInfo) UnmarshalBinary(b []byte) error {
	var res SysInfo
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
