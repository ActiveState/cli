// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/mono/mono_models"
)

// AddProjectReader is a Reader for the AddProject structure.
type AddProjectReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddProjectReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddProjectOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddProjectBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddProjectForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddProjectNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewAddProjectConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddProjectInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddProjectOK creates a AddProjectOK with default headers values
func NewAddProjectOK() *AddProjectOK {
	return &AddProjectOK{}
}

/* AddProjectOK describes a response with status code 200, with default header values.

Project Added
*/
type AddProjectOK struct {
	Payload *mono_models.Project
}

func (o *AddProjectOK) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationName}/projects][%d] addProjectOK  %+v", 200, o.Payload)
}
func (o *AddProjectOK) GetPayload() *mono_models.Project {
	return o.Payload
}

func (o *AddProjectOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Project)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddProjectBadRequest creates a AddProjectBadRequest with default headers values
func NewAddProjectBadRequest() *AddProjectBadRequest {
	return &AddProjectBadRequest{}
}

/* AddProjectBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddProjectBadRequest struct {
	Payload *mono_models.Message
}

func (o *AddProjectBadRequest) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationName}/projects][%d] addProjectBadRequest  %+v", 400, o.Payload)
}
func (o *AddProjectBadRequest) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *AddProjectBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddProjectForbidden creates a AddProjectForbidden with default headers values
func NewAddProjectForbidden() *AddProjectForbidden {
	return &AddProjectForbidden{}
}

/* AddProjectForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddProjectForbidden struct {
	Payload *mono_models.Message
}

func (o *AddProjectForbidden) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationName}/projects][%d] addProjectForbidden  %+v", 403, o.Payload)
}
func (o *AddProjectForbidden) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *AddProjectForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddProjectNotFound creates a AddProjectNotFound with default headers values
func NewAddProjectNotFound() *AddProjectNotFound {
	return &AddProjectNotFound{}
}

/* AddProjectNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddProjectNotFound struct {
	Payload *mono_models.Message
}

func (o *AddProjectNotFound) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationName}/projects][%d] addProjectNotFound  %+v", 404, o.Payload)
}
func (o *AddProjectNotFound) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *AddProjectNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddProjectConflict creates a AddProjectConflict with default headers values
func NewAddProjectConflict() *AddProjectConflict {
	return &AddProjectConflict{}
}

/* AddProjectConflict describes a response with status code 409, with default header values.

Conflict
*/
type AddProjectConflict struct {
	Payload *mono_models.Message
}

func (o *AddProjectConflict) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationName}/projects][%d] addProjectConflict  %+v", 409, o.Payload)
}
func (o *AddProjectConflict) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *AddProjectConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddProjectInternalServerError creates a AddProjectInternalServerError with default headers values
func NewAddProjectInternalServerError() *AddProjectInternalServerError {
	return &AddProjectInternalServerError{}
}

/* AddProjectInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AddProjectInternalServerError struct {
	Payload *mono_models.Message
}

func (o *AddProjectInternalServerError) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationName}/projects][%d] addProjectInternalServerError  %+v", 500, o.Payload)
}
func (o *AddProjectInternalServerError) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *AddProjectInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
