// Code generated by go-swagger; DO NOT EDIT.

package projects

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewForkProjectParams creates a new ForkProjectParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewForkProjectParams() *ForkProjectParams {
	return &ForkProjectParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewForkProjectParamsWithTimeout creates a new ForkProjectParams object
// with the ability to set a timeout on a request.
func NewForkProjectParamsWithTimeout(timeout time.Duration) *ForkProjectParams {
	return &ForkProjectParams{
		timeout: timeout,
	}
}

// NewForkProjectParamsWithContext creates a new ForkProjectParams object
// with the ability to set a context for a request.
func NewForkProjectParamsWithContext(ctx context.Context) *ForkProjectParams {
	return &ForkProjectParams{
		Context: ctx,
	}
}

// NewForkProjectParamsWithHTTPClient creates a new ForkProjectParams object
// with the ability to set a custom HTTPClient for a request.
func NewForkProjectParamsWithHTTPClient(client *http.Client) *ForkProjectParams {
	return &ForkProjectParams{
		HTTPClient: client,
	}
}

/* ForkProjectParams contains all the parameters to send to the API endpoint
   for the fork project operation.

   Typically these are written to a http.Request.
*/
type ForkProjectParams struct {

	/* Destination.

	   Information about where to fork the project to.
	*/
	Destination ForkProjectBody

	/* OrganizationName.

	   Name of origin organization
	*/
	OrganizationName string

	/* ProjectName.

	   Name of origin project.
	*/
	ProjectName string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the fork project params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ForkProjectParams) WithDefaults() *ForkProjectParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the fork project params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *ForkProjectParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the fork project params
func (o *ForkProjectParams) WithTimeout(timeout time.Duration) *ForkProjectParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the fork project params
func (o *ForkProjectParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the fork project params
func (o *ForkProjectParams) WithContext(ctx context.Context) *ForkProjectParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the fork project params
func (o *ForkProjectParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the fork project params
func (o *ForkProjectParams) WithHTTPClient(client *http.Client) *ForkProjectParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the fork project params
func (o *ForkProjectParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDestination adds the destination to the fork project params
func (o *ForkProjectParams) WithDestination(destination ForkProjectBody) *ForkProjectParams {
	o.SetDestination(destination)
	return o
}

// SetDestination adds the destination to the fork project params
func (o *ForkProjectParams) SetDestination(destination ForkProjectBody) {
	o.Destination = destination
}

// WithOrganizationName adds the organizationName to the fork project params
func (o *ForkProjectParams) WithOrganizationName(organizationName string) *ForkProjectParams {
	o.SetOrganizationName(organizationName)
	return o
}

// SetOrganizationName adds the organizationName to the fork project params
func (o *ForkProjectParams) SetOrganizationName(organizationName string) {
	o.OrganizationName = organizationName
}

// WithProjectName adds the projectName to the fork project params
func (o *ForkProjectParams) WithProjectName(projectName string) *ForkProjectParams {
	o.SetProjectName(projectName)
	return o
}

// SetProjectName adds the projectName to the fork project params
func (o *ForkProjectParams) SetProjectName(projectName string) {
	o.ProjectName = projectName
}

// WriteToRequest writes these params to a swagger request
func (o *ForkProjectParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if err := r.SetBodyParam(o.Destination); err != nil {
		return err
	}

	// path param organizationName
	if err := r.SetPathParam("organizationName", o.OrganizationName); err != nil {
		return err
	}

	// path param projectName
	if err := r.SetPathParam("projectName", o.ProjectName); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
