// Code generated by go-swagger; DO NOT EDIT.

package version_control

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/mono/mono_models"
)

// EditTagReader is a Reader for the EditTag structure.
type EditTagReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EditTagReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEditTagOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEditTagBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEditTagForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEditTagNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewEditTagConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEditTagInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewEditTagOK creates a EditTagOK with default headers values
func NewEditTagOK() *EditTagOK {
	return &EditTagOK{}
}

/* EditTagOK describes a response with status code 200, with default header values.

Success
*/
type EditTagOK struct {
	Payload *mono_models.Tag
}

func (o *EditTagOK) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organizationName}/projects/{projectName}/tags/{tagLabel}][%d] editTagOK  %+v", 200, o.Payload)
}
func (o *EditTagOK) GetPayload() *mono_models.Tag {
	return o.Payload
}

func (o *EditTagOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Tag)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditTagBadRequest creates a EditTagBadRequest with default headers values
func NewEditTagBadRequest() *EditTagBadRequest {
	return &EditTagBadRequest{}
}

/* EditTagBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type EditTagBadRequest struct {
	Payload *mono_models.Message
}

func (o *EditTagBadRequest) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organizationName}/projects/{projectName}/tags/{tagLabel}][%d] editTagBadRequest  %+v", 400, o.Payload)
}
func (o *EditTagBadRequest) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *EditTagBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditTagForbidden creates a EditTagForbidden with default headers values
func NewEditTagForbidden() *EditTagForbidden {
	return &EditTagForbidden{}
}

/* EditTagForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type EditTagForbidden struct {
	Payload *mono_models.Message
}

func (o *EditTagForbidden) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organizationName}/projects/{projectName}/tags/{tagLabel}][%d] editTagForbidden  %+v", 403, o.Payload)
}
func (o *EditTagForbidden) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *EditTagForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditTagNotFound creates a EditTagNotFound with default headers values
func NewEditTagNotFound() *EditTagNotFound {
	return &EditTagNotFound{}
}

/* EditTagNotFound describes a response with status code 404, with default header values.

Not Found
*/
type EditTagNotFound struct {
	Payload *mono_models.Message
}

func (o *EditTagNotFound) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organizationName}/projects/{projectName}/tags/{tagLabel}][%d] editTagNotFound  %+v", 404, o.Payload)
}
func (o *EditTagNotFound) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *EditTagNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditTagConflict creates a EditTagConflict with default headers values
func NewEditTagConflict() *EditTagConflict {
	return &EditTagConflict{}
}

/* EditTagConflict describes a response with status code 409, with default header values.

Conflict
*/
type EditTagConflict struct {
	Payload *mono_models.Message
}

func (o *EditTagConflict) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organizationName}/projects/{projectName}/tags/{tagLabel}][%d] editTagConflict  %+v", 409, o.Payload)
}
func (o *EditTagConflict) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *EditTagConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditTagInternalServerError creates a EditTagInternalServerError with default headers values
func NewEditTagInternalServerError() *EditTagInternalServerError {
	return &EditTagInternalServerError{}
}

/* EditTagInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type EditTagInternalServerError struct {
	Payload *mono_models.Message
}

func (o *EditTagInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organizationName}/projects/{projectName}/tags/{tagLabel}][%d] editTagInternalServerError  %+v", 500, o.Payload)
}
func (o *EditTagInternalServerError) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *EditTagInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
