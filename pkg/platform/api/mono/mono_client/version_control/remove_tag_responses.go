// Code generated by go-swagger; DO NOT EDIT.

package version_control

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/mono/mono_models"
)

// RemoveTagReader is a Reader for the RemoveTag structure.
type RemoveTagReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *RemoveTagReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewRemoveTagOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewRemoveTagBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewRemoveTagForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewRemoveTagNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewRemoveTagConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewRemoveTagInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewRemoveTagOK creates a RemoveTagOK with default headers values
func NewRemoveTagOK() *RemoveTagOK {
	return &RemoveTagOK{}
}

/*
	RemoveTagOK describes a response with status code 200, with default header values.

Success
*/
type RemoveTagOK struct {
	Payload *mono_models.Message
}

func (o *RemoveTagOK) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{organizationName}/projects/{projectName}/tags/{tagLabel}][%d] removeTagOK  %+v", 200, o.Payload)
}
func (o *RemoveTagOK) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *RemoveTagOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveTagBadRequest creates a RemoveTagBadRequest with default headers values
func NewRemoveTagBadRequest() *RemoveTagBadRequest {
	return &RemoveTagBadRequest{}
}

/*
	RemoveTagBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type RemoveTagBadRequest struct {
	Payload *mono_models.Message
}

func (o *RemoveTagBadRequest) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{organizationName}/projects/{projectName}/tags/{tagLabel}][%d] removeTagBadRequest  %+v", 400, o.Payload)
}
func (o *RemoveTagBadRequest) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *RemoveTagBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveTagForbidden creates a RemoveTagForbidden with default headers values
func NewRemoveTagForbidden() *RemoveTagForbidden {
	return &RemoveTagForbidden{}
}

/*
	RemoveTagForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type RemoveTagForbidden struct {
	Payload *mono_models.Message
}

func (o *RemoveTagForbidden) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{organizationName}/projects/{projectName}/tags/{tagLabel}][%d] removeTagForbidden  %+v", 403, o.Payload)
}
func (o *RemoveTagForbidden) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *RemoveTagForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveTagNotFound creates a RemoveTagNotFound with default headers values
func NewRemoveTagNotFound() *RemoveTagNotFound {
	return &RemoveTagNotFound{}
}

/*
	RemoveTagNotFound describes a response with status code 404, with default header values.

Not Found
*/
type RemoveTagNotFound struct {
	Payload *mono_models.Message
}

func (o *RemoveTagNotFound) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{organizationName}/projects/{projectName}/tags/{tagLabel}][%d] removeTagNotFound  %+v", 404, o.Payload)
}
func (o *RemoveTagNotFound) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *RemoveTagNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveTagConflict creates a RemoveTagConflict with default headers values
func NewRemoveTagConflict() *RemoveTagConflict {
	return &RemoveTagConflict{}
}

/*
	RemoveTagConflict describes a response with status code 409, with default header values.

Conflict
*/
type RemoveTagConflict struct {
	Payload *mono_models.Message
}

func (o *RemoveTagConflict) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{organizationName}/projects/{projectName}/tags/{tagLabel}][%d] removeTagConflict  %+v", 409, o.Payload)
}
func (o *RemoveTagConflict) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *RemoveTagConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewRemoveTagInternalServerError creates a RemoveTagInternalServerError with default headers values
func NewRemoveTagInternalServerError() *RemoveTagInternalServerError {
	return &RemoveTagInternalServerError{}
}

/*
	RemoveTagInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type RemoveTagInternalServerError struct {
	Payload *mono_models.Message
}

func (o *RemoveTagInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /organizations/{organizationName}/projects/{projectName}/tags/{tagLabel}][%d] removeTagInternalServerError  %+v", 500, o.Payload)
}
func (o *RemoveTagInternalServerError) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *RemoveTagInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
