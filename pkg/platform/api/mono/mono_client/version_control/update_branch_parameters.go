// Code generated by go-swagger; DO NOT EDIT.

package version_control

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/mono/mono_models"
)

// NewUpdateBranchParams creates a new UpdateBranchParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewUpdateBranchParams() *UpdateBranchParams {
	return &UpdateBranchParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateBranchParamsWithTimeout creates a new UpdateBranchParams object
// with the ability to set a timeout on a request.
func NewUpdateBranchParamsWithTimeout(timeout time.Duration) *UpdateBranchParams {
	return &UpdateBranchParams{
		timeout: timeout,
	}
}

// NewUpdateBranchParamsWithContext creates a new UpdateBranchParams object
// with the ability to set a context for a request.
func NewUpdateBranchParamsWithContext(ctx context.Context) *UpdateBranchParams {
	return &UpdateBranchParams{
		Context: ctx,
	}
}

// NewUpdateBranchParamsWithHTTPClient creates a new UpdateBranchParams object
// with the ability to set a custom HTTPClient for a request.
func NewUpdateBranchParamsWithHTTPClient(client *http.Client) *UpdateBranchParams {
	return &UpdateBranchParams{
		HTTPClient: client,
	}
}

/* UpdateBranchParams contains all the parameters to send to the API endpoint
   for the update branch operation.

   Typically these are written to a http.Request.
*/
type UpdateBranchParams struct {

	// Branch.
	Branch *mono_models.BranchEditable

	// BranchID.
	//
	// Format: uuid
	BranchID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the update branch params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateBranchParams) WithDefaults() *UpdateBranchParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the update branch params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *UpdateBranchParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the update branch params
func (o *UpdateBranchParams) WithTimeout(timeout time.Duration) *UpdateBranchParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update branch params
func (o *UpdateBranchParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update branch params
func (o *UpdateBranchParams) WithContext(ctx context.Context) *UpdateBranchParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update branch params
func (o *UpdateBranchParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update branch params
func (o *UpdateBranchParams) WithHTTPClient(client *http.Client) *UpdateBranchParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update branch params
func (o *UpdateBranchParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBranch adds the branch to the update branch params
func (o *UpdateBranchParams) WithBranch(branch *mono_models.BranchEditable) *UpdateBranchParams {
	o.SetBranch(branch)
	return o
}

// SetBranch adds the branch to the update branch params
func (o *UpdateBranchParams) SetBranch(branch *mono_models.BranchEditable) {
	o.Branch = branch
}

// WithBranchID adds the branchID to the update branch params
func (o *UpdateBranchParams) WithBranchID(branchID strfmt.UUID) *UpdateBranchParams {
	o.SetBranchID(branchID)
	return o
}

// SetBranchID adds the branchId to the update branch params
func (o *UpdateBranchParams) SetBranchID(branchID strfmt.UUID) {
	o.BranchID = branchID
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateBranchParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Branch != nil {
		if err := r.SetBodyParam(o.Branch); err != nil {
			return err
		}
	}

	// path param branchID
	if err := r.SetPathParam("branchID", o.BranchID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
