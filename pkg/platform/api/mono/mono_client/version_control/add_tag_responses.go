// Code generated by go-swagger; DO NOT EDIT.

package version_control

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/mono/mono_models"
)

// AddTagReader is a Reader for the AddTag structure.
type AddTagReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddTagReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddTagOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddTagBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewAddTagForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewAddTagNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 409:
		result := NewAddTagConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAddTagInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAddTagOK creates a AddTagOK with default headers values
func NewAddTagOK() *AddTagOK {
	return &AddTagOK{}
}

/* AddTagOK describes a response with status code 200, with default header values.

Success
*/
type AddTagOK struct {
	Payload *mono_models.Tag
}

func (o *AddTagOK) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationName}/projects/{projectName}/tags][%d] addTagOK  %+v", 200, o.Payload)
}
func (o *AddTagOK) GetPayload() *mono_models.Tag {
	return o.Payload
}

func (o *AddTagOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Tag)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTagBadRequest creates a AddTagBadRequest with default headers values
func NewAddTagBadRequest() *AddTagBadRequest {
	return &AddTagBadRequest{}
}

/* AddTagBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AddTagBadRequest struct {
	Payload *mono_models.Message
}

func (o *AddTagBadRequest) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationName}/projects/{projectName}/tags][%d] addTagBadRequest  %+v", 400, o.Payload)
}
func (o *AddTagBadRequest) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *AddTagBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTagForbidden creates a AddTagForbidden with default headers values
func NewAddTagForbidden() *AddTagForbidden {
	return &AddTagForbidden{}
}

/* AddTagForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type AddTagForbidden struct {
	Payload *mono_models.Message
}

func (o *AddTagForbidden) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationName}/projects/{projectName}/tags][%d] addTagForbidden  %+v", 403, o.Payload)
}
func (o *AddTagForbidden) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *AddTagForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTagNotFound creates a AddTagNotFound with default headers values
func NewAddTagNotFound() *AddTagNotFound {
	return &AddTagNotFound{}
}

/* AddTagNotFound describes a response with status code 404, with default header values.

Not Found
*/
type AddTagNotFound struct {
	Payload *mono_models.Message
}

func (o *AddTagNotFound) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationName}/projects/{projectName}/tags][%d] addTagNotFound  %+v", 404, o.Payload)
}
func (o *AddTagNotFound) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *AddTagNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTagConflict creates a AddTagConflict with default headers values
func NewAddTagConflict() *AddTagConflict {
	return &AddTagConflict{}
}

/* AddTagConflict describes a response with status code 409, with default header values.

Conflict
*/
type AddTagConflict struct {
	Payload *mono_models.Message
}

func (o *AddTagConflict) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationName}/projects/{projectName}/tags][%d] addTagConflict  %+v", 409, o.Payload)
}
func (o *AddTagConflict) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *AddTagConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddTagInternalServerError creates a AddTagInternalServerError with default headers values
func NewAddTagInternalServerError() *AddTagInternalServerError {
	return &AddTagInternalServerError{}
}

/* AddTagInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AddTagInternalServerError struct {
	Payload *mono_models.Message
}

func (o *AddTagInternalServerError) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationName}/projects/{projectName}/tags][%d] addTagInternalServerError  %+v", 500, o.Payload)
}
func (o *AddTagInternalServerError) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *AddTagInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
