// Code generated by go-swagger; DO NOT EDIT.

package invoices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/mono/mono_models"
)

// CalculateTaxReader is a Reader for the CalculateTax structure.
type CalculateTaxReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CalculateTaxReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCalculateTaxOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCalculateTaxBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCalculateTaxForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCalculateTaxInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCalculateTaxOK creates a CalculateTaxOK with default headers values
func NewCalculateTaxOK() *CalculateTaxOK {
	return &CalculateTaxOK{}
}

/* CalculateTaxOK describes a response with status code 200, with default header values.

Success
*/
type CalculateTaxOK struct {
	Payload int64
}

func (o *CalculateTaxOK) Error() string {
	return fmt.Sprintf("[POST /taxes][%d] calculateTaxOK  %+v", 200, o.Payload)
}
func (o *CalculateTaxOK) GetPayload() int64 {
	return o.Payload
}

func (o *CalculateTaxOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCalculateTaxBadRequest creates a CalculateTaxBadRequest with default headers values
func NewCalculateTaxBadRequest() *CalculateTaxBadRequest {
	return &CalculateTaxBadRequest{}
}

/* CalculateTaxBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CalculateTaxBadRequest struct {
	Payload *mono_models.Message
}

func (o *CalculateTaxBadRequest) Error() string {
	return fmt.Sprintf("[POST /taxes][%d] calculateTaxBadRequest  %+v", 400, o.Payload)
}
func (o *CalculateTaxBadRequest) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *CalculateTaxBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCalculateTaxForbidden creates a CalculateTaxForbidden with default headers values
func NewCalculateTaxForbidden() *CalculateTaxForbidden {
	return &CalculateTaxForbidden{}
}

/* CalculateTaxForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CalculateTaxForbidden struct {
	Payload *mono_models.Message
}

func (o *CalculateTaxForbidden) Error() string {
	return fmt.Sprintf("[POST /taxes][%d] calculateTaxForbidden  %+v", 403, o.Payload)
}
func (o *CalculateTaxForbidden) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *CalculateTaxForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCalculateTaxInternalServerError creates a CalculateTaxInternalServerError with default headers values
func NewCalculateTaxInternalServerError() *CalculateTaxInternalServerError {
	return &CalculateTaxInternalServerError{}
}

/* CalculateTaxInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CalculateTaxInternalServerError struct {
	Payload *mono_models.Message
}

func (o *CalculateTaxInternalServerError) Error() string {
	return fmt.Sprintf("[POST /taxes][%d] calculateTaxInternalServerError  %+v", 500, o.Payload)
}
func (o *CalculateTaxInternalServerError) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *CalculateTaxInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
