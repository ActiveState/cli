// Code generated by go-swagger; DO NOT EDIT.

package invoices

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/mono/mono_models"
)

// CancelSubscriptionReader is a Reader for the CancelSubscription structure.
type CancelSubscriptionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CancelSubscriptionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCancelSubscriptionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCancelSubscriptionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCancelSubscriptionForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCancelSubscriptionNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewCancelSubscriptionInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCancelSubscriptionOK creates a CancelSubscriptionOK with default headers values
func NewCancelSubscriptionOK() *CancelSubscriptionOK {
	return &CancelSubscriptionOK{}
}

/* CancelSubscriptionOK describes a response with status code 200, with default header values.

Success
*/
type CancelSubscriptionOK struct {
	Payload string
}

func (o *CancelSubscriptionOK) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationIdentifier}/invoices/cancel][%d] cancelSubscriptionOK  %+v", 200, o.Payload)
}
func (o *CancelSubscriptionOK) GetPayload() string {
	return o.Payload
}

func (o *CancelSubscriptionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelSubscriptionBadRequest creates a CancelSubscriptionBadRequest with default headers values
func NewCancelSubscriptionBadRequest() *CancelSubscriptionBadRequest {
	return &CancelSubscriptionBadRequest{}
}

/* CancelSubscriptionBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type CancelSubscriptionBadRequest struct {
	Payload *mono_models.Message
}

func (o *CancelSubscriptionBadRequest) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationIdentifier}/invoices/cancel][%d] cancelSubscriptionBadRequest  %+v", 400, o.Payload)
}
func (o *CancelSubscriptionBadRequest) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *CancelSubscriptionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelSubscriptionForbidden creates a CancelSubscriptionForbidden with default headers values
func NewCancelSubscriptionForbidden() *CancelSubscriptionForbidden {
	return &CancelSubscriptionForbidden{}
}

/* CancelSubscriptionForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type CancelSubscriptionForbidden struct {
	Payload *mono_models.Message
}

func (o *CancelSubscriptionForbidden) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationIdentifier}/invoices/cancel][%d] cancelSubscriptionForbidden  %+v", 403, o.Payload)
}
func (o *CancelSubscriptionForbidden) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *CancelSubscriptionForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelSubscriptionNotFound creates a CancelSubscriptionNotFound with default headers values
func NewCancelSubscriptionNotFound() *CancelSubscriptionNotFound {
	return &CancelSubscriptionNotFound{}
}

/* CancelSubscriptionNotFound describes a response with status code 404, with default header values.

Not Found
*/
type CancelSubscriptionNotFound struct {
	Payload *mono_models.Message
}

func (o *CancelSubscriptionNotFound) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationIdentifier}/invoices/cancel][%d] cancelSubscriptionNotFound  %+v", 404, o.Payload)
}
func (o *CancelSubscriptionNotFound) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *CancelSubscriptionNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCancelSubscriptionInternalServerError creates a CancelSubscriptionInternalServerError with default headers values
func NewCancelSubscriptionInternalServerError() *CancelSubscriptionInternalServerError {
	return &CancelSubscriptionInternalServerError{}
}

/* CancelSubscriptionInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type CancelSubscriptionInternalServerError struct {
	Payload *mono_models.Message
}

func (o *CancelSubscriptionInternalServerError) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationIdentifier}/invoices/cancel][%d] cancelSubscriptionInternalServerError  %+v", 500, o.Payload)
}
func (o *CancelSubscriptionInternalServerError) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *CancelSubscriptionInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
