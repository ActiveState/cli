// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/mono/mono_models"
)

// EditBillingReader is a Reader for the EditBilling structure.
type EditBillingReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EditBillingReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEditBillingOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEditBillingBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEditBillingForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEditBillingNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEditBillingInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewEditBillingOK creates a EditBillingOK with default headers values
func NewEditBillingOK() *EditBillingOK {
	return &EditBillingOK{}
}

/* EditBillingOK describes a response with status code 200, with default header values.

Success
*/
type EditBillingOK struct {
	Payload *mono_models.BillingInformation
}

func (o *EditBillingOK) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organizationIdentifier}/billing][%d] editBillingOK  %+v", 200, o.Payload)
}
func (o *EditBillingOK) GetPayload() *mono_models.BillingInformation {
	return o.Payload
}

func (o *EditBillingOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.BillingInformation)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditBillingBadRequest creates a EditBillingBadRequest with default headers values
func NewEditBillingBadRequest() *EditBillingBadRequest {
	return &EditBillingBadRequest{}
}

/* EditBillingBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type EditBillingBadRequest struct {
	Payload *mono_models.Message
}

func (o *EditBillingBadRequest) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organizationIdentifier}/billing][%d] editBillingBadRequest  %+v", 400, o.Payload)
}
func (o *EditBillingBadRequest) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *EditBillingBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditBillingForbidden creates a EditBillingForbidden with default headers values
func NewEditBillingForbidden() *EditBillingForbidden {
	return &EditBillingForbidden{}
}

/* EditBillingForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type EditBillingForbidden struct {
	Payload *mono_models.Message
}

func (o *EditBillingForbidden) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organizationIdentifier}/billing][%d] editBillingForbidden  %+v", 403, o.Payload)
}
func (o *EditBillingForbidden) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *EditBillingForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditBillingNotFound creates a EditBillingNotFound with default headers values
func NewEditBillingNotFound() *EditBillingNotFound {
	return &EditBillingNotFound{}
}

/* EditBillingNotFound describes a response with status code 404, with default header values.

Not Found
*/
type EditBillingNotFound struct {
	Payload *mono_models.Message
}

func (o *EditBillingNotFound) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organizationIdentifier}/billing][%d] editBillingNotFound  %+v", 404, o.Payload)
}
func (o *EditBillingNotFound) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *EditBillingNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditBillingInternalServerError creates a EditBillingInternalServerError with default headers values
func NewEditBillingInternalServerError() *EditBillingInternalServerError {
	return &EditBillingInternalServerError{}
}

/* EditBillingInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type EditBillingInternalServerError struct {
	Payload *mono_models.Message
}

func (o *EditBillingInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organizationIdentifier}/billing][%d] editBillingInternalServerError  %+v", 500, o.Payload)
}
func (o *EditBillingInternalServerError) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *EditBillingInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
