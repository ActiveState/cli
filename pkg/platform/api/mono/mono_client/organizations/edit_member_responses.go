// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/mono/mono_models"
)

// EditMemberReader is a Reader for the EditMember structure.
type EditMemberReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EditMemberReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEditMemberOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEditMemberBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEditMemberForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEditMemberNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEditMemberInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewEditMemberOK creates a EditMemberOK with default headers values
func NewEditMemberOK() *EditMemberOK {
	return &EditMemberOK{}
}

/* EditMemberOK describes a response with status code 200, with default header values.

Membership Roster
*/
type EditMemberOK struct {
	Payload []*mono_models.Member
}

func (o *EditMemberOK) Error() string {
	return fmt.Sprintf("[PATCH /organizations/{organizationName}/members/{username}][%d] editMemberOK  %+v", 200, o.Payload)
}
func (o *EditMemberOK) GetPayload() []*mono_models.Member {
	return o.Payload
}

func (o *EditMemberOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditMemberBadRequest creates a EditMemberBadRequest with default headers values
func NewEditMemberBadRequest() *EditMemberBadRequest {
	return &EditMemberBadRequest{}
}

/* EditMemberBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type EditMemberBadRequest struct {
	Payload *mono_models.Message
}

func (o *EditMemberBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /organizations/{organizationName}/members/{username}][%d] editMemberBadRequest  %+v", 400, o.Payload)
}
func (o *EditMemberBadRequest) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *EditMemberBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditMemberForbidden creates a EditMemberForbidden with default headers values
func NewEditMemberForbidden() *EditMemberForbidden {
	return &EditMemberForbidden{}
}

/* EditMemberForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type EditMemberForbidden struct {
	Payload *mono_models.Message
}

func (o *EditMemberForbidden) Error() string {
	return fmt.Sprintf("[PATCH /organizations/{organizationName}/members/{username}][%d] editMemberForbidden  %+v", 403, o.Payload)
}
func (o *EditMemberForbidden) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *EditMemberForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditMemberNotFound creates a EditMemberNotFound with default headers values
func NewEditMemberNotFound() *EditMemberNotFound {
	return &EditMemberNotFound{}
}

/* EditMemberNotFound describes a response with status code 404, with default header values.

Not Found
*/
type EditMemberNotFound struct {
	Payload *mono_models.Message
}

func (o *EditMemberNotFound) Error() string {
	return fmt.Sprintf("[PATCH /organizations/{organizationName}/members/{username}][%d] editMemberNotFound  %+v", 404, o.Payload)
}
func (o *EditMemberNotFound) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *EditMemberNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditMemberInternalServerError creates a EditMemberInternalServerError with default headers values
func NewEditMemberInternalServerError() *EditMemberInternalServerError {
	return &EditMemberInternalServerError{}
}

/* EditMemberInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type EditMemberInternalServerError struct {
	Payload *mono_models.Message
}

func (o *EditMemberInternalServerError) Error() string {
	return fmt.Sprintf("[PATCH /organizations/{organizationName}/members/{username}][%d] editMemberInternalServerError  %+v", 500, o.Payload)
}
func (o *EditMemberInternalServerError) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *EditMemberInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
