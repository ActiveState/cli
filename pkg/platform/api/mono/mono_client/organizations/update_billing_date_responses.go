// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/ActiveState/cli/pkg/platform/api/mono/mono_models"
)

// UpdateBillingDateReader is a Reader for the UpdateBillingDate structure.
type UpdateBillingDateReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateBillingDateReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateBillingDateOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateBillingDateBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateBillingDateForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateBillingDateNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewUpdateBillingDateInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateBillingDateOK creates a UpdateBillingDateOK with default headers values
func NewUpdateBillingDateOK() *UpdateBillingDateOK {
	return &UpdateBillingDateOK{}
}

/* UpdateBillingDateOK describes a response with status code 200, with default header values.

Billing date updated
*/
type UpdateBillingDateOK struct {
	Payload *mono_models.Organization
}

func (o *UpdateBillingDateOK) Error() string {
	return fmt.Sprintf("[PUT /admin/organizations/{organizationName}/updateBillingDate][%d] updateBillingDateOK  %+v", 200, o.Payload)
}
func (o *UpdateBillingDateOK) GetPayload() *mono_models.Organization {
	return o.Payload
}

func (o *UpdateBillingDateOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Organization)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBillingDateBadRequest creates a UpdateBillingDateBadRequest with default headers values
func NewUpdateBillingDateBadRequest() *UpdateBillingDateBadRequest {
	return &UpdateBillingDateBadRequest{}
}

/* UpdateBillingDateBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type UpdateBillingDateBadRequest struct {
	Payload *mono_models.Message
}

func (o *UpdateBillingDateBadRequest) Error() string {
	return fmt.Sprintf("[PUT /admin/organizations/{organizationName}/updateBillingDate][%d] updateBillingDateBadRequest  %+v", 400, o.Payload)
}
func (o *UpdateBillingDateBadRequest) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *UpdateBillingDateBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBillingDateForbidden creates a UpdateBillingDateForbidden with default headers values
func NewUpdateBillingDateForbidden() *UpdateBillingDateForbidden {
	return &UpdateBillingDateForbidden{}
}

/* UpdateBillingDateForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type UpdateBillingDateForbidden struct {
	Payload *mono_models.Message
}

func (o *UpdateBillingDateForbidden) Error() string {
	return fmt.Sprintf("[PUT /admin/organizations/{organizationName}/updateBillingDate][%d] updateBillingDateForbidden  %+v", 403, o.Payload)
}
func (o *UpdateBillingDateForbidden) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *UpdateBillingDateForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBillingDateNotFound creates a UpdateBillingDateNotFound with default headers values
func NewUpdateBillingDateNotFound() *UpdateBillingDateNotFound {
	return &UpdateBillingDateNotFound{}
}

/* UpdateBillingDateNotFound describes a response with status code 404, with default header values.

Not Found
*/
type UpdateBillingDateNotFound struct {
	Payload *mono_models.Message
}

func (o *UpdateBillingDateNotFound) Error() string {
	return fmt.Sprintf("[PUT /admin/organizations/{organizationName}/updateBillingDate][%d] updateBillingDateNotFound  %+v", 404, o.Payload)
}
func (o *UpdateBillingDateNotFound) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *UpdateBillingDateNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateBillingDateInternalServerError creates a UpdateBillingDateInternalServerError with default headers values
func NewUpdateBillingDateInternalServerError() *UpdateBillingDateInternalServerError {
	return &UpdateBillingDateInternalServerError{}
}

/* UpdateBillingDateInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type UpdateBillingDateInternalServerError struct {
	Payload *mono_models.Message
}

func (o *UpdateBillingDateInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /admin/organizations/{organizationName}/updateBillingDate][%d] updateBillingDateInternalServerError  %+v", 500, o.Payload)
}
func (o *UpdateBillingDateInternalServerError) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *UpdateBillingDateInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*UpdateBillingDateBody update billing date body
swagger:model UpdateBillingDateBody
*/
type UpdateBillingDateBody struct {

	// date
	Date string `json:"date,omitempty"`
}

// Validate validates this update billing date body
func (o *UpdateBillingDateBody) Validate(formats strfmt.Registry) error {
	return nil
}

// ContextValidate validates this update billing date body based on context it is used
func (o *UpdateBillingDateBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (o *UpdateBillingDateBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *UpdateBillingDateBody) UnmarshalBinary(b []byte) error {
	var res UpdateBillingDateBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
