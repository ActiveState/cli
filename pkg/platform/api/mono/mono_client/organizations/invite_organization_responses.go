// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"fmt"
	"io"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"

	"github.com/ActiveState/cli/pkg/platform/api/mono/mono_models"
)

// InviteOrganizationReader is a Reader for the InviteOrganization structure.
type InviteOrganizationReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *InviteOrganizationReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewInviteOrganizationOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewInviteOrganizationBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewInviteOrganizationForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewInviteOrganizationNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewInviteOrganizationInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewInviteOrganizationOK creates a InviteOrganizationOK with default headers values
func NewInviteOrganizationOK() *InviteOrganizationOK {
	return &InviteOrganizationOK{}
}

/* InviteOrganizationOK describes a response with status code 200, with default header values.

Invitation Sent
*/
type InviteOrganizationOK struct {
	Payload []*mono_models.Invitation
}

func (o *InviteOrganizationOK) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationName}/invitations/{email}][%d] inviteOrganizationOK  %+v", 200, o.Payload)
}
func (o *InviteOrganizationOK) GetPayload() []*mono_models.Invitation {
	return o.Payload
}

func (o *InviteOrganizationOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteOrganizationBadRequest creates a InviteOrganizationBadRequest with default headers values
func NewInviteOrganizationBadRequest() *InviteOrganizationBadRequest {
	return &InviteOrganizationBadRequest{}
}

/* InviteOrganizationBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type InviteOrganizationBadRequest struct {
	Payload *mono_models.Message
}

func (o *InviteOrganizationBadRequest) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationName}/invitations/{email}][%d] inviteOrganizationBadRequest  %+v", 400, o.Payload)
}
func (o *InviteOrganizationBadRequest) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *InviteOrganizationBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteOrganizationForbidden creates a InviteOrganizationForbidden with default headers values
func NewInviteOrganizationForbidden() *InviteOrganizationForbidden {
	return &InviteOrganizationForbidden{}
}

/* InviteOrganizationForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type InviteOrganizationForbidden struct {
	Payload *mono_models.Message
}

func (o *InviteOrganizationForbidden) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationName}/invitations/{email}][%d] inviteOrganizationForbidden  %+v", 403, o.Payload)
}
func (o *InviteOrganizationForbidden) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *InviteOrganizationForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteOrganizationNotFound creates a InviteOrganizationNotFound with default headers values
func NewInviteOrganizationNotFound() *InviteOrganizationNotFound {
	return &InviteOrganizationNotFound{}
}

/* InviteOrganizationNotFound describes a response with status code 404, with default header values.

Not Found
*/
type InviteOrganizationNotFound struct {
	Payload *mono_models.Message
}

func (o *InviteOrganizationNotFound) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationName}/invitations/{email}][%d] inviteOrganizationNotFound  %+v", 404, o.Payload)
}
func (o *InviteOrganizationNotFound) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *InviteOrganizationNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewInviteOrganizationInternalServerError creates a InviteOrganizationInternalServerError with default headers values
func NewInviteOrganizationInternalServerError() *InviteOrganizationInternalServerError {
	return &InviteOrganizationInternalServerError{}
}

/* InviteOrganizationInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type InviteOrganizationInternalServerError struct {
	Payload *mono_models.Message
}

func (o *InviteOrganizationInternalServerError) Error() string {
	return fmt.Sprintf("[POST /organizations/{organizationName}/invitations/{email}][%d] inviteOrganizationInternalServerError  %+v", 500, o.Payload)
}
func (o *InviteOrganizationInternalServerError) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *InviteOrganizationInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

/*InviteOrganizationBody invite organization body
swagger:model InviteOrganizationBody
*/
type InviteOrganizationBody struct {

	// Set to true to only have the API return newly added invite, rather than all pending invites
	AddedOnly bool `json:"addedOnly,omitempty"`

	// as owner
	AsOwner *bool `json:"asOwner,omitempty"`

	// role
	Role *mono_models.Role `json:"role,omitempty"`

	// Set to false to skip sending email.
	SendEmail *bool `json:"sendEmail,omitempty"`
}

// Validate validates this invite organization body
func (o *InviteOrganizationBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := o.validateRole(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InviteOrganizationBody) validateRole(formats strfmt.Registry) error {
	if swag.IsZero(o.Role) { // not required
		return nil
	}

	if o.Role != nil {
		if err := o.Role.Validate(formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("attributes" + "." + "role")
			}
			return err
		}
	}

	return nil
}

// ContextValidate validate this invite organization body based on the context it is used
func (o *InviteOrganizationBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	var res []error

	if err := o.contextValidateRole(ctx, formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (o *InviteOrganizationBody) contextValidateRole(ctx context.Context, formats strfmt.Registry) error {

	if o.Role != nil {
		if err := o.Role.ContextValidate(ctx, formats); err != nil {
			if ve, ok := err.(*errors.Validation); ok {
				return ve.ValidateName("attributes" + "." + "role")
			}
			return err
		}
	}

	return nil
}

// MarshalBinary interface implementation
func (o *InviteOrganizationBody) MarshalBinary() ([]byte, error) {
	if o == nil {
		return nil, nil
	}
	return swag.WriteJSON(o)
}

// UnmarshalBinary interface implementation
func (o *InviteOrganizationBody) UnmarshalBinary(b []byte) error {
	var res InviteOrganizationBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*o = res
	return nil
}
