// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/mono/mono_models"
)

// KomodoAuthorizedReader is a Reader for the KomodoAuthorized structure.
type KomodoAuthorizedReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *KomodoAuthorizedReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewKomodoAuthorizedOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewKomodoAuthorizedBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewKomodoAuthorizedForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewKomodoAuthorizedInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewKomodoAuthorizedOK creates a KomodoAuthorizedOK with default headers values
func NewKomodoAuthorizedOK() *KomodoAuthorizedOK {
	return &KomodoAuthorizedOK{}
}

/* KomodoAuthorizedOK describes a response with status code 200, with default header values.

Success
*/
type KomodoAuthorizedOK struct {
}

func (o *KomodoAuthorizedOK) Error() string {
	return fmt.Sprintf("[GET /status/komodo][%d] komodoAuthorizedOK ", 200)
}

func (o *KomodoAuthorizedOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewKomodoAuthorizedBadRequest creates a KomodoAuthorizedBadRequest with default headers values
func NewKomodoAuthorizedBadRequest() *KomodoAuthorizedBadRequest {
	return &KomodoAuthorizedBadRequest{}
}

/* KomodoAuthorizedBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type KomodoAuthorizedBadRequest struct {
	Payload *mono_models.Message
}

func (o *KomodoAuthorizedBadRequest) Error() string {
	return fmt.Sprintf("[GET /status/komodo][%d] komodoAuthorizedBadRequest  %+v", 400, o.Payload)
}
func (o *KomodoAuthorizedBadRequest) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *KomodoAuthorizedBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKomodoAuthorizedForbidden creates a KomodoAuthorizedForbidden with default headers values
func NewKomodoAuthorizedForbidden() *KomodoAuthorizedForbidden {
	return &KomodoAuthorizedForbidden{}
}

/* KomodoAuthorizedForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type KomodoAuthorizedForbidden struct {
	Payload *mono_models.Message
}

func (o *KomodoAuthorizedForbidden) Error() string {
	return fmt.Sprintf("[GET /status/komodo][%d] komodoAuthorizedForbidden  %+v", 403, o.Payload)
}
func (o *KomodoAuthorizedForbidden) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *KomodoAuthorizedForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewKomodoAuthorizedInternalServerError creates a KomodoAuthorizedInternalServerError with default headers values
func NewKomodoAuthorizedInternalServerError() *KomodoAuthorizedInternalServerError {
	return &KomodoAuthorizedInternalServerError{}
}

/* KomodoAuthorizedInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type KomodoAuthorizedInternalServerError struct {
	Payload *mono_models.Message
}

func (o *KomodoAuthorizedInternalServerError) Error() string {
	return fmt.Sprintf("[GET /status/komodo][%d] komodoAuthorizedInternalServerError  %+v", 500, o.Payload)
}
func (o *KomodoAuthorizedInternalServerError) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *KomodoAuthorizedInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
