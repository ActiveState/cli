// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetOrganizationTierParams creates a new GetOrganizationTierParams object
// with the default values initialized.
func NewGetOrganizationTierParams() *GetOrganizationTierParams {
	var (
		identifierTypeDefault = string("URLname")
	)
	return &GetOrganizationTierParams{
		IdentifierType: &identifierTypeDefault,

		timeout: cr.DefaultTimeout,
	}
}

// NewGetOrganizationTierParamsWithTimeout creates a new GetOrganizationTierParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetOrganizationTierParamsWithTimeout(timeout time.Duration) *GetOrganizationTierParams {
	var (
		identifierTypeDefault = string("URLname")
	)
	return &GetOrganizationTierParams{
		IdentifierType: &identifierTypeDefault,

		timeout: timeout,
	}
}

// NewGetOrganizationTierParamsWithContext creates a new GetOrganizationTierParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetOrganizationTierParamsWithContext(ctx context.Context) *GetOrganizationTierParams {
	var (
		identifierTypeDefault = string("URLname")
	)
	return &GetOrganizationTierParams{
		IdentifierType: &identifierTypeDefault,

		Context: ctx,
	}
}

// NewGetOrganizationTierParamsWithHTTPClient creates a new GetOrganizationTierParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetOrganizationTierParamsWithHTTPClient(client *http.Client) *GetOrganizationTierParams {
	var (
		identifierTypeDefault = string("URLname")
	)
	return &GetOrganizationTierParams{
		IdentifierType: &identifierTypeDefault,
		HTTPClient:     client,
	}
}

/*GetOrganizationTierParams contains all the parameters to send to the API endpoint
for the get organization tier operation typically these are written to a http.Request
*/
type GetOrganizationTierParams struct {

	/*IdentifierType
	  what kind of thing the provided organizationIdentifier is

	*/
	IdentifierType *string
	/*OrganizationIdentifier
	  identifier (URLname, by default) of the desired organization

	*/
	OrganizationIdentifier string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get organization tier params
func (o *GetOrganizationTierParams) WithTimeout(timeout time.Duration) *GetOrganizationTierParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get organization tier params
func (o *GetOrganizationTierParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get organization tier params
func (o *GetOrganizationTierParams) WithContext(ctx context.Context) *GetOrganizationTierParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get organization tier params
func (o *GetOrganizationTierParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get organization tier params
func (o *GetOrganizationTierParams) WithHTTPClient(client *http.Client) *GetOrganizationTierParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get organization tier params
func (o *GetOrganizationTierParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIdentifierType adds the identifierType to the get organization tier params
func (o *GetOrganizationTierParams) WithIdentifierType(identifierType *string) *GetOrganizationTierParams {
	o.SetIdentifierType(identifierType)
	return o
}

// SetIdentifierType adds the identifierType to the get organization tier params
func (o *GetOrganizationTierParams) SetIdentifierType(identifierType *string) {
	o.IdentifierType = identifierType
}

// WithOrganizationIdentifier adds the organizationIdentifier to the get organization tier params
func (o *GetOrganizationTierParams) WithOrganizationIdentifier(organizationIdentifier string) *GetOrganizationTierParams {
	o.SetOrganizationIdentifier(organizationIdentifier)
	return o
}

// SetOrganizationIdentifier adds the organizationIdentifier to the get organization tier params
func (o *GetOrganizationTierParams) SetOrganizationIdentifier(organizationIdentifier string) {
	o.OrganizationIdentifier = organizationIdentifier
}

// WriteToRequest writes these params to a swagger request
func (o *GetOrganizationTierParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IdentifierType != nil {

		// query param identifierType
		var qrIdentifierType string
		if o.IdentifierType != nil {
			qrIdentifierType = *o.IdentifierType
		}
		qIdentifierType := qrIdentifierType
		if qIdentifierType != "" {
			if err := r.SetQueryParam("identifierType", qIdentifierType); err != nil {
				return err
			}
		}

	}

	// path param organizationIdentifier
	if err := r.SetPathParam("organizationIdentifier", o.OrganizationIdentifier); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
