// Code generated by go-swagger; DO NOT EDIT.

package organizations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetOrganizationMutationsParams creates a new GetOrganizationMutationsParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetOrganizationMutationsParams() *GetOrganizationMutationsParams {
	return &GetOrganizationMutationsParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetOrganizationMutationsParamsWithTimeout creates a new GetOrganizationMutationsParams object
// with the ability to set a timeout on a request.
func NewGetOrganizationMutationsParamsWithTimeout(timeout time.Duration) *GetOrganizationMutationsParams {
	return &GetOrganizationMutationsParams{
		timeout: timeout,
	}
}

// NewGetOrganizationMutationsParamsWithContext creates a new GetOrganizationMutationsParams object
// with the ability to set a context for a request.
func NewGetOrganizationMutationsParamsWithContext(ctx context.Context) *GetOrganizationMutationsParams {
	return &GetOrganizationMutationsParams{
		Context: ctx,
	}
}

// NewGetOrganizationMutationsParamsWithHTTPClient creates a new GetOrganizationMutationsParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetOrganizationMutationsParamsWithHTTPClient(client *http.Client) *GetOrganizationMutationsParams {
	return &GetOrganizationMutationsParams{
		HTTPClient: client,
	}
}

/* GetOrganizationMutationsParams contains all the parameters to send to the API endpoint
   for the get organization mutations operation.

   Typically these are written to a http.Request.
*/
type GetOrganizationMutationsParams struct {

	/* IdentifierType.

	   what kind of thing the provided organizationIdentifier is

	   Default: "URLname"
	*/
	IdentifierType *string

	/* OrganizationIdentifier.

	   identifier (URLname, by default) of the desired organization
	*/
	OrganizationIdentifier string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get organization mutations params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationMutationsParams) WithDefaults() *GetOrganizationMutationsParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get organization mutations params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetOrganizationMutationsParams) SetDefaults() {
	var (
		identifierTypeDefault = string("URLname")
	)

	val := GetOrganizationMutationsParams{
		IdentifierType: &identifierTypeDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get organization mutations params
func (o *GetOrganizationMutationsParams) WithTimeout(timeout time.Duration) *GetOrganizationMutationsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get organization mutations params
func (o *GetOrganizationMutationsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get organization mutations params
func (o *GetOrganizationMutationsParams) WithContext(ctx context.Context) *GetOrganizationMutationsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get organization mutations params
func (o *GetOrganizationMutationsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get organization mutations params
func (o *GetOrganizationMutationsParams) WithHTTPClient(client *http.Client) *GetOrganizationMutationsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get organization mutations params
func (o *GetOrganizationMutationsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIdentifierType adds the identifierType to the get organization mutations params
func (o *GetOrganizationMutationsParams) WithIdentifierType(identifierType *string) *GetOrganizationMutationsParams {
	o.SetIdentifierType(identifierType)
	return o
}

// SetIdentifierType adds the identifierType to the get organization mutations params
func (o *GetOrganizationMutationsParams) SetIdentifierType(identifierType *string) {
	o.IdentifierType = identifierType
}

// WithOrganizationIdentifier adds the organizationIdentifier to the get organization mutations params
func (o *GetOrganizationMutationsParams) WithOrganizationIdentifier(organizationIdentifier string) *GetOrganizationMutationsParams {
	o.SetOrganizationIdentifier(organizationIdentifier)
	return o
}

// SetOrganizationIdentifier adds the organizationIdentifier to the get organization mutations params
func (o *GetOrganizationMutationsParams) SetOrganizationIdentifier(organizationIdentifier string) {
	o.OrganizationIdentifier = organizationIdentifier
}

// WriteToRequest writes these params to a swagger request
func (o *GetOrganizationMutationsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.IdentifierType != nil {

		// query param identifierType
		var qrIdentifierType string

		if o.IdentifierType != nil {
			qrIdentifierType = *o.IdentifierType
		}
		qIdentifierType := qrIdentifierType
		if qIdentifierType != "" {

			if err := r.SetQueryParam("identifierType", qIdentifierType); err != nil {
				return err
			}
		}
	}

	// path param organizationIdentifier
	if err := r.SetPathParam("organizationIdentifier", o.OrganizationIdentifier); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
