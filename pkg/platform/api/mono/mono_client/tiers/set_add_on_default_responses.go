// Code generated by go-swagger; DO NOT EDIT.

package tiers

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/mono/mono_models"
)

// SetAddOnDefaultReader is a Reader for the SetAddOnDefault structure.
type SetAddOnDefaultReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SetAddOnDefaultReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSetAddOnDefaultOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSetAddOnDefaultBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewSetAddOnDefaultForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewSetAddOnDefaultNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewSetAddOnDefaultInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewSetAddOnDefaultOK creates a SetAddOnDefaultOK with default headers values
func NewSetAddOnDefaultOK() *SetAddOnDefaultOK {
	return &SetAddOnDefaultOK{}
}

/*
	SetAddOnDefaultOK describes a response with status code 200, with default header values.

Success
*/
type SetAddOnDefaultOK struct {
	Payload *mono_models.Message
}

func (o *SetAddOnDefaultOK) Error() string {
	return fmt.Sprintf("[POST /addons/{tierName}][%d] setAddOnDefaultOK  %+v", 200, o.Payload)
}
func (o *SetAddOnDefaultOK) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *SetAddOnDefaultOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetAddOnDefaultBadRequest creates a SetAddOnDefaultBadRequest with default headers values
func NewSetAddOnDefaultBadRequest() *SetAddOnDefaultBadRequest {
	return &SetAddOnDefaultBadRequest{}
}

/*
	SetAddOnDefaultBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type SetAddOnDefaultBadRequest struct {
	Payload *mono_models.Message
}

func (o *SetAddOnDefaultBadRequest) Error() string {
	return fmt.Sprintf("[POST /addons/{tierName}][%d] setAddOnDefaultBadRequest  %+v", 400, o.Payload)
}
func (o *SetAddOnDefaultBadRequest) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *SetAddOnDefaultBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetAddOnDefaultForbidden creates a SetAddOnDefaultForbidden with default headers values
func NewSetAddOnDefaultForbidden() *SetAddOnDefaultForbidden {
	return &SetAddOnDefaultForbidden{}
}

/*
	SetAddOnDefaultForbidden describes a response with status code 403, with default header values.

Forbidden
*/
type SetAddOnDefaultForbidden struct {
	Payload *mono_models.Message
}

func (o *SetAddOnDefaultForbidden) Error() string {
	return fmt.Sprintf("[POST /addons/{tierName}][%d] setAddOnDefaultForbidden  %+v", 403, o.Payload)
}
func (o *SetAddOnDefaultForbidden) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *SetAddOnDefaultForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetAddOnDefaultNotFound creates a SetAddOnDefaultNotFound with default headers values
func NewSetAddOnDefaultNotFound() *SetAddOnDefaultNotFound {
	return &SetAddOnDefaultNotFound{}
}

/*
	SetAddOnDefaultNotFound describes a response with status code 404, with default header values.

Not Found
*/
type SetAddOnDefaultNotFound struct {
	Payload *mono_models.Message
}

func (o *SetAddOnDefaultNotFound) Error() string {
	return fmt.Sprintf("[POST /addons/{tierName}][%d] setAddOnDefaultNotFound  %+v", 404, o.Payload)
}
func (o *SetAddOnDefaultNotFound) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *SetAddOnDefaultNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSetAddOnDefaultInternalServerError creates a SetAddOnDefaultInternalServerError with default headers values
func NewSetAddOnDefaultInternalServerError() *SetAddOnDefaultInternalServerError {
	return &SetAddOnDefaultInternalServerError{}
}

/*
	SetAddOnDefaultInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type SetAddOnDefaultInternalServerError struct {
	Payload *mono_models.Message
}

func (o *SetAddOnDefaultInternalServerError) Error() string {
	return fmt.Sprintf("[POST /addons/{tierName}][%d] setAddOnDefaultInternalServerError  %+v", 500, o.Payload)
}
func (o *SetAddOnDefaultInternalServerError) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *SetAddOnDefaultInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
