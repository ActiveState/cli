// Code generated by go-swagger; DO NOT EDIT.

package oauth

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/mono/mono_models"
)

// AuthDevicePutReader is a Reader for the AuthDevicePut structure.
type AuthDevicePutReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AuthDevicePutReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAuthDevicePutOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAuthDevicePutBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 401:
		result := NewAuthDevicePutUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewAuthDevicePutInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewAuthDevicePutOK creates a AuthDevicePutOK with default headers values
func NewAuthDevicePutOK() *AuthDevicePutOK {
	return &AuthDevicePutOK{}
}

/* AuthDevicePutOK describes a response with status code 200, with default header values.

Success
*/
type AuthDevicePutOK struct {
}

func (o *AuthDevicePutOK) Error() string {
	return fmt.Sprintf("[PUT /oauth/authorize/device][%d] authDevicePutOK ", 200)
}

func (o *AuthDevicePutOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewAuthDevicePutBadRequest creates a AuthDevicePutBadRequest with default headers values
func NewAuthDevicePutBadRequest() *AuthDevicePutBadRequest {
	return &AuthDevicePutBadRequest{}
}

/* AuthDevicePutBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type AuthDevicePutBadRequest struct {
	Payload *mono_models.Message
}

func (o *AuthDevicePutBadRequest) Error() string {
	return fmt.Sprintf("[PUT /oauth/authorize/device][%d] authDevicePutBadRequest  %+v", 400, o.Payload)
}
func (o *AuthDevicePutBadRequest) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *AuthDevicePutBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthDevicePutUnauthorized creates a AuthDevicePutUnauthorized with default headers values
func NewAuthDevicePutUnauthorized() *AuthDevicePutUnauthorized {
	return &AuthDevicePutUnauthorized{}
}

/* AuthDevicePutUnauthorized describes a response with status code 401, with default header values.

Invalid credentials
*/
type AuthDevicePutUnauthorized struct {
	Payload *mono_models.Message
}

func (o *AuthDevicePutUnauthorized) Error() string {
	return fmt.Sprintf("[PUT /oauth/authorize/device][%d] authDevicePutUnauthorized  %+v", 401, o.Payload)
}
func (o *AuthDevicePutUnauthorized) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *AuthDevicePutUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAuthDevicePutInternalServerError creates a AuthDevicePutInternalServerError with default headers values
func NewAuthDevicePutInternalServerError() *AuthDevicePutInternalServerError {
	return &AuthDevicePutInternalServerError{}
}

/* AuthDevicePutInternalServerError describes a response with status code 500, with default header values.

Server Error
*/
type AuthDevicePutInternalServerError struct {
	Payload *mono_models.Message
}

func (o *AuthDevicePutInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /oauth/authorize/device][%d] authDevicePutInternalServerError  %+v", 500, o.Payload)
}
func (o *AuthDevicePutInternalServerError) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *AuthDevicePutInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
