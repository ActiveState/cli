// Code generated by go-swagger; DO NOT EDIT.

package authentication

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/mono/mono_models"
)

// EnableTOTPReader is a Reader for the EnableTOTP structure.
type EnableTOTPReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EnableTOTPReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEnableTOTPOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEnableTOTPBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewEnableTOTPOK creates a EnableTOTPOK with default headers values
func NewEnableTOTPOK() *EnableTOTPOK {
	return &EnableTOTPOK{}
}

/* EnableTOTPOK describes a response with status code 200, with default header values.

Enabled
*/
type EnableTOTPOK struct {
	Payload *mono_models.User
}

func (o *EnableTOTPOK) Error() string {
	return fmt.Sprintf("[POST /totp][%d] enableTOTPOK  %+v", 200, o.Payload)
}
func (o *EnableTOTPOK) GetPayload() *mono_models.User {
	return o.Payload
}

func (o *EnableTOTPOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.User)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEnableTOTPBadRequest creates a EnableTOTPBadRequest with default headers values
func NewEnableTOTPBadRequest() *EnableTOTPBadRequest {
	return &EnableTOTPBadRequest{}
}

/* EnableTOTPBadRequest describes a response with status code 400, with default header values.

Bad Request
*/
type EnableTOTPBadRequest struct {
	Payload *mono_models.Message
}

func (o *EnableTOTPBadRequest) Error() string {
	return fmt.Sprintf("[POST /totp][%d] enableTOTPBadRequest  %+v", 400, o.Payload)
}
func (o *EnableTOTPBadRequest) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *EnableTOTPBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
