// Code generated by go-swagger; DO NOT EDIT.

package authentication

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"
)

// GithubAuthErrorReader is a Reader for the GithubAuthError structure.
type GithubAuthErrorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GithubAuthErrorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 302:
		result := NewGithubAuthErrorFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewGithubAuthErrorFound creates a GithubAuthErrorFound with default headers values
func NewGithubAuthErrorFound() *GithubAuthErrorFound {
	return &GithubAuthErrorFound{}
}

/* GithubAuthErrorFound describes a response with status code 302, with default header values.

Found
*/
type GithubAuthErrorFound struct {
}

func (o *GithubAuthErrorFound) Error() string {
	return fmt.Sprintf("[GET /oauth/github][%d] githubAuthErrorFound ", 302)
}

func (o *GithubAuthErrorFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
