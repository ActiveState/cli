// Code generated by go-swagger; DO NOT EDIT.

package limits

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/mono/mono_models"
)

// EditOrganizationLimitsReader is a Reader for the EditOrganizationLimits structure.
type EditOrganizationLimitsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *EditOrganizationLimitsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewEditOrganizationLimitsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewEditOrganizationLimitsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewEditOrganizationLimitsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewEditOrganizationLimitsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 500:
		result := NewEditOrganizationLimitsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewEditOrganizationLimitsOK creates a EditOrganizationLimitsOK with default headers values
func NewEditOrganizationLimitsOK() *EditOrganizationLimitsOK {
	return &EditOrganizationLimitsOK{}
}

/*EditOrganizationLimitsOK handles this case with default header values.

Success
*/
type EditOrganizationLimitsOK struct {
	Payload *mono_models.Limits
}

func (o *EditOrganizationLimitsOK) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organizationIdentifier}/limits][%d] editOrganizationLimitsOK  %+v", 200, o.Payload)
}

func (o *EditOrganizationLimitsOK) GetPayload() *mono_models.Limits {
	return o.Payload
}

func (o *EditOrganizationLimitsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Limits)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditOrganizationLimitsBadRequest creates a EditOrganizationLimitsBadRequest with default headers values
func NewEditOrganizationLimitsBadRequest() *EditOrganizationLimitsBadRequest {
	return &EditOrganizationLimitsBadRequest{}
}

/*EditOrganizationLimitsBadRequest handles this case with default header values.

Bad Request
*/
type EditOrganizationLimitsBadRequest struct {
	Payload *mono_models.Message
}

func (o *EditOrganizationLimitsBadRequest) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organizationIdentifier}/limits][%d] editOrganizationLimitsBadRequest  %+v", 400, o.Payload)
}

func (o *EditOrganizationLimitsBadRequest) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *EditOrganizationLimitsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditOrganizationLimitsForbidden creates a EditOrganizationLimitsForbidden with default headers values
func NewEditOrganizationLimitsForbidden() *EditOrganizationLimitsForbidden {
	return &EditOrganizationLimitsForbidden{}
}

/*EditOrganizationLimitsForbidden handles this case with default header values.

Forbidden
*/
type EditOrganizationLimitsForbidden struct {
	Payload *mono_models.Message
}

func (o *EditOrganizationLimitsForbidden) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organizationIdentifier}/limits][%d] editOrganizationLimitsForbidden  %+v", 403, o.Payload)
}

func (o *EditOrganizationLimitsForbidden) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *EditOrganizationLimitsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditOrganizationLimitsNotFound creates a EditOrganizationLimitsNotFound with default headers values
func NewEditOrganizationLimitsNotFound() *EditOrganizationLimitsNotFound {
	return &EditOrganizationLimitsNotFound{}
}

/*EditOrganizationLimitsNotFound handles this case with default header values.

Not Found
*/
type EditOrganizationLimitsNotFound struct {
	Payload *mono_models.Message
}

func (o *EditOrganizationLimitsNotFound) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organizationIdentifier}/limits][%d] editOrganizationLimitsNotFound  %+v", 404, o.Payload)
}

func (o *EditOrganizationLimitsNotFound) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *EditOrganizationLimitsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewEditOrganizationLimitsInternalServerError creates a EditOrganizationLimitsInternalServerError with default headers values
func NewEditOrganizationLimitsInternalServerError() *EditOrganizationLimitsInternalServerError {
	return &EditOrganizationLimitsInternalServerError{}
}

/*EditOrganizationLimitsInternalServerError handles this case with default header values.

Server Error
*/
type EditOrganizationLimitsInternalServerError struct {
	Payload *mono_models.Message
}

func (o *EditOrganizationLimitsInternalServerError) Error() string {
	return fmt.Sprintf("[PUT /organizations/{organizationIdentifier}/limits][%d] editOrganizationLimitsInternalServerError  %+v", 500, o.Payload)
}

func (o *EditOrganizationLimitsInternalServerError) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *EditOrganizationLimitsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
