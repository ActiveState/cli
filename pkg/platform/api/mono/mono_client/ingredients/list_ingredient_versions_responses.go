// Code generated by go-swagger; DO NOT EDIT.

package ingredients

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/mono/mono_models"
)

// ListIngredientVersionsReader is a Reader for the ListIngredientVersions structure.
type ListIngredientVersionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListIngredientVersionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListIngredientVersionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListIngredientVersionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewListIngredientVersionsOK creates a ListIngredientVersionsOK with default headers values
func NewListIngredientVersionsOK() *ListIngredientVersionsOK {
	return &ListIngredientVersionsOK{}
}

/*ListIngredientVersionsOK handles this case with default header values.

Success
*/
type ListIngredientVersionsOK struct {
	Payload []*mono_models.IngredientVersion
}

func (o *ListIngredientVersionsOK) Error() string {
	return fmt.Sprintf("[GET /ingredients/{ingredientID}/versions][%d] listIngredientVersionsOK  %+v", 200, o.Payload)
}

func (o *ListIngredientVersionsOK) GetPayload() []*mono_models.IngredientVersion {
	return o.Payload
}

func (o *ListIngredientVersionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIngredientVersionsBadRequest creates a ListIngredientVersionsBadRequest with default headers values
func NewListIngredientVersionsBadRequest() *ListIngredientVersionsBadRequest {
	return &ListIngredientVersionsBadRequest{}
}

/*ListIngredientVersionsBadRequest handles this case with default header values.

Bad Request
*/
type ListIngredientVersionsBadRequest struct {
	Payload *mono_models.Message
}

func (o *ListIngredientVersionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /ingredients/{ingredientID}/versions][%d] listIngredientVersionsBadRequest  %+v", 400, o.Payload)
}

func (o *ListIngredientVersionsBadRequest) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *ListIngredientVersionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
