// Code generated by go-swagger; DO NOT EDIT.

package ingredients

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/mono/mono_models"
)

// GetIngredientVersionReader is a Reader for the GetIngredientVersion structure.
type GetIngredientVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetIngredientVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetIngredientVersionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewGetIngredientVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetIngredientVersionOK creates a GetIngredientVersionOK with default headers values
func NewGetIngredientVersionOK() *GetIngredientVersionOK {
	return &GetIngredientVersionOK{}
}

/*GetIngredientVersionOK handles this case with default header values.

Success
*/
type GetIngredientVersionOK struct {
	Payload *mono_models.IngredientVersion
}

func (o *GetIngredientVersionOK) Error() string {
	return fmt.Sprintf("[GET /ingredients/{ingredientID}/versions/{version}][%d] getIngredientVersionOK  %+v", 200, o.Payload)
}

func (o *GetIngredientVersionOK) GetPayload() *mono_models.IngredientVersion {
	return o.Payload
}

func (o *GetIngredientVersionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.IngredientVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetIngredientVersionBadRequest creates a GetIngredientVersionBadRequest with default headers values
func NewGetIngredientVersionBadRequest() *GetIngredientVersionBadRequest {
	return &GetIngredientVersionBadRequest{}
}

/*GetIngredientVersionBadRequest handles this case with default header values.

Bad Request
*/
type GetIngredientVersionBadRequest struct {
	Payload *mono_models.Message
}

func (o *GetIngredientVersionBadRequest) Error() string {
	return fmt.Sprintf("[GET /ingredients/{ingredientID}/versions/{version}][%d] getIngredientVersionBadRequest  %+v", 400, o.Payload)
}

func (o *GetIngredientVersionBadRequest) GetPayload() *mono_models.Message {
	return o.Payload
}

func (o *GetIngredientVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(mono_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
