// Code generated by go-swagger; DO NOT EDIT.

package inventory_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/inventory/inventory_models"
)

// UpdateIngredientReader is a Reader for the UpdateIngredient structure.
type UpdateIngredientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateIngredientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateIngredientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewUpdateIngredientDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewUpdateIngredientOK creates a UpdateIngredientOK with default headers values
func NewUpdateIngredientOK() *UpdateIngredientOK {
	return &UpdateIngredientOK{}
}

/* UpdateIngredientOK describes a response with status code 200, with default header values.

The updated ingredient
*/
type UpdateIngredientOK struct {
	Payload *inventory_models.Ingredient
}

func (o *UpdateIngredientOK) Error() string {
	return fmt.Sprintf("[PUT /v1/ingredients/{ingredient_id}][%d] updateIngredientOK  %+v", 200, o.Payload)
}
func (o *UpdateIngredientOK) GetPayload() *inventory_models.Ingredient {
	return o.Payload
}

func (o *UpdateIngredientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.Ingredient)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateIngredientDefault creates a UpdateIngredientDefault with default headers values
func NewUpdateIngredientDefault(code int) *UpdateIngredientDefault {
	return &UpdateIngredientDefault{
		_statusCode: code,
	}
}

/* UpdateIngredientDefault describes a response with status code -1, with default header values.

If there is an error processing the request
*/
type UpdateIngredientDefault struct {
	_statusCode int

	Payload *inventory_models.RestAPIError
}

// Code gets the status code for the update ingredient default response
func (o *UpdateIngredientDefault) Code() int {
	return o._statusCode
}

func (o *UpdateIngredientDefault) Error() string {
	return fmt.Sprintf("[PUT /v1/ingredients/{ingredient_id}][%d] updateIngredient default  %+v", o._statusCode, o.Payload)
}
func (o *UpdateIngredientDefault) GetPayload() *inventory_models.RestAPIError {
	return o.Payload
}

func (o *UpdateIngredientDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.RestAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
