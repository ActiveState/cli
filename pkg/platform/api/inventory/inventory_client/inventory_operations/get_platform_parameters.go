// Code generated by go-swagger; DO NOT EDIT.

package inventory_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
)

// NewGetPlatformParams creates a new GetPlatformParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewGetPlatformParams() *GetPlatformParams {
	return &GetPlatformParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewGetPlatformParamsWithTimeout creates a new GetPlatformParams object
// with the ability to set a timeout on a request.
func NewGetPlatformParamsWithTimeout(timeout time.Duration) *GetPlatformParams {
	return &GetPlatformParams{
		timeout: timeout,
	}
}

// NewGetPlatformParamsWithContext creates a new GetPlatformParams object
// with the ability to set a context for a request.
func NewGetPlatformParamsWithContext(ctx context.Context) *GetPlatformParams {
	return &GetPlatformParams{
		Context: ctx,
	}
}

// NewGetPlatformParamsWithHTTPClient creates a new GetPlatformParams object
// with the ability to set a custom HTTPClient for a request.
func NewGetPlatformParamsWithHTTPClient(client *http.Client) *GetPlatformParams {
	return &GetPlatformParams{
		HTTPClient: client,
	}
}

/* GetPlatformParams contains all the parameters to send to the API endpoint
   for the get platform operation.

   Typically these are written to a http.Request.
*/
type GetPlatformParams struct {

	/* AllowUnstable.

	   Whether to show an unstable revision of a resource if there is an available unstable version newer than the newest available stable version
	*/
	AllowUnstable *bool

	// PlatformID.
	//
	// Format: uuid
	PlatformID strfmt.UUID

	/* StateAt.

	   Show the state of a resource as it was at the specified timestamp. If omitted, shows the current state of the resource.

	   Format: date-time
	*/
	StateAt *strfmt.DateTime

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the get platform params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetPlatformParams) WithDefaults() *GetPlatformParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the get platform params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *GetPlatformParams) SetDefaults() {
	var (
		allowUnstableDefault = bool(false)
	)

	val := GetPlatformParams{
		AllowUnstable: &allowUnstableDefault,
	}

	val.timeout = o.timeout
	val.Context = o.Context
	val.HTTPClient = o.HTTPClient
	*o = val
}

// WithTimeout adds the timeout to the get platform params
func (o *GetPlatformParams) WithTimeout(timeout time.Duration) *GetPlatformParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get platform params
func (o *GetPlatformParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get platform params
func (o *GetPlatformParams) WithContext(ctx context.Context) *GetPlatformParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get platform params
func (o *GetPlatformParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get platform params
func (o *GetPlatformParams) WithHTTPClient(client *http.Client) *GetPlatformParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get platform params
func (o *GetPlatformParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAllowUnstable adds the allowUnstable to the get platform params
func (o *GetPlatformParams) WithAllowUnstable(allowUnstable *bool) *GetPlatformParams {
	o.SetAllowUnstable(allowUnstable)
	return o
}

// SetAllowUnstable adds the allowUnstable to the get platform params
func (o *GetPlatformParams) SetAllowUnstable(allowUnstable *bool) {
	o.AllowUnstable = allowUnstable
}

// WithPlatformID adds the platformID to the get platform params
func (o *GetPlatformParams) WithPlatformID(platformID strfmt.UUID) *GetPlatformParams {
	o.SetPlatformID(platformID)
	return o
}

// SetPlatformID adds the platformId to the get platform params
func (o *GetPlatformParams) SetPlatformID(platformID strfmt.UUID) {
	o.PlatformID = platformID
}

// WithStateAt adds the stateAt to the get platform params
func (o *GetPlatformParams) WithStateAt(stateAt *strfmt.DateTime) *GetPlatformParams {
	o.SetStateAt(stateAt)
	return o
}

// SetStateAt adds the stateAt to the get platform params
func (o *GetPlatformParams) SetStateAt(stateAt *strfmt.DateTime) {
	o.StateAt = stateAt
}

// WriteToRequest writes these params to a swagger request
func (o *GetPlatformParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.AllowUnstable != nil {

		// query param allow_unstable
		var qrAllowUnstable bool

		if o.AllowUnstable != nil {
			qrAllowUnstable = *o.AllowUnstable
		}
		qAllowUnstable := swag.FormatBool(qrAllowUnstable)
		if qAllowUnstable != "" {

			if err := r.SetQueryParam("allow_unstable", qAllowUnstable); err != nil {
				return err
			}
		}
	}

	// path param platform_id
	if err := r.SetPathParam("platform_id", o.PlatformID.String()); err != nil {
		return err
	}

	if o.StateAt != nil {

		// query param state_at
		var qrStateAt strfmt.DateTime

		if o.StateAt != nil {
			qrStateAt = *o.StateAt
		}
		qStateAt := qrStateAt.String()
		if qStateAt != "" {

			if err := r.SetQueryParam("state_at", qStateAt); err != nil {
				return err
			}
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
