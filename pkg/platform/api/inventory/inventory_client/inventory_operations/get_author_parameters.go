// Code generated by go-swagger; DO NOT EDIT.

package inventory_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"
)

// NewGetAuthorParams creates a new GetAuthorParams object
// with the default values initialized.
func NewGetAuthorParams() *GetAuthorParams {
	var ()
	return &GetAuthorParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetAuthorParamsWithTimeout creates a new GetAuthorParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetAuthorParamsWithTimeout(timeout time.Duration) *GetAuthorParams {
	var ()
	return &GetAuthorParams{

		timeout: timeout,
	}
}

// NewGetAuthorParamsWithContext creates a new GetAuthorParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetAuthorParamsWithContext(ctx context.Context) *GetAuthorParams {
	var ()
	return &GetAuthorParams{

		Context: ctx,
	}
}

// NewGetAuthorParamsWithHTTPClient creates a new GetAuthorParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetAuthorParamsWithHTTPClient(client *http.Client) *GetAuthorParams {
	var ()
	return &GetAuthorParams{
		HTTPClient: client,
	}
}

/*GetAuthorParams contains all the parameters to send to the API endpoint
for the get author operation typically these are written to a http.Request
*/
type GetAuthorParams struct {

	/*AuthorIDOrEmail*/
	AuthorIDOrEmail string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get author params
func (o *GetAuthorParams) WithTimeout(timeout time.Duration) *GetAuthorParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get author params
func (o *GetAuthorParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get author params
func (o *GetAuthorParams) WithContext(ctx context.Context) *GetAuthorParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get author params
func (o *GetAuthorParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get author params
func (o *GetAuthorParams) WithHTTPClient(client *http.Client) *GetAuthorParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get author params
func (o *GetAuthorParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAuthorIDOrEmail adds the authorIDOrEmail to the get author params
func (o *GetAuthorParams) WithAuthorIDOrEmail(authorIDOrEmail string) *GetAuthorParams {
	o.SetAuthorIDOrEmail(authorIDOrEmail)
	return o
}

// SetAuthorIDOrEmail adds the authorIdOrEmail to the get author params
func (o *GetAuthorParams) SetAuthorIDOrEmail(authorIDOrEmail string) {
	o.AuthorIDOrEmail = authorIDOrEmail
}

// WriteToRequest writes these params to a swagger request
func (o *GetAuthorParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param author_id_or_email
	if err := r.SetPathParam("author_id_or_email", o.AuthorIDOrEmail); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
