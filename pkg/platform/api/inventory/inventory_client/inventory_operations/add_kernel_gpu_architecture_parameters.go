// Code generated by go-swagger; DO NOT EDIT.

package inventory_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/inventory/inventory_models"
)

// NewAddKernelGpuArchitectureParams creates a new AddKernelGpuArchitectureParams object
// with the default values initialized.
func NewAddKernelGpuArchitectureParams() *AddKernelGpuArchitectureParams {
	var ()
	return &AddKernelGpuArchitectureParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewAddKernelGpuArchitectureParamsWithTimeout creates a new AddKernelGpuArchitectureParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewAddKernelGpuArchitectureParamsWithTimeout(timeout time.Duration) *AddKernelGpuArchitectureParams {
	var ()
	return &AddKernelGpuArchitectureParams{

		timeout: timeout,
	}
}

// NewAddKernelGpuArchitectureParamsWithContext creates a new AddKernelGpuArchitectureParams object
// with the default values initialized, and the ability to set a context for a request
func NewAddKernelGpuArchitectureParamsWithContext(ctx context.Context) *AddKernelGpuArchitectureParams {
	var ()
	return &AddKernelGpuArchitectureParams{

		Context: ctx,
	}
}

// NewAddKernelGpuArchitectureParamsWithHTTPClient creates a new AddKernelGpuArchitectureParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewAddKernelGpuArchitectureParamsWithHTTPClient(client *http.Client) *AddKernelGpuArchitectureParams {
	var ()
	return &AddKernelGpuArchitectureParams{
		HTTPClient: client,
	}
}

/*AddKernelGpuArchitectureParams contains all the parameters to send to the API endpoint
for the add kernel gpu architecture operation typically these are written to a http.Request
*/
type AddKernelGpuArchitectureParams struct {

	/*GpuArchitectureID*/
	GpuArchitectureID *inventory_models.AddKernelGpuArchitectureParamsBody
	/*KernelID*/
	KernelID strfmt.UUID

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the add kernel gpu architecture params
func (o *AddKernelGpuArchitectureParams) WithTimeout(timeout time.Duration) *AddKernelGpuArchitectureParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add kernel gpu architecture params
func (o *AddKernelGpuArchitectureParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add kernel gpu architecture params
func (o *AddKernelGpuArchitectureParams) WithContext(ctx context.Context) *AddKernelGpuArchitectureParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add kernel gpu architecture params
func (o *AddKernelGpuArchitectureParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add kernel gpu architecture params
func (o *AddKernelGpuArchitectureParams) WithHTTPClient(client *http.Client) *AddKernelGpuArchitectureParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add kernel gpu architecture params
func (o *AddKernelGpuArchitectureParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithGpuArchitectureID adds the gpuArchitectureID to the add kernel gpu architecture params
func (o *AddKernelGpuArchitectureParams) WithGpuArchitectureID(gpuArchitectureID *inventory_models.AddKernelGpuArchitectureParamsBody) *AddKernelGpuArchitectureParams {
	o.SetGpuArchitectureID(gpuArchitectureID)
	return o
}

// SetGpuArchitectureID adds the gpuArchitectureId to the add kernel gpu architecture params
func (o *AddKernelGpuArchitectureParams) SetGpuArchitectureID(gpuArchitectureID *inventory_models.AddKernelGpuArchitectureParamsBody) {
	o.GpuArchitectureID = gpuArchitectureID
}

// WithKernelID adds the kernelID to the add kernel gpu architecture params
func (o *AddKernelGpuArchitectureParams) WithKernelID(kernelID strfmt.UUID) *AddKernelGpuArchitectureParams {
	o.SetKernelID(kernelID)
	return o
}

// SetKernelID adds the kernelId to the add kernel gpu architecture params
func (o *AddKernelGpuArchitectureParams) SetKernelID(kernelID strfmt.UUID) {
	o.KernelID = kernelID
}

// WriteToRequest writes these params to a swagger request
func (o *AddKernelGpuArchitectureParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.GpuArchitectureID != nil {
		if err := r.SetBodyParam(o.GpuArchitectureID); err != nil {
			return err
		}
	}

	// path param kernel_id
	if err := r.SetPathParam("kernel_id", o.KernelID.String()); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
