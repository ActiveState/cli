// Code generated by go-swagger; DO NOT EDIT.

package inventory_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/inventory/inventory_models"
)

// GetSolutionRecipeReader is a Reader for the GetSolutionRecipe structure.
type GetSolutionRecipeReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSolutionRecipeReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetSolutionRecipeOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetSolutionRecipeDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSolutionRecipeOK creates a GetSolutionRecipeOK with default headers values
func NewGetSolutionRecipeOK() *GetSolutionRecipeOK {
	var (
		// initialize headers with default values
		cacheControlDefault = string("private, max-age 3600")
	)

	return &GetSolutionRecipeOK{

		CacheControl: cacheControlDefault,
	}
}

/* GetSolutionRecipeOK describes a response with status code 200, with default header values.

The retrieved recipe
*/
type GetSolutionRecipeOK struct {
	CacheControl string

	Payload *inventory_models.SolutionRecipe
}

func (o *GetSolutionRecipeOK) Error() string {
	return fmt.Sprintf("[GET /v1/solutions/recipes/{recipe_id}][%d] getSolutionRecipeOK  %+v", 200, o.Payload)
}
func (o *GetSolutionRecipeOK) GetPayload() *inventory_models.SolutionRecipe {
	return o.Payload
}

func (o *GetSolutionRecipeOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// hydrates response header Cache-Control
	hdrCacheControl := response.GetHeader("Cache-Control")

	if hdrCacheControl != "" {
		o.CacheControl = hdrCacheControl
	}

	o.Payload = new(inventory_models.SolutionRecipe)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSolutionRecipeDefault creates a GetSolutionRecipeDefault with default headers values
func NewGetSolutionRecipeDefault(code int) *GetSolutionRecipeDefault {
	return &GetSolutionRecipeDefault{
		_statusCode: code,
	}
}

/* GetSolutionRecipeDefault describes a response with status code -1, with default header values.

generic error response
*/
type GetSolutionRecipeDefault struct {
	_statusCode int

	Payload *inventory_models.RestAPIError
}

// Code gets the status code for the get solution recipe default response
func (o *GetSolutionRecipeDefault) Code() int {
	return o._statusCode
}

func (o *GetSolutionRecipeDefault) Error() string {
	return fmt.Sprintf("[GET /v1/solutions/recipes/{recipe_id}][%d] getSolutionRecipe default  %+v", o._statusCode, o.Payload)
}
func (o *GetSolutionRecipeDefault) GetPayload() *inventory_models.RestAPIError {
	return o.Payload
}

func (o *GetSolutionRecipeDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.RestAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
