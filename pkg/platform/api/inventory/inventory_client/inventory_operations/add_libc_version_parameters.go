// Code generated by go-swagger; DO NOT EDIT.

package inventory_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/inventory/inventory_models"
)

// NewAddLibcVersionParams creates a new AddLibcVersionParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAddLibcVersionParams() *AddLibcVersionParams {
	return &AddLibcVersionParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAddLibcVersionParamsWithTimeout creates a new AddLibcVersionParams object
// with the ability to set a timeout on a request.
func NewAddLibcVersionParamsWithTimeout(timeout time.Duration) *AddLibcVersionParams {
	return &AddLibcVersionParams{
		timeout: timeout,
	}
}

// NewAddLibcVersionParamsWithContext creates a new AddLibcVersionParams object
// with the ability to set a context for a request.
func NewAddLibcVersionParamsWithContext(ctx context.Context) *AddLibcVersionParams {
	return &AddLibcVersionParams{
		Context: ctx,
	}
}

// NewAddLibcVersionParamsWithHTTPClient creates a new AddLibcVersionParams object
// with the ability to set a custom HTTPClient for a request.
func NewAddLibcVersionParamsWithHTTPClient(client *http.Client) *AddLibcVersionParams {
	return &AddLibcVersionParams{
		HTTPClient: client,
	}
}

/* AddLibcVersionParams contains all the parameters to send to the API endpoint
   for the add libc version operation.

   Typically these are written to a http.Request.
*/
type AddLibcVersionParams struct {

	// LibcID.
	//
	// Format: uuid
	LibcID strfmt.UUID

	// LibcVersion.
	LibcVersion *inventory_models.LibcVersionCore

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the add libc version params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddLibcVersionParams) WithDefaults() *AddLibcVersionParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the add libc version params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddLibcVersionParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the add libc version params
func (o *AddLibcVersionParams) WithTimeout(timeout time.Duration) *AddLibcVersionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add libc version params
func (o *AddLibcVersionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add libc version params
func (o *AddLibcVersionParams) WithContext(ctx context.Context) *AddLibcVersionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add libc version params
func (o *AddLibcVersionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add libc version params
func (o *AddLibcVersionParams) WithHTTPClient(client *http.Client) *AddLibcVersionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add libc version params
func (o *AddLibcVersionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLibcID adds the libcID to the add libc version params
func (o *AddLibcVersionParams) WithLibcID(libcID strfmt.UUID) *AddLibcVersionParams {
	o.SetLibcID(libcID)
	return o
}

// SetLibcID adds the libcId to the add libc version params
func (o *AddLibcVersionParams) SetLibcID(libcID strfmt.UUID) {
	o.LibcID = libcID
}

// WithLibcVersion adds the libcVersion to the add libc version params
func (o *AddLibcVersionParams) WithLibcVersion(libcVersion *inventory_models.LibcVersionCore) *AddLibcVersionParams {
	o.SetLibcVersion(libcVersion)
	return o
}

// SetLibcVersion adds the libcVersion to the add libc version params
func (o *AddLibcVersionParams) SetLibcVersion(libcVersion *inventory_models.LibcVersionCore) {
	o.LibcVersion = libcVersion
}

// WriteToRequest writes these params to a swagger request
func (o *AddLibcVersionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param libc_id
	if err := r.SetPathParam("libc_id", o.LibcID.String()); err != nil {
		return err
	}
	if o.LibcVersion != nil {
		if err := r.SetBodyParam(o.LibcVersion); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
