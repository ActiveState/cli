// Code generated by go-swagger; DO NOT EDIT.

package inventory_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/inventory/inventory_models"
)

// SearchIngredientsReader is a Reader for the SearchIngredients structure.
type SearchIngredientsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *SearchIngredientsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewSearchIngredientsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewSearchIngredientsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewSearchIngredientsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewSearchIngredientsOK creates a SearchIngredientsOK with default headers values
func NewSearchIngredientsOK() *SearchIngredientsOK {
	return &SearchIngredientsOK{}
}

/* SearchIngredientsOK describes a response with status code 200, with default header values.

A paginated list of search results
*/
type SearchIngredientsOK struct {
	Payload *inventory_models.SearchIngredientsResponse
}

func (o *SearchIngredientsOK) Error() string {
	return fmt.Sprintf("[GET /v1/ingredients/search][%d] searchIngredientsOK  %+v", 200, o.Payload)
}
func (o *SearchIngredientsOK) GetPayload() *inventory_models.SearchIngredientsResponse {
	return o.Payload
}

func (o *SearchIngredientsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.SearchIngredientsResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchIngredientsBadRequest creates a SearchIngredientsBadRequest with default headers values
func NewSearchIngredientsBadRequest() *SearchIngredientsBadRequest {
	return &SearchIngredientsBadRequest{}
}

/* SearchIngredientsBadRequest describes a response with status code 400, with default header values.

The search parameters are invalid
*/
type SearchIngredientsBadRequest struct {
	Payload *inventory_models.RestAPIValidationError
}

func (o *SearchIngredientsBadRequest) Error() string {
	return fmt.Sprintf("[GET /v1/ingredients/search][%d] searchIngredientsBadRequest  %+v", 400, o.Payload)
}
func (o *SearchIngredientsBadRequest) GetPayload() *inventory_models.RestAPIValidationError {
	return o.Payload
}

func (o *SearchIngredientsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.RestAPIValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewSearchIngredientsDefault creates a SearchIngredientsDefault with default headers values
func NewSearchIngredientsDefault(code int) *SearchIngredientsDefault {
	return &SearchIngredientsDefault{
		_statusCode: code,
	}
}

/* SearchIngredientsDefault describes a response with status code -1, with default header values.

generic error response
*/
type SearchIngredientsDefault struct {
	_statusCode int

	Payload *inventory_models.RestAPIError
}

// Code gets the status code for the search ingredients default response
func (o *SearchIngredientsDefault) Code() int {
	return o._statusCode
}

func (o *SearchIngredientsDefault) Error() string {
	return fmt.Sprintf("[GET /v1/ingredients/search][%d] searchIngredients default  %+v", o._statusCode, o.Payload)
}
func (o *SearchIngredientsDefault) GetPayload() *inventory_models.RestAPIError {
	return o.Payload
}

func (o *SearchIngredientsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.RestAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
