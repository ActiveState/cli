// Code generated by go-swagger; DO NOT EDIT.

package inventory_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/inventory/inventory_models"
)

// GetCPUExtensionsReader is a Reader for the GetCPUExtensions structure.
type GetCPUExtensionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetCPUExtensionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetCPUExtensionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetCPUExtensionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetCPUExtensionsOK creates a GetCPUExtensionsOK with default headers values
func NewGetCPUExtensionsOK() *GetCPUExtensionsOK {
	return &GetCPUExtensionsOK{}
}

/* GetCPUExtensionsOK describes a response with status code 200, with default header values.

A paginated list of CPU extensions
*/
type GetCPUExtensionsOK struct {
	Payload *inventory_models.CPUExtensionPagedList
}

func (o *GetCPUExtensionsOK) Error() string {
	return fmt.Sprintf("[GET /v1/cpu-extensions][%d] getCpuExtensionsOK  %+v", 200, o.Payload)
}
func (o *GetCPUExtensionsOK) GetPayload() *inventory_models.CPUExtensionPagedList {
	return o.Payload
}

func (o *GetCPUExtensionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.CPUExtensionPagedList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetCPUExtensionsDefault creates a GetCPUExtensionsDefault with default headers values
func NewGetCPUExtensionsDefault(code int) *GetCPUExtensionsDefault {
	return &GetCPUExtensionsDefault{
		_statusCode: code,
	}
}

/* GetCPUExtensionsDefault describes a response with status code -1, with default header values.

generic error response
*/
type GetCPUExtensionsDefault struct {
	_statusCode int

	Payload *inventory_models.RestAPIError
}

// Code gets the status code for the get Cpu extensions default response
func (o *GetCPUExtensionsDefault) Code() int {
	return o._statusCode
}

func (o *GetCPUExtensionsDefault) Error() string {
	return fmt.Sprintf("[GET /v1/cpu-extensions][%d] getCpuExtensions default  %+v", o._statusCode, o.Payload)
}
func (o *GetCPUExtensionsDefault) GetPayload() *inventory_models.RestAPIError {
	return o.Payload
}

func (o *GetCPUExtensionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.RestAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
