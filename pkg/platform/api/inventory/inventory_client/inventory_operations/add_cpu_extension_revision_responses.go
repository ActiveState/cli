// Code generated by go-swagger; DO NOT EDIT.

package inventory_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/inventory/inventory_models"
)

// AddCPUExtensionRevisionReader is a Reader for the AddCPUExtensionRevision structure.
type AddCPUExtensionRevisionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddCPUExtensionRevisionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddCPUExtensionRevisionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddCPUExtensionRevisionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAddCPUExtensionRevisionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAddCPUExtensionRevisionOK creates a AddCPUExtensionRevisionOK with default headers values
func NewAddCPUExtensionRevisionOK() *AddCPUExtensionRevisionOK {
	return &AddCPUExtensionRevisionOK{}
}

/* AddCPUExtensionRevisionOK describes a response with status code 200, with default header values.

The updated state of the CPU extension
*/
type AddCPUExtensionRevisionOK struct {
	Payload *inventory_models.CPUExtension
}

func (o *AddCPUExtensionRevisionOK) Error() string {
	return fmt.Sprintf("[POST /v1/cpu-extensions/{cpu_extension_id}/revisions][%d] addCpuExtensionRevisionOK  %+v", 200, o.Payload)
}
func (o *AddCPUExtensionRevisionOK) GetPayload() *inventory_models.CPUExtension {
	return o.Payload
}

func (o *AddCPUExtensionRevisionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.CPUExtension)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddCPUExtensionRevisionBadRequest creates a AddCPUExtensionRevisionBadRequest with default headers values
func NewAddCPUExtensionRevisionBadRequest() *AddCPUExtensionRevisionBadRequest {
	return &AddCPUExtensionRevisionBadRequest{}
}

/* AddCPUExtensionRevisionBadRequest describes a response with status code 400, with default header values.

If the CPU extension revision is invalid
*/
type AddCPUExtensionRevisionBadRequest struct {
	Payload *inventory_models.RestAPIValidationError
}

func (o *AddCPUExtensionRevisionBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/cpu-extensions/{cpu_extension_id}/revisions][%d] addCpuExtensionRevisionBadRequest  %+v", 400, o.Payload)
}
func (o *AddCPUExtensionRevisionBadRequest) GetPayload() *inventory_models.RestAPIValidationError {
	return o.Payload
}

func (o *AddCPUExtensionRevisionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.RestAPIValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddCPUExtensionRevisionDefault creates a AddCPUExtensionRevisionDefault with default headers values
func NewAddCPUExtensionRevisionDefault(code int) *AddCPUExtensionRevisionDefault {
	return &AddCPUExtensionRevisionDefault{
		_statusCode: code,
	}
}

/* AddCPUExtensionRevisionDefault describes a response with status code -1, with default header values.

If there is an error processing the request
*/
type AddCPUExtensionRevisionDefault struct {
	_statusCode int

	Payload *inventory_models.RestAPIError
}

// Code gets the status code for the add Cpu extension revision default response
func (o *AddCPUExtensionRevisionDefault) Code() int {
	return o._statusCode
}

func (o *AddCPUExtensionRevisionDefault) Error() string {
	return fmt.Sprintf("[POST /v1/cpu-extensions/{cpu_extension_id}/revisions][%d] addCpuExtensionRevision default  %+v", o._statusCode, o.Payload)
}
func (o *AddCPUExtensionRevisionDefault) GetPayload() *inventory_models.RestAPIError {
	return o.Payload
}

func (o *AddCPUExtensionRevisionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.RestAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
