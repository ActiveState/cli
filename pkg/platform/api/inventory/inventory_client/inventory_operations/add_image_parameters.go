// Code generated by go-swagger; DO NOT EDIT.

package inventory_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/inventory/inventory_models"
)

// NewAddImageParams creates a new AddImageParams object,
// with the default timeout for this client.
//
// Default values are not hydrated, since defaults are normally applied by the API server side.
//
// To enforce default values in parameter, use SetDefaults or WithDefaults.
func NewAddImageParams() *AddImageParams {
	return &AddImageParams{
		timeout: cr.DefaultTimeout,
	}
}

// NewAddImageParamsWithTimeout creates a new AddImageParams object
// with the ability to set a timeout on a request.
func NewAddImageParamsWithTimeout(timeout time.Duration) *AddImageParams {
	return &AddImageParams{
		timeout: timeout,
	}
}

// NewAddImageParamsWithContext creates a new AddImageParams object
// with the ability to set a context for a request.
func NewAddImageParamsWithContext(ctx context.Context) *AddImageParams {
	return &AddImageParams{
		Context: ctx,
	}
}

// NewAddImageParamsWithHTTPClient creates a new AddImageParams object
// with the ability to set a custom HTTPClient for a request.
func NewAddImageParamsWithHTTPClient(client *http.Client) *AddImageParams {
	return &AddImageParams{
		HTTPClient: client,
	}
}

/* AddImageParams contains all the parameters to send to the API endpoint
   for the add image operation.

   Typically these are written to a http.Request.
*/
type AddImageParams struct {

	// Image.
	Image *inventory_models.ImageCore

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithDefaults hydrates default values in the add image params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddImageParams) WithDefaults() *AddImageParams {
	o.SetDefaults()
	return o
}

// SetDefaults hydrates default values in the add image params (not the query body).
//
// All values with no default are reset to their zero value.
func (o *AddImageParams) SetDefaults() {
	// no default values defined for this parameter
}

// WithTimeout adds the timeout to the add image params
func (o *AddImageParams) WithTimeout(timeout time.Duration) *AddImageParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the add image params
func (o *AddImageParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the add image params
func (o *AddImageParams) WithContext(ctx context.Context) *AddImageParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the add image params
func (o *AddImageParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the add image params
func (o *AddImageParams) WithHTTPClient(client *http.Client) *AddImageParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the add image params
func (o *AddImageParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithImage adds the image to the add image params
func (o *AddImageParams) WithImage(image *inventory_models.ImageCore) *AddImageParams {
	o.SetImage(image)
	return o
}

// SetImage adds the image to the add image params
func (o *AddImageParams) SetImage(image *inventory_models.ImageCore) {
	o.Image = image
}

// WriteToRequest writes these params to a swagger request
func (o *AddImageParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error
	if o.Image != nil {
		if err := r.SetBodyParam(o.Image); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
