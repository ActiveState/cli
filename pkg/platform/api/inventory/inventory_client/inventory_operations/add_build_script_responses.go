// Code generated by go-swagger; DO NOT EDIT.

package inventory_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/inventory/inventory_models"
)

// AddBuildScriptReader is a Reader for the AddBuildScript structure.
type AddBuildScriptReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddBuildScriptReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddBuildScriptCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddBuildScriptBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAddBuildScriptDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAddBuildScriptCreated creates a AddBuildScriptCreated with default headers values
func NewAddBuildScriptCreated() *AddBuildScriptCreated {
	return &AddBuildScriptCreated{}
}

/* AddBuildScriptCreated describes a response with status code 201, with default header values.

The added build script
*/
type AddBuildScriptCreated struct {
	Payload *inventory_models.BuildScript
}

func (o *AddBuildScriptCreated) Error() string {
	return fmt.Sprintf("[POST /v1/build-scripts][%d] addBuildScriptCreated  %+v", 201, o.Payload)
}
func (o *AddBuildScriptCreated) GetPayload() *inventory_models.BuildScript {
	return o.Payload
}

func (o *AddBuildScriptCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.BuildScript)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddBuildScriptBadRequest creates a AddBuildScriptBadRequest with default headers values
func NewAddBuildScriptBadRequest() *AddBuildScriptBadRequest {
	return &AddBuildScriptBadRequest{}
}

/* AddBuildScriptBadRequest describes a response with status code 400, with default header values.

If the build script is invalid
*/
type AddBuildScriptBadRequest struct {
	Payload *inventory_models.RestAPIValidationError
}

func (o *AddBuildScriptBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/build-scripts][%d] addBuildScriptBadRequest  %+v", 400, o.Payload)
}
func (o *AddBuildScriptBadRequest) GetPayload() *inventory_models.RestAPIValidationError {
	return o.Payload
}

func (o *AddBuildScriptBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.RestAPIValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddBuildScriptDefault creates a AddBuildScriptDefault with default headers values
func NewAddBuildScriptDefault(code int) *AddBuildScriptDefault {
	return &AddBuildScriptDefault{
		_statusCode: code,
	}
}

/* AddBuildScriptDefault describes a response with status code -1, with default header values.

If there is an error processing the request
*/
type AddBuildScriptDefault struct {
	_statusCode int

	Payload *inventory_models.RestAPIError
}

// Code gets the status code for the add build script default response
func (o *AddBuildScriptDefault) Code() int {
	return o._statusCode
}

func (o *AddBuildScriptDefault) Error() string {
	return fmt.Sprintf("[POST /v1/build-scripts][%d] addBuildScript default  %+v", o._statusCode, o.Payload)
}
func (o *AddBuildScriptDefault) GetPayload() *inventory_models.RestAPIError {
	return o.Payload
}

func (o *AddBuildScriptDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.RestAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
