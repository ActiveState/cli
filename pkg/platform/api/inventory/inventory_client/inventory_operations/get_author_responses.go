// Code generated by go-swagger; DO NOT EDIT.

package inventory_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/inventory/inventory_models"
)

// GetAuthorReader is a Reader for the GetAuthor structure.
type GetAuthorReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuthorReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetAuthorOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	default:
		result := NewGetAuthorDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetAuthorOK creates a GetAuthorOK with default headers values
func NewGetAuthorOK() *GetAuthorOK {
	return &GetAuthorOK{}
}

/* GetAuthorOK describes a response with status code 200, with default header values.

Retrieve the author
*/
type GetAuthorOK struct {
	Payload *inventory_models.Author
}

func (o *GetAuthorOK) Error() string {
	return fmt.Sprintf("[GET /v1/authors/{author_id_or_email}][%d] getAuthorOK  %+v", 200, o.Payload)
}
func (o *GetAuthorOK) GetPayload() *inventory_models.Author {
	return o.Payload
}

func (o *GetAuthorOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.Author)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetAuthorDefault creates a GetAuthorDefault with default headers values
func NewGetAuthorDefault(code int) *GetAuthorDefault {
	return &GetAuthorDefault{
		_statusCode: code,
	}
}

/* GetAuthorDefault describes a response with status code -1, with default header values.

generic error response
*/
type GetAuthorDefault struct {
	_statusCode int

	Payload *inventory_models.RestAPIError
}

// Code gets the status code for the get author default response
func (o *GetAuthorDefault) Code() int {
	return o._statusCode
}

func (o *GetAuthorDefault) Error() string {
	return fmt.Sprintf("[GET /v1/authors/{author_id_or_email}][%d] getAuthor default  %+v", o._statusCode, o.Payload)
}
func (o *GetAuthorDefault) GetPayload() *inventory_models.RestAPIError {
	return o.Payload
}

func (o *GetAuthorDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.RestAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
