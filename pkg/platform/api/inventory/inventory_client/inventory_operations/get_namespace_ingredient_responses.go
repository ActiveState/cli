// Code generated by go-swagger; DO NOT EDIT.

package inventory_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/inventory/inventory_models"
)

// GetNamespaceIngredientReader is a Reader for the GetNamespaceIngredient structure.
type GetNamespaceIngredientReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetNamespaceIngredientReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewGetNamespaceIngredientOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 404:
		result := NewGetNamespaceIngredientNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewGetNamespaceIngredientDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetNamespaceIngredientOK creates a GetNamespaceIngredientOK with default headers values
func NewGetNamespaceIngredientOK() *GetNamespaceIngredientOK {
	return &GetNamespaceIngredientOK{}
}

/* GetNamespaceIngredientOK describes a response with status code 200, with default header values.

The retrieved ingredient
*/
type GetNamespaceIngredientOK struct {
	Payload *inventory_models.Ingredient
}

func (o *GetNamespaceIngredientOK) Error() string {
	return fmt.Sprintf("[GET /v1/namespaces/ingredient][%d] getNamespaceIngredientOK  %+v", 200, o.Payload)
}
func (o *GetNamespaceIngredientOK) GetPayload() *inventory_models.Ingredient {
	return o.Payload
}

func (o *GetNamespaceIngredientOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.Ingredient)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNamespaceIngredientNotFound creates a GetNamespaceIngredientNotFound with default headers values
func NewGetNamespaceIngredientNotFound() *GetNamespaceIngredientNotFound {
	return &GetNamespaceIngredientNotFound{}
}

/* GetNamespaceIngredientNotFound describes a response with status code 404, with default header values.

There is no ingredient with the given namespace and name
*/
type GetNamespaceIngredientNotFound struct {
	Payload *inventory_models.RestAPIError
}

func (o *GetNamespaceIngredientNotFound) Error() string {
	return fmt.Sprintf("[GET /v1/namespaces/ingredient][%d] getNamespaceIngredientNotFound  %+v", 404, o.Payload)
}
func (o *GetNamespaceIngredientNotFound) GetPayload() *inventory_models.RestAPIError {
	return o.Payload
}

func (o *GetNamespaceIngredientNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.RestAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetNamespaceIngredientDefault creates a GetNamespaceIngredientDefault with default headers values
func NewGetNamespaceIngredientDefault(code int) *GetNamespaceIngredientDefault {
	return &GetNamespaceIngredientDefault{
		_statusCode: code,
	}
}

/* GetNamespaceIngredientDefault describes a response with status code -1, with default header values.

generic error response
*/
type GetNamespaceIngredientDefault struct {
	_statusCode int

	Payload *inventory_models.RestAPIError
}

// Code gets the status code for the get namespace ingredient default response
func (o *GetNamespaceIngredientDefault) Code() int {
	return o._statusCode
}

func (o *GetNamespaceIngredientDefault) Error() string {
	return fmt.Sprintf("[GET /v1/namespaces/ingredient][%d] getNamespaceIngredient default  %+v", o._statusCode, o.Payload)
}
func (o *GetNamespaceIngredientDefault) GetPayload() *inventory_models.RestAPIError {
	return o.Payload
}

func (o *GetNamespaceIngredientDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.RestAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
