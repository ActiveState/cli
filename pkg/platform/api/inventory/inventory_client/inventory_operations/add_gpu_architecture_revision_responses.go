// Code generated by go-swagger; DO NOT EDIT.

package inventory_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/inventory/inventory_models"
)

// AddGpuArchitectureRevisionReader is a Reader for the AddGpuArchitectureRevision structure.
type AddGpuArchitectureRevisionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddGpuArchitectureRevisionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddGpuArchitectureRevisionOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddGpuArchitectureRevisionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAddGpuArchitectureRevisionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAddGpuArchitectureRevisionOK creates a AddGpuArchitectureRevisionOK with default headers values
func NewAddGpuArchitectureRevisionOK() *AddGpuArchitectureRevisionOK {
	return &AddGpuArchitectureRevisionOK{}
}

/*AddGpuArchitectureRevisionOK handles this case with default header values.

The updated state of the GPU architecture
*/
type AddGpuArchitectureRevisionOK struct {
	Payload *inventory_models.V1GpuArchitecture
}

func (o *AddGpuArchitectureRevisionOK) Error() string {
	return fmt.Sprintf("[POST /v1/gpu-architectures/{gpu_architecture_id}/revisions][%d] addGpuArchitectureRevisionOK  %+v", 200, o.Payload)
}

func (o *AddGpuArchitectureRevisionOK) GetPayload() *inventory_models.V1GpuArchitecture {
	return o.Payload
}

func (o *AddGpuArchitectureRevisionOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.V1GpuArchitecture)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddGpuArchitectureRevisionBadRequest creates a AddGpuArchitectureRevisionBadRequest with default headers values
func NewAddGpuArchitectureRevisionBadRequest() *AddGpuArchitectureRevisionBadRequest {
	return &AddGpuArchitectureRevisionBadRequest{}
}

/*AddGpuArchitectureRevisionBadRequest handles this case with default header values.

If the GPU architecture revision is invalid
*/
type AddGpuArchitectureRevisionBadRequest struct {
	Payload *inventory_models.RestAPIValidationError
}

func (o *AddGpuArchitectureRevisionBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/gpu-architectures/{gpu_architecture_id}/revisions][%d] addGpuArchitectureRevisionBadRequest  %+v", 400, o.Payload)
}

func (o *AddGpuArchitectureRevisionBadRequest) GetPayload() *inventory_models.RestAPIValidationError {
	return o.Payload
}

func (o *AddGpuArchitectureRevisionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.RestAPIValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddGpuArchitectureRevisionDefault creates a AddGpuArchitectureRevisionDefault with default headers values
func NewAddGpuArchitectureRevisionDefault(code int) *AddGpuArchitectureRevisionDefault {
	return &AddGpuArchitectureRevisionDefault{
		_statusCode: code,
	}
}

/*AddGpuArchitectureRevisionDefault handles this case with default header values.

If there is an error processing the request
*/
type AddGpuArchitectureRevisionDefault struct {
	_statusCode int

	Payload *inventory_models.RestAPIError
}

// Code gets the status code for the add gpu architecture revision default response
func (o *AddGpuArchitectureRevisionDefault) Code() int {
	return o._statusCode
}

func (o *AddGpuArchitectureRevisionDefault) Error() string {
	return fmt.Sprintf("[POST /v1/gpu-architectures/{gpu_architecture_id}/revisions][%d] addGpuArchitectureRevision default  %+v", o._statusCode, o.Payload)
}

func (o *AddGpuArchitectureRevisionDefault) GetPayload() *inventory_models.RestAPIError {
	return o.Payload
}

func (o *AddGpuArchitectureRevisionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.RestAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
