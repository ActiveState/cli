// Code generated by go-swagger; DO NOT EDIT.

package inventory_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/inventory/inventory_models"
)

// AddKernelVersionReader is a Reader for the AddKernelVersion structure.
type AddKernelVersionReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddKernelVersionReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 201:
		result := NewAddKernelVersionCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddKernelVersionBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAddKernelVersionDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAddKernelVersionCreated creates a AddKernelVersionCreated with default headers values
func NewAddKernelVersionCreated() *AddKernelVersionCreated {
	return &AddKernelVersionCreated{}
}

/* AddKernelVersionCreated describes a response with status code 201, with default header values.

The added kernel version
*/
type AddKernelVersionCreated struct {
	Payload *inventory_models.KernelVersion
}

func (o *AddKernelVersionCreated) Error() string {
	return fmt.Sprintf("[POST /v1/kernels/{kernel_id}/versions][%d] addKernelVersionCreated  %+v", 201, o.Payload)
}
func (o *AddKernelVersionCreated) GetPayload() *inventory_models.KernelVersion {
	return o.Payload
}

func (o *AddKernelVersionCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.KernelVersion)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddKernelVersionBadRequest creates a AddKernelVersionBadRequest with default headers values
func NewAddKernelVersionBadRequest() *AddKernelVersionBadRequest {
	return &AddKernelVersionBadRequest{}
}

/* AddKernelVersionBadRequest describes a response with status code 400, with default header values.

If the kernel version is invalid
*/
type AddKernelVersionBadRequest struct {
	Payload *inventory_models.RestAPIValidationError
}

func (o *AddKernelVersionBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/kernels/{kernel_id}/versions][%d] addKernelVersionBadRequest  %+v", 400, o.Payload)
}
func (o *AddKernelVersionBadRequest) GetPayload() *inventory_models.RestAPIValidationError {
	return o.Payload
}

func (o *AddKernelVersionBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.RestAPIValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddKernelVersionDefault creates a AddKernelVersionDefault with default headers values
func NewAddKernelVersionDefault(code int) *AddKernelVersionDefault {
	return &AddKernelVersionDefault{
		_statusCode: code,
	}
}

/* AddKernelVersionDefault describes a response with status code -1, with default header values.

If there is an error processing the request
*/
type AddKernelVersionDefault struct {
	_statusCode int

	Payload *inventory_models.RestAPIError
}

// Code gets the status code for the add kernel version default response
func (o *AddKernelVersionDefault) Code() int {
	return o._statusCode
}

func (o *AddKernelVersionDefault) Error() string {
	return fmt.Sprintf("[POST /v1/kernels/{kernel_id}/versions][%d] addKernelVersion default  %+v", o._statusCode, o.Payload)
}
func (o *AddKernelVersionDefault) GetPayload() *inventory_models.RestAPIError {
	return o.Payload
}

func (o *AddKernelVersionDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.RestAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
