// Code generated by go-swagger; DO NOT EDIT.

package inventory_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/ActiveState/cli/pkg/platform/api/inventory/inventory_models"
)

// AddKernelGpuArchitectureReader is a Reader for the AddKernelGpuArchitecture structure.
type AddKernelGpuArchitectureReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *AddKernelGpuArchitectureReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewAddKernelGpuArchitectureOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewAddKernelGpuArchitectureBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	default:
		result := NewAddKernelGpuArchitectureDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewAddKernelGpuArchitectureOK creates a AddKernelGpuArchitectureOK with default headers values
func NewAddKernelGpuArchitectureOK() *AddKernelGpuArchitectureOK {
	return &AddKernelGpuArchitectureOK{}
}

/*AddKernelGpuArchitectureOK handles this case with default header values.

The GPU architecture added to the kernel
*/
type AddKernelGpuArchitectureOK struct {
	Payload *inventory_models.V1GpuArchitecture
}

func (o *AddKernelGpuArchitectureOK) Error() string {
	return fmt.Sprintf("[POST /v1/kernels/{kernel_id}/gpu-architectures][%d] addKernelGpuArchitectureOK  %+v", 200, o.Payload)
}

func (o *AddKernelGpuArchitectureOK) GetPayload() *inventory_models.V1GpuArchitecture {
	return o.Payload
}

func (o *AddKernelGpuArchitectureOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.V1GpuArchitecture)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddKernelGpuArchitectureBadRequest creates a AddKernelGpuArchitectureBadRequest with default headers values
func NewAddKernelGpuArchitectureBadRequest() *AddKernelGpuArchitectureBadRequest {
	return &AddKernelGpuArchitectureBadRequest{}
}

/*AddKernelGpuArchitectureBadRequest handles this case with default header values.

If the GPU architecture ID doesn't exist
*/
type AddKernelGpuArchitectureBadRequest struct {
	Payload *inventory_models.RestAPIValidationError
}

func (o *AddKernelGpuArchitectureBadRequest) Error() string {
	return fmt.Sprintf("[POST /v1/kernels/{kernel_id}/gpu-architectures][%d] addKernelGpuArchitectureBadRequest  %+v", 400, o.Payload)
}

func (o *AddKernelGpuArchitectureBadRequest) GetPayload() *inventory_models.RestAPIValidationError {
	return o.Payload
}

func (o *AddKernelGpuArchitectureBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.RestAPIValidationError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewAddKernelGpuArchitectureDefault creates a AddKernelGpuArchitectureDefault with default headers values
func NewAddKernelGpuArchitectureDefault(code int) *AddKernelGpuArchitectureDefault {
	return &AddKernelGpuArchitectureDefault{
		_statusCode: code,
	}
}

/*AddKernelGpuArchitectureDefault handles this case with default header values.

generic error response
*/
type AddKernelGpuArchitectureDefault struct {
	_statusCode int

	Payload *inventory_models.RestAPIError
}

// Code gets the status code for the add kernel gpu architecture default response
func (o *AddKernelGpuArchitectureDefault) Code() int {
	return o._statusCode
}

func (o *AddKernelGpuArchitectureDefault) Error() string {
	return fmt.Sprintf("[POST /v1/kernels/{kernel_id}/gpu-architectures][%d] addKernelGpuArchitecture default  %+v", o._statusCode, o.Payload)
}

func (o *AddKernelGpuArchitectureDefault) GetPayload() *inventory_models.RestAPIError {
	return o.Payload
}

func (o *AddKernelGpuArchitectureDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(inventory_models.RestAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
