// Code generated by go-swagger; DO NOT EDIT.

package inventory_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// IngredientOptionSetWithUsageTypeAllOf0 ingredient option set with usage type all of0
//
// swagger:model ingredientOptionSetWithUsageTypeAllOf0
type IngredientOptionSetWithUsageTypeAllOf0 struct {

	// usage type
	// Required: true
	// Enum: [default override]
	UsageType *string `json:"usage_type"`
}

// Validate validates this ingredient option set with usage type all of0
func (m *IngredientOptionSetWithUsageTypeAllOf0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateUsageType(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var ingredientOptionSetWithUsageTypeAllOf0TypeUsageTypePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["default","override"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		ingredientOptionSetWithUsageTypeAllOf0TypeUsageTypePropEnum = append(ingredientOptionSetWithUsageTypeAllOf0TypeUsageTypePropEnum, v)
	}
}

const (

	// IngredientOptionSetWithUsageTypeAllOf0UsageTypeDefault captures enum value "default"
	IngredientOptionSetWithUsageTypeAllOf0UsageTypeDefault string = "default"

	// IngredientOptionSetWithUsageTypeAllOf0UsageTypeOverride captures enum value "override"
	IngredientOptionSetWithUsageTypeAllOf0UsageTypeOverride string = "override"
)

// prop value enum
func (m *IngredientOptionSetWithUsageTypeAllOf0) validateUsageTypeEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, ingredientOptionSetWithUsageTypeAllOf0TypeUsageTypePropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *IngredientOptionSetWithUsageTypeAllOf0) validateUsageType(formats strfmt.Registry) error {

	if err := validate.Required("usage_type", "body", m.UsageType); err != nil {
		return err
	}

	// value enum
	if err := m.validateUsageTypeEnum("usage_type", "body", *m.UsageType); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this ingredient option set with usage type all of0 based on context it is used
func (m *IngredientOptionSetWithUsageTypeAllOf0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *IngredientOptionSetWithUsageTypeAllOf0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *IngredientOptionSetWithUsageTypeAllOf0) UnmarshalBinary(b []byte) error {
	var res IngredientOptionSetWithUsageTypeAllOf0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
