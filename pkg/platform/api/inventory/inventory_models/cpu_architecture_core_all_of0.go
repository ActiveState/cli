// Code generated by go-swagger; DO NOT EDIT.

package inventory_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// CPUArchitectureCoreAllOf0 cpu architecture core all of0
//
// swagger:model cpuArchitectureCoreAllOf0
type CPUArchitectureCoreAllOf0 struct {

	// bit width
	// Required: true
	// Enum: [32 64]
	BitWidth *string `json:"bit_width"`

	// The name of the CPU architecture
	// Required: true
	Name *string `json:"name"`
}

// Validate validates this cpu architecture core all of0
func (m *CPUArchitectureCoreAllOf0) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateBitWidth(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var cpuArchitectureCoreAllOf0TypeBitWidthPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["32","64"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		cpuArchitectureCoreAllOf0TypeBitWidthPropEnum = append(cpuArchitectureCoreAllOf0TypeBitWidthPropEnum, v)
	}
}

const (

	// CPUArchitectureCoreAllOf0BitWidthNr32 captures enum value "32"
	CPUArchitectureCoreAllOf0BitWidthNr32 string = "32"

	// CPUArchitectureCoreAllOf0BitWidthNr64 captures enum value "64"
	CPUArchitectureCoreAllOf0BitWidthNr64 string = "64"
)

// prop value enum
func (m *CPUArchitectureCoreAllOf0) validateBitWidthEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, cpuArchitectureCoreAllOf0TypeBitWidthPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *CPUArchitectureCoreAllOf0) validateBitWidth(formats strfmt.Registry) error {

	if err := validate.Required("bit_width", "body", m.BitWidth); err != nil {
		return err
	}

	// value enum
	if err := m.validateBitWidthEnum("bit_width", "body", *m.BitWidth); err != nil {
		return err
	}

	return nil
}

func (m *CPUArchitectureCoreAllOf0) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this cpu architecture core all of0 based on context it is used
func (m *CPUArchitectureCoreAllOf0) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *CPUArchitectureCoreAllOf0) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *CPUArchitectureCoreAllOf0) UnmarshalBinary(b []byte) error {
	var res CPUArchitectureCoreAllOf0
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
