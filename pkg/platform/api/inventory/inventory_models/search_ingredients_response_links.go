// Code generated by go-swagger; DO NOT EDIT.

package inventory_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// SearchIngredientsResponseLinks search ingredients response links
//
// swagger:model searchIngredientsResponseLinks
type SearchIngredientsResponseLinks struct {

	// The URI of the first page
	// Format: uri
	First strfmt.URI `json:"first,omitempty"`

	// The URI of the next page
	// Format: uri
	Next strfmt.URI `json:"next,omitempty"`

	// The URI of this page
	// Format: uri
	Self strfmt.URI `json:"self,omitempty"`
}

// Validate validates this search ingredients response links
func (m *SearchIngredientsResponseLinks) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateFirst(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateNext(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateSelf(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *SearchIngredientsResponseLinks) validateFirst(formats strfmt.Registry) error {
	if swag.IsZero(m.First) { // not required
		return nil
	}

	if err := validate.FormatOf("first", "body", "uri", m.First.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *SearchIngredientsResponseLinks) validateNext(formats strfmt.Registry) error {
	if swag.IsZero(m.Next) { // not required
		return nil
	}

	if err := validate.FormatOf("next", "body", "uri", m.Next.String(), formats); err != nil {
		return err
	}

	return nil
}

func (m *SearchIngredientsResponseLinks) validateSelf(formats strfmt.Registry) error {
	if swag.IsZero(m.Self) { // not required
		return nil
	}

	if err := validate.FormatOf("self", "body", "uri", m.Self.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this search ingredients response links based on context it is used
func (m *SearchIngredientsResponseLinks) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *SearchIngredientsResponseLinks) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *SearchIngredientsResponseLinks) UnmarshalBinary(b []byte) error {
	var res SearchIngredientsResponseLinks
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
