// Code generated by go-swagger; DO NOT EDIT.

package inventory_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdatePlatformParamsBody update platform params body
//
// swagger:model updatePlatformParamsBody
type UpdatePlatformParamsBody struct {

	// The last day on which this platform will be supported. Can be omitted to clear an existing date.
	// Format: date
	EndOfSupportDate strfmt.Date `json:"end_of_support_date,omitempty"`
}

// Validate validates this update platform params body
func (m *UpdatePlatformParamsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateEndOfSupportDate(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UpdatePlatformParamsBody) validateEndOfSupportDate(formats strfmt.Registry) error {
	if swag.IsZero(m.EndOfSupportDate) { // not required
		return nil
	}

	if err := validate.FormatOf("end_of_support_date", "body", "date", m.EndOfSupportDate.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this update platform params body based on context it is used
func (m *UpdatePlatformParamsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *UpdatePlatformParamsBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *UpdatePlatformParamsBody) UnmarshalBinary(b []byte) error {
	var res UpdatePlatformParamsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
