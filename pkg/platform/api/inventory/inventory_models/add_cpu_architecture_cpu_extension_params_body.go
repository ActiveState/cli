// Code generated by go-swagger; DO NOT EDIT.

package inventory_models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// AddCPUArchitectureCPUExtensionParamsBody add Cpu architecture Cpu extension params body
//
// swagger:model addCpuArchitectureCpuExtensionParamsBody
type AddCPUArchitectureCPUExtensionParamsBody struct {

	// The ID of the CPU extension that can be used with this architecture
	// Required: true
	// Format: uuid
	CPUExtensionID *strfmt.UUID `json:"cpu_extension_id"`
}

// Validate validates this add Cpu architecture Cpu extension params body
func (m *AddCPUArchitectureCPUExtensionParamsBody) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCPUExtensionID(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *AddCPUArchitectureCPUExtensionParamsBody) validateCPUExtensionID(formats strfmt.Registry) error {

	if err := validate.Required("cpu_extension_id", "body", m.CPUExtensionID); err != nil {
		return err
	}

	if err := validate.FormatOf("cpu_extension_id", "body", "uuid", m.CPUExtensionID.String(), formats); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this add Cpu architecture Cpu extension params body based on context it is used
func (m *AddCPUArchitectureCPUExtensionParamsBody) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *AddCPUArchitectureCPUExtensionParamsBody) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *AddCPUArchitectureCPUExtensionParamsBody) UnmarshalBinary(b []byte) error {
	var res AddCPUArchitectureCPUExtensionParamsBody
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
