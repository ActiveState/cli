// Code generated by go-swagger; DO NOT EDIT.

package headchef_operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	headchef_models "github.com/ActiveState/cli/pkg/platform/api/headchef/headchef_models"
)

// StartBuildV2Reader is a Reader for the StartBuildV2 structure.
type StartBuildV2Reader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *StartBuildV2Reader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewStartBuildV2Created()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 202:
		result := NewStartBuildV2Accepted()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewStartBuildV2BadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewStartBuildV2Unauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewStartBuildV2Forbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewStartBuildV2Default(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewStartBuildV2Created creates a StartBuildV2Created with default headers values
func NewStartBuildV2Created() *StartBuildV2Created {
	return &StartBuildV2Created{}
}

/*StartBuildV2Created handles this case with default header values.

The requested build has already ended. The response's build_state field is one of: build_succeeded or build_failed.
*/
type StartBuildV2Created struct {
	Payload *headchef_models.V2BuildStatusResponse
}

func (o *StartBuildV2Created) Error() string {
	return fmt.Sprintf("[POST /v2/builds][%d] startBuildV2Created  %+v", 201, o.Payload)
}

func (o *StartBuildV2Created) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(headchef_models.V2BuildStatusResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartBuildV2Accepted creates a StartBuildV2Accepted with default headers values
func NewStartBuildV2Accepted() *StartBuildV2Accepted {
	return &StartBuildV2Accepted{}
}

/*StartBuildV2Accepted handles this case with default header values.

The requested build has been started but hasn't yet completed.  The response's build_state field is build_running.
*/
type StartBuildV2Accepted struct {
	Payload *headchef_models.V2BuildStatusResponse
}

func (o *StartBuildV2Accepted) Error() string {
	return fmt.Sprintf("[POST /v2/builds][%d] startBuildV2Accepted  %+v", 202, o.Payload)
}

func (o *StartBuildV2Accepted) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(headchef_models.V2BuildStatusResponse)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartBuildV2BadRequest creates a StartBuildV2BadRequest with default headers values
func NewStartBuildV2BadRequest() *StartBuildV2BadRequest {
	return &StartBuildV2BadRequest{}
}

/*StartBuildV2BadRequest handles this case with default header values.

The submitted build request was invalid. Consult the message and error code in the response body for further details.
*/
type StartBuildV2BadRequest struct {
	Payload *headchef_models.InvalidBuildRequestError
}

func (o *StartBuildV2BadRequest) Error() string {
	return fmt.Sprintf("[POST /v2/builds][%d] startBuildV2BadRequest  %+v", 400, o.Payload)
}

func (o *StartBuildV2BadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(headchef_models.InvalidBuildRequestError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartBuildV2Unauthorized creates a StartBuildV2Unauthorized with default headers values
func NewStartBuildV2Unauthorized() *StartBuildV2Unauthorized {
	return &StartBuildV2Unauthorized{}
}

/*StartBuildV2Unauthorized handles this case with default header values.

The submitted build request contains a private recipe ID but the request couldn't be authenticated
*/
type StartBuildV2Unauthorized struct {
	Payload *headchef_models.RestAPIError
}

func (o *StartBuildV2Unauthorized) Error() string {
	return fmt.Sprintf("[POST /v2/builds][%d] startBuildV2Unauthorized  %+v", 401, o.Payload)
}

func (o *StartBuildV2Unauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(headchef_models.RestAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartBuildV2Forbidden creates a StartBuildV2Forbidden with default headers values
func NewStartBuildV2Forbidden() *StartBuildV2Forbidden {
	return &StartBuildV2Forbidden{}
}

/*StartBuildV2Forbidden handles this case with default header values.

The submitted build request contains a private recipe ID but the authenticated user isn't allow to access it
*/
type StartBuildV2Forbidden struct {
	Payload *headchef_models.RestAPIError
}

func (o *StartBuildV2Forbidden) Error() string {
	return fmt.Sprintf("[POST /v2/builds][%d] startBuildV2Forbidden  %+v", 403, o.Payload)
}

func (o *StartBuildV2Forbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(headchef_models.RestAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewStartBuildV2Default creates a StartBuildV2Default with default headers values
func NewStartBuildV2Default(code int) *StartBuildV2Default {
	return &StartBuildV2Default{
		_statusCode: code,
	}
}

/*StartBuildV2Default handles this case with default header values.

If there is an error processing the request
*/
type StartBuildV2Default struct {
	_statusCode int

	Payload *headchef_models.RestAPIError
}

// Code gets the status code for the start build v2 default response
func (o *StartBuildV2Default) Code() int {
	return o._statusCode
}

func (o *StartBuildV2Default) Error() string {
	return fmt.Sprintf("[POST /v2/builds][%d] startBuildV2 default  %+v", o._statusCode, o.Payload)
}

func (o *StartBuildV2Default) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(headchef_models.RestAPIError)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
