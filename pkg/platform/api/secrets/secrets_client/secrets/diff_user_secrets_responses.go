// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	secrets_models "github.com/ActiveState/cli/pkg/platform/api/secrets/secrets_models"
)

// DiffUserSecretsReader is a Reader for the DiffUserSecrets structure.
type DiffUserSecretsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DiffUserSecretsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewDiffUserSecretsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDiffUserSecretsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDiffUserSecretsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDiffUserSecretsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDiffUserSecretsOK creates a DiffUserSecretsOK with default headers values
func NewDiffUserSecretsOK() *DiffUserSecretsOK {
	return &DiffUserSecretsOK{}
}

/*DiffUserSecretsOK handles this case with default header values.

Success
*/
type DiffUserSecretsOK struct {
	Payload *secrets_models.UserSecretDiff
}

func (o *DiffUserSecretsOK) Error() string {
	return fmt.Sprintf("[GET /organizations/{organizationID}/user_secrets/{userID}/diff][%d] diffUserSecretsOK  %+v", 200, o.Payload)
}

func (o *DiffUserSecretsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(secrets_models.UserSecretDiff)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDiffUserSecretsUnauthorized creates a DiffUserSecretsUnauthorized with default headers values
func NewDiffUserSecretsUnauthorized() *DiffUserSecretsUnauthorized {
	return &DiffUserSecretsUnauthorized{}
}

/*DiffUserSecretsUnauthorized handles this case with default header values.

Invalid credentials
*/
type DiffUserSecretsUnauthorized struct {
	Payload *secrets_models.Message
}

func (o *DiffUserSecretsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /organizations/{organizationID}/user_secrets/{userID}/diff][%d] diffUserSecretsUnauthorized  %+v", 401, o.Payload)
}

func (o *DiffUserSecretsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(secrets_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDiffUserSecretsNotFound creates a DiffUserSecretsNotFound with default headers values
func NewDiffUserSecretsNotFound() *DiffUserSecretsNotFound {
	return &DiffUserSecretsNotFound{}
}

/*DiffUserSecretsNotFound handles this case with default header values.

Not Found
*/
type DiffUserSecretsNotFound struct {
	Payload *secrets_models.Message
}

func (o *DiffUserSecretsNotFound) Error() string {
	return fmt.Sprintf("[GET /organizations/{organizationID}/user_secrets/{userID}/diff][%d] diffUserSecretsNotFound  %+v", 404, o.Payload)
}

func (o *DiffUserSecretsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(secrets_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDiffUserSecretsInternalServerError creates a DiffUserSecretsInternalServerError with default headers values
func NewDiffUserSecretsInternalServerError() *DiffUserSecretsInternalServerError {
	return &DiffUserSecretsInternalServerError{}
}

/*DiffUserSecretsInternalServerError handles this case with default header values.

Server Error
*/
type DiffUserSecretsInternalServerError struct {
	Payload *secrets_models.Message
}

func (o *DiffUserSecretsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /organizations/{organizationID}/user_secrets/{userID}/diff][%d] diffUserSecretsInternalServerError  %+v", 500, o.Payload)
}

func (o *DiffUserSecretsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(secrets_models.Message)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
