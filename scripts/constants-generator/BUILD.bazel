load("@io_bazel_rules_go//go:def.bzl", "go_binary", "go_library", "go_test")

genrule(
    name = "generated",
    srcs = [
        # wonder if we should have a filegroup dependency so that constants
        # are rerun when the tree is dirty? Or alternatively if the tree is dirty
        # our workspace status command could just emit that.
        "main.go",
        "//internal/constants:go_default_library",
        "//internal/constants/preprocess:go_default_library",
    ],
    outs = ["generated.go"],
    
    tools = [":constants-generator"],

    # TODO: Replace this with a command that translactes into go bazel-out/stable-status.txt
    cmd = "$(location :constants-generator) > $@",
    # This give us access to bazel-out/stable-status.txt
    stamp = True,
)

go_library(
    name = "go_default_library",
    srcs = [
        "main.go",
    ],
    importpath = "github.com/ActiveState/cli/scripts/constants-generator",
    visibility = ["//visibility:private"],
    deps = [
        "//internal/constants/preprocess:go_default_library",
        "//internal/environment:go_default_library",
        "//scripts/constants-generator/vendor/github.com/dave/jennifer/jen:go_default_library",
    ],
)

go_binary(
    name = "constants-generator",
    embed = [":go_default_library"],
    visibility = ["//visibility:public"],
)

go_test(
    name = "go_default_test",
    srcs = ["main_test.go"],
    embed = [":go_default_library"],
    deps = [
        "//internal/environment:go_default_library",
        "//vendor/github.com/stretchr/testify/assert:go_default_library",
    ],
)
