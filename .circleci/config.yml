# Golang CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-go/ for more details
version: 2
defaults:
  steps:
    prepareEnv: &prepareEnv
      run: 
        name: Prepare Environment
        command: |
            git submodule update --init
            mkdir -p $TEST_RESULTS
            $GOROOT/bin/go get github.com/jstemmer/go-junit-report
            $GOROOT/bin/go get -u github.com/gobuffalo/packr/...
            $GOROOT/bin/go run scripts/constants-generator/main.go 
    runTests: &runTests
      run:
        name: Run unit tests
        command: |
            $GOROOT/bin/go test -parallel 12 -covermode=atomic -coverprofile=coverage.tmp `$GOROOT/bin/go list ./... | grep -v api` | tee ${TEST_RESULTS}/go-test.out
            $GOBIN/go-junit-report < ${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml
            echo 'mode: atomic' > coverage.txt && tail -n +2 coverage.tmp >> coverage.txt
            bash <(curl -s https://codecov.io/bash) -t a05a9f2a-2365-48a7-88dc-b62c6de254b7
    buildCli: &buildCli
      run: 
        name: Build the CLI
        command: |
          $GOBIN/packr
          make build
          ./build/state --version
    deployBits: &deployBits
      run: 
        name: Deploy bits
        command: make deploy-updates
    storeArtifacts: &storeArtifacts
      store_artifacts:
        path: /tmp/test-results
        destination: raw-test-output
    storeTestResults: &storeTestResults
      store_test_results:
        path: /tmp/test-results
jobs:
  build-linux:
    environment:
      TEST_RESULTS: /tmp/test-results
      GOBIN: /go/bin
      GOPATH: /go
      GOROOT: /usr/local/go
    docker:
      - image: circleci/golang:1.10
    working_directory: /go/src/github.com/ActiveState/cli
    steps:
      - checkout
      - <<: *prepareEnv
      - <<: *runTests
      - <<: *buildCli
      - <<: *deployBits
      - <<: *storeArtifacts
      - <<: *storeTestResults
  build-macos:
    environment:
      TEST_RESULTS: /tmp/test-results
      GOPATH: /private/tmp/gohome
      GOBIN: /private/tmp/gohome/bin
      GOROOT: /private/tmp/go
    macos:
      xcode: 9.2.0
    working_directory: /private/tmp/gohome/src/github.com/ActiveState/cli 
    steps:
      - checkout
      - run:
          name: Install Golang
          command: |
            cd /private/tmp
            curl https://dl.google.com/go/go1.9.5.darwin-amd64.tar.gz -o golang.tar.gz
            tar -xzf golang.tar.gz
      - <<: *prepareEnv
      - run:
          name: Run unit tests
          command: |
            make test
      - <<: *buildCli
      - <<: *deployBits
      - <<: *storeArtifacts
      - <<: *storeTestResults
workflows:
  version: 2
  build: 
    jobs:
      - build-linux
      - build-macos:
          requires:
            - build-linux