# Go
# Build your Go project.
# Add steps that test, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/go

trigger:
  - master

resources:
  containers:
  - container: linux
    image: activestate/cli-build-ci-linux:latest

jobs:

  - job: build_linux
    pool:
      vmImage: 'ubuntu-16.04'
    container: linux
    variables:
      - group: Secrets
      - name: SHELL
        value: bash
      - name: CI
        value: azure
    steps:
      - checkout: self
        fetchDepth: 1
      - script: |
          cc-test-reporter before-build

          state run preprocess

          # Run tests and convert output to junit format
          #go test -parallel 12 -covermode=atomic -coverprofile=c.out `go list ./... | grep -vE "(secrets-)?api/(client|model)"` | tee go-test.out
          go test -v -covermode=atomic -coverprofile=c.out github.com/ActiveState/cli/internal/virtualenvironment | go2xunit -output /tmp/tests.xml

          cc-test-reporter after-build --coverage-input-type gocov --prefix github.com/ActiveState/cli/ --exit-code $?

          # Tests appear to be breaking the authentication, so re-authenticate
          state auth --token $PLATFORM_API_TOKEN
        displayName: Unit Tests
      - script: |
          BRANCH=$(git rev-parse --abbrev-ref HEAD)
          if [[ "$BRANCH" == "master" ]]; then
            echo "Building for external use"
            APIENV=prod BRANCH_OVERRIDE=unstable state run build-external
          fi

          echo "Building for internal use"
          APIENV=prod state run build
        displayName: 'Build'
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: XUnit
          testResultsFiles: /tmp/tests.xml
          failTaskOnFailedTests: true