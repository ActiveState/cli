constants:
  - name: BUILD_TARGET
    value: state.exe
  - name: BUILD_DAEMON_TARGET
    value: state-svc.exe
  - name: BUILD_EXEC_TARGET
    value: state-exec.exe
  - name: BUILD_INSTALLER_TARGET
    value: state-installer.exe
  - name: BUILD_SYSTRAY_TARGET
    value: state-tray.exe
  - name: BUILD_UPDLG_TARGET
    value: state-update-dialog.exe
  - name: SYSTRAY_BUILDFLAGS
    value: -ldflags="-s -w -H=windowsgui"
  - name: SVC_BUILDFLAGS
    value: -ldflags="-s -w -H=windowsgui"
  - name: UPDLG_BUILDFLAGS
    value: -ldflags "-extldflags=-static -w -s -H windowsgui -X github.com/wailsapp/wails.BuildMode=${1:-debug}"
  - name: SCRIPT_EXT
    value: .ps1
scripts:
  - name: build-msi-state
    language: bash
    description: Build the state tool MSI, requires that you have wixtools installed and on PATH
    standalone: true
    if: eq .OS.Name "Windows"
    value: |
      export GOFLAGS='-mod=vendor'
      go build -o ./installers/msi-state/rmpath/rmpath.exe $constants.CLI_BUILDFLAGS ./installers/msi-state/rmpath/main.go
      candle.exe ./installers/msi-state/install.wxs -o ./installers/msi-state/install.wixobj -ext WixUIExtension -ext WixUtilExtension
      light.exe ./installers/msi-state/install.wixobj -o ./build/msi/state_tool.msi -sice:ICE91 -sice:ICE64 -ext WixUIExtension -ext WixUtilExtension
      rm ./build/msi/state_tool.wixpdb || true
  - name: build-msi-language
    language: bash
    description: Builds the language MSI, requires that you have .NET 4.x installed and on PATH
    standalone: true
    if: eq .OS.Name "Windows"
    value: |
      set -e
      export GOFLAGS='-mod=vendor'

      go run ./scripts/msi-installer-builder $*

      PROJECT_OWNER_NAME=${3}
      PROJECT_NAME=${PROJECT_OWNER_NAME##*/}

      dir=$(cmd //C echo %CD%)

      msbuild.exe installers/msi-language/Deploy.wixproj /target:Build "//p:Configuration=Release;Platform=x64;RunWixToolsOutOfProc=true;OutDir=$dir\\build\\msi-language\\"
      echo "Copying MSI to build/msi/${PROJECT_NAME}.msi"
      cp build/msi-language/en-us/Deploy.msi "build/msi/${PROJECT_NAME}.msi"
      rm -Rf build/msi-language
  - name: build-base-language-msi
    description: |
      Builds the language MSI with no project information, requires that you have .NET 4.x installed and on PATH.
      The resulting MSI requires project information be injected in order to be functional.
    standalone: true
    language: bash
    if: eq .OS.Name "Windows"
    value: |
      set -e

      export GOFLAGS='-mod=vendor'
      dir=$(cmd //C echo %CD%)

      go run ./scripts/msi-installer-builder base

      msbuild.exe installers/msi-language/Deploy.wixproj /target:Build "//p:Configuration=Release;Platform=x64;RunWixToolsOutOfProc=true;OutDir=$dir\\build\\msi-language\\"
      echo "Copying MSI to build/msi/base.msi"
      mkdir -p build/msi
      cp build/msi-language/en-us/Deploy.msi "build/msi/base.msi"
      rm -Rf build/msi-language
  - name: ci-build-languages-msi
    standalone: true
    language: bash
    value: |
      echo $MSI_CERT_BASE64 | base64 --decode > Cert.p12
      export PATH=/c/Program\ Files\ \(x86\)/Microsoft\ Visual\ Studio/2019/Enterprise/MSBuild/Current/Bin/:/c/Program\ Files\ \(x86\)/Windows\ Kits/10/bin/10.0.16299.0/x86/:$PATH
      export SHELL=bash
      state run build-msi-language ActivePerl Public ActiveState/ActivePerl-5.26 5.26.3001
      signtool.exe sign -d "ActiveState Language Installer" -f "Cert.p12" -p ${CODE_SIGNING_PASSWD} ./build/msi/ActivePerl-5.26.msi
      state run build-msi-language ActivePerl Public ActiveState/ActivePerl-5.28 5.28.1001
      signtool.exe sign -d "ActiveState Language Installer" -f "Cert.p12" -p ${CODE_SIGNING_PASSWD} ./build/msi/ActivePerl-5.28.msi
      state run build-base-language-msi
  - name: run-updlg
    description: Runs the update dialog in debug mode
    standalone: true
    language: bash
    value: |
      /c/Windows/System32/F12/IEChooser.exe & // debugger
      go run $constants.UPDLG_BUILDFLAGS github.com/ActiveState/cli/cmd/state-update-dialog
