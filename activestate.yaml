name: cli
owner: ActiveState
namespace: github.com/ActiveState/cli
variables:
  - name: ENV
    value: |
      GOPATH="${GOPATH:=`go env GOPATH`}"
      GOROOT="${GOROOT:=`go env GOROOT`}"
      PATH="${GOROOT}/bin:${GOPATH}/bin:${PATH}"
  - name: CLI_BUILDFLAGS
    value: -ldflags="-s -w"
  - name: CLI_PKGS
    value: ./state
scripts: &scripts
  - name: vendor
    value: | 
      go mod tidy
      go mod vendor
  - name: preprocess
    value: |
      if [ -z "$CI" ]; then
        $scripts.vendor
      fi
      packr
      go run scripts/constants-generator/main.go -- internal/constants/generated.go
  - name: build
    value: |
      $scripts.preprocess
      go build -o ./build/state ${variables.CLI_BUILDFLAGS} ${variables.CLI_PKGS}
      mkdir -p public/update
      go run scripts/update-generator/main.go -o public/update ./build/state
  - name: build-external
    value: |
      $scripts.preprocess
      go build -tags external -o ./build/state ${variables.CLI_BUILDFLAGS} ${variables.CLI_PKGS}
      mkdir -p public/update
      go run scripts/update-generator/main.go -o public/update ./build/state
  - name: install
    value: |
      $scripts.preprocess
      go install ${variables.CLI_BUILDFLAGS} ${variables.CLI_PKGS}
  - name: deploy-updates
    value: |
      go run scripts/s3-deployer/main.go public/update ca-central-1 cli-update update/state
      go run scripts/s3-deployer/main.go public/install.sh ca-central-1 cli-update update/state/install.sh
  - name: generate-api-client
    value: |
      WD=$(pwd)
      pushd pkg/platform/api/mono
      swagger generate client -f ${WD}/../TheHomeRepot/service/api/swagger/swagger.yml -A mono -a mono_operations -m mono_models -c mono_client
      popd
  - name: generate-secrets-client
    value: |
      WD=$(pwd)
      pushd pkg/platform/api/secrets
      swagger generate client -f ${WD}/../TheHomeRepot/service/secrets/api/swagger.yaml -A secrets -a secrets_operations -m secrets_models -c secrets_client
      popd
  - name: generate-headchef-client
    value: |
      WD=$(pwd)
      pushd pkg/platform/api/headchef
      swagger generate client -f ${WD}/../TheHomeRepot/repos/kitchen/head-chef/swagger.json -A headchef -a headchef_operations -m headchef_models -c headchef_client
      popd
  - name: generate-inventory-client
    value: |
      WD=$(pwd)
      pushd pkg/platform/api/inventory
      swagger generate client -f ${WD}/../TheHomeRepot/repos/kitchen/inventory-api/swagger.json -A inventory -a inventory_operations -m inventory_models -c inventory_client
      popd
  - name: generate-clients
    value: |
      $scripts.generate-api-client
      $scripts.generate-secrets-client
      $scripts.generate-headchef-client
      $scripts.generate-inventory-client
  - name: generate-locale
    value: python3 scripts/locale-generator.py
  - name: test
    value: |
      ACTIVESTATE_PROJECT="" go test -parallel 12 `go list ./... | grep -vE "(secrets-)?api/(client|model)"`
  - name: integration-tests
    standalone: true
    value: |
      python3 -m unittest discover -s test/integration -p '*_test.py'
  - name: clean
    value: |
      go clean
      rm -Rf build
  - name: run
    value: |
      $scripts.build
      build/state --help
commands: *scripts # temporary alias for backwards compatibility
events: &events
  - name: ACTIVATE
    value: |
      $variables.ENV
      $scripts.preprocess
      git config core.hooksPath .githooks
      if ! type "packr" &> /dev/null; then
        echo "packr was not found on your PATH, installing .."
        go get -u github.com/gobuffalo/packr/...
      fi
      if ! type "swagger" &> /dev/null; then
        echo "swagger was not found on your PATH, installing .."
        go get -u github.com/go-swagger/go-swagger/cmd/swagger
      fi
hooks: *events # temporary alias for backwards compatibility
