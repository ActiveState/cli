state_description:
  other: The ActiveState CLI allows you to easily switch between your ActiveState environments
activate_project:
  other: activate a project
hook_description:
  other: manage hooks
hook_add_description:
  other: 
    >
    add command to run on hook trigger
hook_remove_description:
  other: 
    >
    remove command for hook trigger
hook_header_id:
  other: ID
hook_header_hook:
  other: HOOK
hook_header_command:
  other: COMMAND
hook_listing_hooks:
  other: Listing configured hooks
usage_tpl:
  other: "
Usage:
  [[if .Runnable]][[BR]]
  [[.UseLine]] 
{{ range $key, $argument := .Arguments }}<{{$argument.Name}}> {{ end }}
  [[end]]
  [[if .HasAvailableSubCommands]][[BR]]
    [[.CommandPath]] [command]
  [[end]]

[[if gt (len .Aliases) 0]]
[[BR]][[BR]]
Aliases:[[BR]]
  [[.NameAndAliases]][[end]]

[[if .HasExample]]
[[BR]][[BR]]
Examples:[[BR]]
  [[.Example]]
[[end]]

[[if .HasAvailableSubCommands]][[BR]][[BR]]Available Commands:
[[range .Commands]][[if (or .IsAvailableCommand (eq .Name \"help\"))]][[BR]][[BR]]
  [[rpad .Name .NamePadding ]] [[.Short]]
[[end]][[end]][[end]]

[[if .HasAvailableLocalFlags]]
[[BR]][[BR]]
Flags:
[[BR]][[.LocalFlags.FlagUsages | trimTrailingWhitespaces]]
[[end]]

[[if .HasAvailableInheritedFlags]]
[[BR]][[BR]]
Global Flags: 
[[BR]][[.InheritedFlags.FlagUsages | trimTrailingWhitespaces]]
[[end]]

{{if gt (len .Arguments) 0}}
[[BR]][[BR]]
Arguments:[[BR]]
  {{ range $key, $argument := .Arguments }}
  <{{$argument.Name}}> {{if gt (len $argument.Required) 0}}          {{else}}(optional){{end}} {{$argument.Description}}[[BR]]
  {{ end }}
{{end}}

[[if .HasHelpSubCommands]]
[[BR]][[BR]]
Additional help topics: [[range .Commands]]
[[if .IsAdditionalHelpTopicCommand]][[BR]]
  [[rpad .CommandPath .CommandPathPadding]] [[.Short]]
[[end]][[end]][[end]]

[[if .HasAvailableSubCommands]]
[[BR]][[BR]]
Use \"[[.CommandPath]] [command] --help\" for more information about a command.[[end]][[BR]]"
arg_state_activate_url:
  other: URL
arg_state_activate_url_description:
  other: The URL of the repository that the project lives at
flag_state_locale_description:
  other: Set the localisation
flag_state_version_description:
  other: Show the version of our state executable
flag_state_activate_path_description:
  other: Where to install the project
flag_state_activate_branch_description:
  other: Clone this specific branch
flag_state_activate_cd_description:
  other: Whether or not to change into the project directory once created
info_state_activate_uri:
  other: Activating URI '{{.URI}}' into directory '{{.Dir}}'
info_state_activate_branch:
  other: "Checkout out branch: {{.Branch}}"
error_cannot_checkout_branch:
  other: Cannot checkout branch
error_state_activate:
  other: Unable to activate. Please refer to the above error message, resolve the issue, and run activate again.
error_state_activate_config_exists:
  other: Config file '{{.ConfigFile}}' not found in repository root. This file is needed to complete the activation process.
info_state_activate_cd:
  other: Changing into directory '{{.Dir}}'
error_unsupported_shell:
  other: "You are using an unsupported shell: {{.Shell}}"
error_could_not_make_symlink:
  other: "Could not create symlink, you may have to run this command with elevated permissions"
error_cannot_clone_uri:
  other: "Unable to clone the following URI: {{.URI}}"
error_could_not_activate_subshell:
  other: Could not activate a new subshell
info_deactivated:
  other: Deactivated {{.Owner}}/{{.Name}}
error_unsupported_language:
  other: "Unsupported language: {{.Language}}"
error_could_not_activate_venv:
  other: Could not activate the virtual environment
warning_language_not_yet_supported:
  other: "Warning: Your project configuration includes {{.Language}}, but this language is not yet supported"
error_could_not_run_hooks:
  other: Could not run hooks
info_running_hook:
  other: "Running hook: {{.Name}}"
hook_add_cannot_add_hook:
  other: "Cannot add hook '{{.Hook}} {{.Command}}'"
hook_add_cannot_add_existing_hook:
  other: "Identical hook already configured"
hook_remove_multiple_hooks:
  other: "More than one configured hook for name given.  Use ID instead."
hook_remove_cannot_remove:
  other: "Cannot remove hook"
error_missing_arg:
  other: "Argument missing: {{.Name}}"
arg_hook_add_hook:
  other: HOOK
arg_hook_add_hook_description:
  other: The hook that will be listened to
error_hook_add_invalid_hook:
  other: "Invalid hook given: {{.Name}}"
arg_hook_add_command:
  other: COMMAND
arg_hook_add_command_description:
  other: The command that will be run
arg_hook_remove_identifier:
  other: IDENTIFIER
arg_hook_remove_identifier_description:
  other: Identifies what hook to remove, can be a hash or a hook name
prompt_choose_hook:
  other: Which hook do you wish to remove?
err_no_projectfile:
  other: No activestate.yaml file exists in the current working directory
err_hook_cannot_list:
  other: Cannot list hooks
err_hook_cannot_find:
  other: Cannot find hooks matching your query
prompt_hook_choose_remove:
  other: Which hook would you like to remove?
prompt_hook_option:
  other: "{{.Hook.Name}}: `{{.Command}}` ({{.Constraints}}{{.Hash}})"
err_invalid_input:
  other: Invalid input received
hook_removed:
  other: "Hook removed: {{.Hook.Name}} ({{.Hash}})"
err_no_update_info:
  other: Cannot retrieve update information
no_update_available:
  other: You are using the latest version available
updating_to_version:
  other: Updating from {{.fromVersion}} to {{.toVersion}}
err_update_failed:
  other: Update failed, check the error log for more information
version_info:
  other: | 
    ActiveState CLI version {{.Version}}
    Revision {{.Revision}}
    Branch {{.Branch}}
update_complete:
  other: Update completed succesfully
update_hash_mismatch:
  other: The archive hash could not be verified
err_project_file_unavailable:
  other: Could not load the project file
err_project_parse:
  other: "Project file could not be parsed, the parser produced the following error: {{.Error}}"
err_failure_test:
  other: one {{.V0}} three {{.V1}}
distro_obtaining:
  other: "Obtaining Distribution"
distro_installing:
  other: "Installing Artifacts"
err_hash_mismatch:
  other: "Invalid file hash for file {{.V0}}, expected hash: {{.V2}}, got: {{.V1}}"
err_language_not_supported:
  other: "Language not yet supported: {{.V0}}"
err_artifact_not_supported:
  other: "Artifact not supported: {{.V0}}"
err_artifact_no_parent:
  other: "The given artifact has no parent: {{.V0}}. Only Language artifacts can be without parent."
err_invalid_status_code:
  other: "Invalid status code: {{.V0}}"
info_activating_state:
  other: "Activating state: {{.Owner}}/{{.Name}}"
info_state_active_repoexists:
  other: "Repo already exists: {{.Path}}"
err_no_scm_for_path:
  other: No source code control could be detected on {{.V0}}
panic_couldnt_detect_wd:
  other: "Could not detect working directory: {{.Error}}"